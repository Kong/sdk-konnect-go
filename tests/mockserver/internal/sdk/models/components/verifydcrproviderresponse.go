// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type VerifyDcrProviderResponseStatus string

const (
	VerifyDcrProviderResponseStatusSuccess VerifyDcrProviderResponseStatus = "success"
	VerifyDcrProviderResponseStatusFailed  VerifyDcrProviderResponseStatus = "failed"
)

func (e VerifyDcrProviderResponseStatus) ToPointer() *VerifyDcrProviderResponseStatus {
	return &e
}
func (e *VerifyDcrProviderResponseStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "success":
		fallthrough
	case "failed":
		*e = VerifyDcrProviderResponseStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for VerifyDcrProviderResponseStatus: %v", v)
	}
}

// VerifyDcrProviderResponse - A response containing the result of attempting to verify a DCR provider configuration.
type VerifyDcrProviderResponse struct {
	Status VerifyDcrProviderResponseStatus `json:"status"`
	Errors []string                        `json:"errors"`
}

func (o *VerifyDcrProviderResponse) GetStatus() VerifyDcrProviderResponseStatus {
	if o == nil {
		return VerifyDcrProviderResponseStatus("")
	}
	return o.Status
}

func (o *VerifyDcrProviderResponse) GetErrors() []string {
	if o == nil {
		return []string{}
	}
	return o.Errors
}
