// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

// PortalEmailConfig - Portal email config.
type PortalEmailConfig struct {
	ID string `json:"id"`
	// The domain name used for sending emails. Null means default.
	DomainName *string `json:"domain_name,omitempty"`
	// The name displayed in the 'From' field of emails.
	FromName string `json:"from_name"`
	// The email address used in the 'From' field.
	FromEmail string `json:"from_email"`
	// The email address used in the 'Reply-To' field.
	ReplyToEmail string `json:"reply_to_email"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (p PortalEmailConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PortalEmailConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PortalEmailConfig) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PortalEmailConfig) GetDomainName() *string {
	if o == nil {
		return nil
	}
	return o.DomainName
}

func (o *PortalEmailConfig) GetFromName() string {
	if o == nil {
		return ""
	}
	return o.FromName
}

func (o *PortalEmailConfig) GetFromEmail() string {
	if o == nil {
		return ""
	}
	return o.FromEmail
}

func (o *PortalEmailConfig) GetReplyToEmail() string {
	if o == nil {
		return ""
	}
	return o.ReplyToEmail
}

func (o *PortalEmailConfig) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *PortalEmailConfig) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
