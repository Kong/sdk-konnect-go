// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type EmailDelivery struct {
	Enabled      bool    `json:"enabled"`
	FromEmail    *string `json:"from_email"`
	ReplyToEmail *string `json:"reply_to_email"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (e EmailDelivery) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EmailDelivery) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *EmailDelivery) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *EmailDelivery) GetFromEmail() *string {
	if o == nil {
		return nil
	}
	return o.FromEmail
}

func (o *EmailDelivery) GetReplyToEmail() *string {
	if o == nil {
		return nil
	}
	return o.ReplyToEmail
}

func (o *EmailDelivery) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *EmailDelivery) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
