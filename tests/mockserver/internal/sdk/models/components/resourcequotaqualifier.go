// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

// ResourceQuotaQualifier - Enumeration of resources available for quota enforcement.
type ResourceQuotaQualifier string

const (
	ResourceQuotaQualifierCountProviderAccountsPerProvider  ResourceQuotaQualifier = "count/provider-accounts.per-provider"
	ResourceQuotaQualifierCountNetworksNotOffline           ResourceQuotaQualifier = "count/networks.not-offline"
	ResourceQuotaQualifierCountDataPlanesEstimate           ResourceQuotaQualifier = "count/data-planes-estimate"
	ResourceQuotaQualifierCountServerlessDataPlanesEstimate ResourceQuotaQualifier = "count/serverless-data-planes-estimate"
)

func (e ResourceQuotaQualifier) ToPointer() *ResourceQuotaQualifier {
	return &e
}
func (e *ResourceQuotaQualifier) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "count/provider-accounts.per-provider":
		fallthrough
	case "count/networks.not-offline":
		fallthrough
	case "count/data-planes-estimate":
		fallthrough
	case "count/serverless-data-planes-estimate":
		*e = ResourceQuotaQualifier(v)
		return nil
	default:
		return fmt.Errorf("invalid value for ResourceQuotaQualifier: %v", v)
	}
}
