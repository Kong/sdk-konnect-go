// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"mockserver/internal/sdk/utils"
	"time"
)

type APIDocumentSummaryWithChildren struct {
	// The API document identifier.
	ID string `json:"id"`
	// The title of the document. Used to populate the `<title>` tag for the page
	Title string `json:"title"`
	// The `slug` is used in generated URLs to provide human readable paths.
	//
	// Defaults to `slugify(title)`
	//
	Slug string `json:"slug"`
	// If `status=published` the document will be visible in your live portal
	Status *APIDocumentStatus `default:"unpublished" json:"status"`
	// API Documents may be rendered as a tree of files.
	//
	// Specify the `id` of another API Document as the `parent_document_id` to add some heirarchy do your documents.
	//
	ParentDocumentID *string `json:"parent_document_id"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time                        `json:"updated_at"`
	Children  []APIDocumentSummaryWithChildren `json:"children"`
}

func (a APIDocumentSummaryWithChildren) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *APIDocumentSummaryWithChildren) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *APIDocumentSummaryWithChildren) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *APIDocumentSummaryWithChildren) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *APIDocumentSummaryWithChildren) GetSlug() string {
	if o == nil {
		return ""
	}
	return o.Slug
}

func (o *APIDocumentSummaryWithChildren) GetStatus() *APIDocumentStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *APIDocumentSummaryWithChildren) GetParentDocumentID() *string {
	if o == nil {
		return nil
	}
	return o.ParentDocumentID
}

func (o *APIDocumentSummaryWithChildren) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *APIDocumentSummaryWithChildren) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *APIDocumentSummaryWithChildren) GetChildren() []APIDocumentSummaryWithChildren {
	if o == nil {
		return []APIDocumentSummaryWithChildren{}
	}
	return o.Children
}
