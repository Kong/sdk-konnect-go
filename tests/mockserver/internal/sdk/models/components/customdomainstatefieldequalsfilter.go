// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"mockserver/internal/sdk/utils"
)

type CustomDomainStateFieldEqualsComparison struct {
}

type CustomDomainStateFieldEqualsFilterType string

const (
	CustomDomainStateFieldEqualsFilterTypeCustomDomainState                      CustomDomainStateFieldEqualsFilterType = "CustomDomainState"
	CustomDomainStateFieldEqualsFilterTypeCustomDomainStateFieldEqualsComparison CustomDomainStateFieldEqualsFilterType = "CustomDomainStateFieldEqualsComparison"
)

// CustomDomainStateFieldEqualsFilter - Filter custom domain state by exact match.
type CustomDomainStateFieldEqualsFilter struct {
	CustomDomainState                      *CustomDomainState                      `queryParam:"inline"`
	CustomDomainStateFieldEqualsComparison *CustomDomainStateFieldEqualsComparison `queryParam:"inline"`

	Type CustomDomainStateFieldEqualsFilterType
}

func CreateCustomDomainStateFieldEqualsFilterCustomDomainState(customDomainState CustomDomainState) CustomDomainStateFieldEqualsFilter {
	typ := CustomDomainStateFieldEqualsFilterTypeCustomDomainState

	return CustomDomainStateFieldEqualsFilter{
		CustomDomainState: &customDomainState,
		Type:              typ,
	}
}

func CreateCustomDomainStateFieldEqualsFilterCustomDomainStateFieldEqualsComparison(customDomainStateFieldEqualsComparison CustomDomainStateFieldEqualsComparison) CustomDomainStateFieldEqualsFilter {
	typ := CustomDomainStateFieldEqualsFilterTypeCustomDomainStateFieldEqualsComparison

	return CustomDomainStateFieldEqualsFilter{
		CustomDomainStateFieldEqualsComparison: &customDomainStateFieldEqualsComparison,
		Type:                                   typ,
	}
}

func (u *CustomDomainStateFieldEqualsFilter) UnmarshalJSON(data []byte) error {

	var customDomainStateFieldEqualsComparison CustomDomainStateFieldEqualsComparison = CustomDomainStateFieldEqualsComparison{}
	if err := utils.UnmarshalJSON(data, &customDomainStateFieldEqualsComparison, "", true, true); err == nil {
		u.CustomDomainStateFieldEqualsComparison = &customDomainStateFieldEqualsComparison
		u.Type = CustomDomainStateFieldEqualsFilterTypeCustomDomainStateFieldEqualsComparison
		return nil
	}

	var customDomainState CustomDomainState = CustomDomainState("")
	if err := utils.UnmarshalJSON(data, &customDomainState, "", true, true); err == nil {
		u.CustomDomainState = &customDomainState
		u.Type = CustomDomainStateFieldEqualsFilterTypeCustomDomainState
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CustomDomainStateFieldEqualsFilter", string(data))
}

func (u CustomDomainStateFieldEqualsFilter) MarshalJSON() ([]byte, error) {
	if u.CustomDomainState != nil {
		return utils.MarshalJSON(u.CustomDomainState, "", true)
	}

	if u.CustomDomainStateFieldEqualsComparison != nil {
		return utils.MarshalJSON(u.CustomDomainStateFieldEqualsComparison, "", true)
	}

	return nil, errors.New("could not marshal union type CustomDomainStateFieldEqualsFilter: all fields are null")
}
