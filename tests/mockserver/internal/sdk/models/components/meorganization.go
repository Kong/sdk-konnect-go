// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"mockserver/internal/sdk/utils"
	"time"
)

// StateResponse - State of the organization
type StateResponse string

const (
	StateResponseActive   StateResponse = "active"
	StateResponseInactive StateResponse = "inactive"
	StateResponseDeleting StateResponse = "deleting"
	StateResponseDeleted  StateResponse = "deleted"
)

func (e StateResponse) ToPointer() *StateResponse {
	return &e
}
func (e *StateResponse) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		fallthrough
	case "deleting":
		fallthrough
	case "deleted":
		*e = StateResponse(v)
		return nil
	default:
		return fmt.Errorf("invalid value for StateResponse: %v", v)
	}
}

// MeOrganization - Me Organization
type MeOrganization struct {
	// UUID of the organization.
	ID *string `json:"id,omitempty"`
	// Name of the organization.
	Name *string `json:"name,omitempty"`
	// Owner ID of the organization.
	OwnerID *string `json:"owner_id,omitempty"`
	// Path to organization-specific login when single sign on (SSO) is enabled. Blank otherwise.
	LoginPath *string `json:"login_path,omitempty"`
	// Date the organization was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Date the organization was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// State of the organization
	State *StateResponse `json:"state,omitempty"`
	// The number of days an organization spends inactive before being deleted.
	RetentionPeriodDays *int64 `json:"retention_period_days,omitempty"`
}

func (m MeOrganization) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MeOrganization) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *MeOrganization) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *MeOrganization) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *MeOrganization) GetOwnerID() *string {
	if o == nil {
		return nil
	}
	return o.OwnerID
}

func (o *MeOrganization) GetLoginPath() *string {
	if o == nil {
		return nil
	}
	return o.LoginPath
}

func (o *MeOrganization) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *MeOrganization) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *MeOrganization) GetState() *StateResponse {
	if o == nil {
		return nil
	}
	return o.State
}

func (o *MeOrganization) GetRetentionPeriodDays() *int64 {
	if o == nil {
		return nil
	}
	return o.RetentionPeriodDays
}
