// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type AssignRoleToPortalTeamsRequest struct {
	// ID of the portal.
	PortalID string `pathParam:"style=simple,explode=false,name=portalId"`
	// ID of the team.
	TeamID string `pathParam:"style=simple,explode=false,name=teamId"`
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// Determines which page of the entities to retrieve.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Assign a role to a team.
	PortalAssignRoleRequest *components.PortalAssignRoleRequest `request:"mediaType=application/json"`
}

func (o *AssignRoleToPortalTeamsRequest) GetPortalID() string {
	if o == nil {
		return ""
	}
	return o.PortalID
}

func (o *AssignRoleToPortalTeamsRequest) GetTeamID() string {
	if o == nil {
		return ""
	}
	return o.TeamID
}

func (o *AssignRoleToPortalTeamsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *AssignRoleToPortalTeamsRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

func (o *AssignRoleToPortalTeamsRequest) GetPortalAssignRoleRequest() *components.PortalAssignRoleRequest {
	if o == nil {
		return nil
	}
	return o.PortalAssignRoleRequest
}

type AssignRoleToPortalTeamsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Details about the role assignment.
	PortalAssignedRoleResponse *components.PortalAssignedRoleResponse
}

func (o *AssignRoleToPortalTeamsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *AssignRoleToPortalTeamsResponse) GetPortalAssignedRoleResponse() *components.PortalAssignedRoleResponse {
	if o == nil {
		return nil
	}
	return o.PortalAssignedRoleResponse
}
