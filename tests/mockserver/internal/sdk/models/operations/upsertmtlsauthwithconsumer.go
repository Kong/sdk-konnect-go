// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpsertMtlsAuthWithConsumerRequest struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// Consumer ID for nested entities
	ConsumerIDForNestedEntities string `pathParam:"style=simple,explode=false,name=ConsumerIdForNestedEntities"`
	// ID of the MTLS-auth credential to lookup
	MTLSAuthID string `pathParam:"style=simple,explode=false,name=MTLSAuthId"`
	// Description of the MTLS-auth credential
	MTLSAuthWithoutParents components.MTLSAuthWithoutParents `request:"mediaType=application/json"`
}

func (o *UpsertMtlsAuthWithConsumerRequest) GetControlPlaneID() string {
	if o == nil {
		return ""
	}
	return o.ControlPlaneID
}

func (o *UpsertMtlsAuthWithConsumerRequest) GetConsumerIDForNestedEntities() string {
	if o == nil {
		return ""
	}
	return o.ConsumerIDForNestedEntities
}

func (o *UpsertMtlsAuthWithConsumerRequest) GetMTLSAuthID() string {
	if o == nil {
		return ""
	}
	return o.MTLSAuthID
}

func (o *UpsertMtlsAuthWithConsumerRequest) GetMTLSAuthWithoutParents() components.MTLSAuthWithoutParents {
	if o == nil {
		return components.MTLSAuthWithoutParents{}
	}
	return o.MTLSAuthWithoutParents
}

type UpsertMtlsAuthWithConsumerResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successfully upserted MTLS-auth credential
	MTLSAuth *components.MTLSAuth
}

func (o *UpsertMtlsAuthWithConsumerResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpsertMtlsAuthWithConsumerResponse) GetMTLSAuth() *components.MTLSAuth {
	if o == nil {
		return nil
	}
	return o.MTLSAuth
}
