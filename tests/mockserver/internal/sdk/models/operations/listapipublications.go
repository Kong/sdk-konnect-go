// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ListAPIPublicationsRequest struct {
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// Determines which page of the entities to retrieve.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Filters API Publications in the response.
	Filter *components.APIPublicationFilterParameters `queryParam:"style=deepObject,explode=true,name=filter"`
	// Sorts a collection of API publications. Supported sort attributes are:
	//   - portal_id
	//   - portal_name
	//   - api_id
	//   - api_name
	//   - created_at
	//   - updated_at
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
}

func (o *ListAPIPublicationsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListAPIPublicationsRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

func (o *ListAPIPublicationsRequest) GetFilter() *components.APIPublicationFilterParameters {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *ListAPIPublicationsRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

type ListAPIPublicationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Paginated list of API publications
	ListAPIPublicationResponse *components.ListAPIPublicationResponse
}

func (o *ListAPIPublicationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListAPIPublicationsResponse) GetListAPIPublicationResponse() *components.ListAPIPublicationResponse {
	if o == nil {
		return nil
	}
	return o.ListAPIPublicationResponse
}
