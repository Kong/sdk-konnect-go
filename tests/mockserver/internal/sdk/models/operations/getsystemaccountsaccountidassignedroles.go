// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

// GetSystemAccountsAccountIDAssignedRolesFilter - Filter roles returned in the response.
type GetSystemAccountsAccountIDAssignedRolesFilter struct {
	// Filters on the given string field value by exact match.
	RoleName *components.StringFieldEqualsFilterUnion `queryParam:"name=role_name"`
	// Filters on the given string field value by exact match.
	EntityTypeName *components.StringFieldEqualsFilterUnion `queryParam:"name=entity_type_name"`
}

func (o *GetSystemAccountsAccountIDAssignedRolesFilter) GetRoleName() *components.StringFieldEqualsFilterUnion {
	if o == nil {
		return nil
	}
	return o.RoleName
}

func (o *GetSystemAccountsAccountIDAssignedRolesFilter) GetEntityTypeName() *components.StringFieldEqualsFilterUnion {
	if o == nil {
		return nil
	}
	return o.EntityTypeName
}

type GetSystemAccountsAccountIDAssignedRolesRequest struct {
	// ID of the system account.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
	// Filter roles returned in the response.
	Filter *GetSystemAccountsAccountIDAssignedRolesFilter `queryParam:"style=deepObject,explode=true,name=filter"`
}

func (o *GetSystemAccountsAccountIDAssignedRolesRequest) GetAccountID() string {
	if o == nil {
		return ""
	}
	return o.AccountID
}

func (o *GetSystemAccountsAccountIDAssignedRolesRequest) GetFilter() *GetSystemAccountsAccountIDAssignedRolesFilter {
	if o == nil {
		return nil
	}
	return o.Filter
}

type GetSystemAccountsAccountIDAssignedRolesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A paginated list response for a collection of assigned roles.
	AssignedRoleCollection *components.AssignedRoleCollection
}

func (o *GetSystemAccountsAccountIDAssignedRolesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetSystemAccountsAccountIDAssignedRolesResponse) GetAssignedRoleCollection() *components.AssignedRoleCollection {
	if o == nil {
		return nil
	}
	return o.AssignedRoleCollection
}
