// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

// ListTeamRolesFilter - Filter roles returned in the response.
type ListTeamRolesFilter struct {
	// Filters on the given string field value by exact match.
	RoleName *string `queryParam:"name=role_name"`
	// Filters on the given string field value by exact match.
	EntityTypeName *string `queryParam:"name=entity_type_name"`
}

func (o *ListTeamRolesFilter) GetRoleName() *string {
	if o == nil {
		return nil
	}
	return o.RoleName
}

func (o *ListTeamRolesFilter) GetEntityTypeName() *string {
	if o == nil {
		return nil
	}
	return o.EntityTypeName
}

type ListTeamRolesRequest struct {
	// The team ID
	TeamID string `pathParam:"style=simple,explode=false,name=teamId"`
	// Filter roles returned in the response.
	Filter *ListTeamRolesFilter `queryParam:"style=deepObject,explode=true,name=filter"`
}

func (o *ListTeamRolesRequest) GetTeamID() string {
	if o == nil {
		return ""
	}
	return o.TeamID
}

func (o *ListTeamRolesRequest) GetFilter() *ListTeamRolesFilter {
	if o == nil {
		return nil
	}
	return o.Filter
}

type ListTeamRolesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A paginated list response for a collection of assigned roles.
	AssignedRoleCollection *components.AssignedRoleCollection
}

func (o *ListTeamRolesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListTeamRolesResponse) GetAssignedRoleCollection() *components.AssignedRoleCollection {
	if o == nil {
		return nil
	}
	return o.AssignedRoleCollection
}
