// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ListAPIVersionsRequest struct {
	// The UUID API identifier
	APIID string `pathParam:"style=simple,explode=false,name=apiId"`
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// Determines which page of the entities to retrieve.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Filters API Version in the response.
	Filter *components.APIVersionFilterParameters `queryParam:"style=deepObject,explode=true,name=filter"`
}

func (o *ListAPIVersionsRequest) GetAPIID() string {
	if o == nil {
		return ""
	}
	return o.APIID
}

func (o *ListAPIVersionsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListAPIVersionsRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

func (o *ListAPIVersionsRequest) GetFilter() *components.APIVersionFilterParameters {
	if o == nil {
		return nil
	}
	return o.Filter
}

type ListAPIVersionsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// List of API specifications (OpenAPI or AsyncAPI)
	ListAPIVersionResponse *components.ListAPIVersionResponse
}

func (o *ListAPIVersionsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListAPIVersionsResponse) GetListAPIVersionResponse() *components.ListAPIVersionResponse {
	if o == nil {
		return nil
	}
	return o.ListAPIVersionResponse
}
