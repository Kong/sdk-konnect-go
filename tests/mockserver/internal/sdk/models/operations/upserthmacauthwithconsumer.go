// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpsertHmacAuthWithConsumerRequest struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// Consumer ID for nested entities
	ConsumerIDForNestedEntities string `pathParam:"style=simple,explode=false,name=ConsumerIdForNestedEntities"`
	// ID of the HMAC-auth credential to lookup
	HMACAuthID string `pathParam:"style=simple,explode=false,name=HMACAuthId"`
	// Description of the HMAC-auth credential
	HMACAuthWithoutParents components.HMACAuthWithoutParents `request:"mediaType=application/json"`
}

func (o *UpsertHmacAuthWithConsumerRequest) GetControlPlaneID() string {
	if o == nil {
		return ""
	}
	return o.ControlPlaneID
}

func (o *UpsertHmacAuthWithConsumerRequest) GetConsumerIDForNestedEntities() string {
	if o == nil {
		return ""
	}
	return o.ConsumerIDForNestedEntities
}

func (o *UpsertHmacAuthWithConsumerRequest) GetHMACAuthID() string {
	if o == nil {
		return ""
	}
	return o.HMACAuthID
}

func (o *UpsertHmacAuthWithConsumerRequest) GetHMACAuthWithoutParents() components.HMACAuthWithoutParents {
	if o == nil {
		return components.HMACAuthWithoutParents{}
	}
	return o.HMACAuthWithoutParents
}

type UpsertHmacAuthWithConsumerResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successfully upserted HMAC-auth credential
	HMACAuth *components.HMACAuth
}

func (o *UpsertHmacAuthWithConsumerResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpsertHmacAuthWithConsumerResponse) GetHMACAuth() *components.HMACAuth {
	if o == nil {
		return nil
	}
	return o.HMACAuth
}
