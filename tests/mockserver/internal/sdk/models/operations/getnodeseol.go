// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type GetNodesEolRequest struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// Request the next page of data, starting with the item after this parameter.
	PageAfter *string `queryParam:"style=form,explode=true,name=page[after]"`
}

func (o *GetNodesEolRequest) GetControlPlaneID() string {
	if o == nil {
		return ""
	}
	return o.ControlPlaneID
}

func (o *GetNodesEolRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *GetNodesEolRequest) GetPageAfter() *string {
	if o == nil {
		return nil
	}
	return o.PageAfter
}

type GetNodesEolResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Example response
	ListNodesEol *components.ListNodesEol
}

func (o *GetNodesEolResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetNodesEolResponse) GetListNodesEol() *components.ListNodesEol {
	if o == nil {
		return nil
	}
	return o.ListNodesEol
}
