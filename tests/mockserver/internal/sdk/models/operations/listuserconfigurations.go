// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ListUserConfigurationsRequest struct {
	// Filters a collection of configurations.
	Filter *components.ConfigurationFilterParameters `queryParam:"style=deepObject,explode=true,name=filter"`
}

func (o *ListUserConfigurationsRequest) GetFilter() *components.ConfigurationFilterParameters {
	if o == nil {
		return nil
	}
	return o.Filter
}

type ListUserConfigurationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A paginated list response for all notification events and user subscriptions.
	UserConfigurationListResponse *components.UserConfigurationListResponse
}

func (o *ListUserConfigurationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListUserConfigurationsResponse) GetUserConfigurationListResponse() *components.UserConfigurationListResponse {
	if o == nil {
		return nil
	}
	return o.UserConfigurationListResponse
}
