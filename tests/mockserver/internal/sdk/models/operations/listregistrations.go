// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

// ListRegistrationsFilter - Filter application registrations returned in the response.
type ListRegistrationsFilter struct {
	// Filters on the given string field value by exact match inequality.
	DeveloperID *components.UUIDFieldFilter `queryParam:"name=developer_id"`
	// Filters on the given string field value by exact match inequality.
	ApplicationName *components.StringFieldFilter `queryParam:"name=application_name"`
	// Filters on the given string field value by exact match inequality.
	Status *components.StringFieldFilter `queryParam:"name=status"`
}

func (o *ListRegistrationsFilter) GetDeveloperID() *components.UUIDFieldFilter {
	if o == nil {
		return nil
	}
	return o.DeveloperID
}

func (o *ListRegistrationsFilter) GetApplicationName() *components.StringFieldFilter {
	if o == nil {
		return nil
	}
	return o.ApplicationName
}

func (o *ListRegistrationsFilter) GetStatus() *components.StringFieldFilter {
	if o == nil {
		return nil
	}
	return o.Status
}

type ListRegistrationsRequest struct {
	// ID of the portal.
	PortalID string `pathParam:"style=simple,explode=false,name=portalId"`
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// Determines which page of the entities to retrieve.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Sorts a collection of application registrations. Supported sort attributes are:
	//
	//
	//
	//   - created_at
	//   - updated_at
	//   - developer_id
	//   - status
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Filter application registrations returned in the response.
	Filter *ListRegistrationsFilter `queryParam:"style=deepObject,explode=true,name=filter"`
}

func (o *ListRegistrationsRequest) GetPortalID() string {
	if o == nil {
		return ""
	}
	return o.PortalID
}

func (o *ListRegistrationsRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListRegistrationsRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

func (o *ListRegistrationsRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListRegistrationsRequest) GetFilter() *ListRegistrationsFilter {
	if o == nil {
		return nil
	}
	return o.Filter
}

type ListRegistrationsResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A paginated list of application registrations.
	ListApplicationRegistrationsResponse *components.ListApplicationRegistrationsResponse
}

func (o *ListRegistrationsResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListRegistrationsResponse) GetListApplicationRegistrationsResponse() *components.ListApplicationRegistrationsResponse {
	if o == nil {
		return nil
	}
	return o.ListApplicationRegistrationsResponse
}
