// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpsertSniWithCertificateRequest struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// ID of the Certificate to lookup
	CertificateID string `pathParam:"style=simple,explode=false,name=CertificateId"`
	// ID of the SNI to lookup
	SNIID string `pathParam:"style=simple,explode=false,name=SNIId"`
	// Description of the SNI
	SNIWithoutParents components.SNIWithoutParents `request:"mediaType=application/json"`
}

func (o *UpsertSniWithCertificateRequest) GetControlPlaneID() string {
	if o == nil {
		return ""
	}
	return o.ControlPlaneID
}

func (o *UpsertSniWithCertificateRequest) GetCertificateID() string {
	if o == nil {
		return ""
	}
	return o.CertificateID
}

func (o *UpsertSniWithCertificateRequest) GetSNIID() string {
	if o == nil {
		return ""
	}
	return o.SNIID
}

func (o *UpsertSniWithCertificateRequest) GetSNIWithoutParents() components.SNIWithoutParents {
	if o == nil {
		return components.SNIWithoutParents{}
	}
	return o.SNIWithoutParents
}

type UpsertSniWithCertificateResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successfully upserted SNI
	Sni *components.Sni
}

func (o *UpsertSniWithCertificateResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpsertSniWithCertificateResponse) GetSni() *components.Sni {
	if o == nil {
		return nil
	}
	return o.Sni
}
