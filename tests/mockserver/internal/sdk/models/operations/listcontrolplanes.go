// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ListControlPlanesRequest struct {
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// Determines which page of the entities to retrieve.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Filters a collection of control-planes.
	Filter *components.ControlPlaneFilterParameters `queryParam:"style=deepObject,explode=true,name=filter"`
	// Filter control planes in the response by associated labels.
	Labels *string `queryParam:"style=form,explode=true,name=labels"`
	// Sorts a collection of control-planes. Supported sort attributes are:
	//   - created_at
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
}

func (o *ListControlPlanesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListControlPlanesRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

func (o *ListControlPlanesRequest) GetFilter() *components.ControlPlaneFilterParameters {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *ListControlPlanesRequest) GetLabels() *string {
	if o == nil {
		return nil
	}
	return o.Labels
}

func (o *ListControlPlanesRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

type ListControlPlanesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A paginated list response for a collection of control planes.
	ListControlPlanesResponse *components.ListControlPlanesResponse
}

func (o *ListControlPlanesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListControlPlanesResponse) GetListControlPlanesResponse() *components.ListControlPlanesResponse {
	if o == nil {
		return nil
	}
	return o.ListControlPlanesResponse
}
