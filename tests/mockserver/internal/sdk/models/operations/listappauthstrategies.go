// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

// ListAppAuthStrategiesFilter - Filter application auth strategies returned in the response.
type ListAppAuthStrategiesFilter struct {
	// Filters on the given string field value by either exact or fuzzy match.
	StrategyType *components.StringFieldFilter `queryParam:"name=strategy_type"`
	// Filters on the given string field value by either exact or fuzzy match.
	Name *components.StringFieldFilter `queryParam:"name=name"`
	// Filters on the given string field value by either exact or fuzzy match.
	DisplayName *components.StringFieldFilter `queryParam:"name=display_name"`
	// Filters on the given UUID field value by exact match.
	DcrProviderID *components.UUIDFieldFilter `queryParam:"name=dcr_provider_id"`
	// Filters on the given string field value by either exact or fuzzy match.
	DcrProviderName *components.StringFieldFilter `queryParam:"name=dcr_provider_name"`
	// Filters on the given string field value by either exact or fuzzy match.
	DcrProviderType *components.StringFieldFilter `queryParam:"name=dcr_provider_type"`
}

func (o *ListAppAuthStrategiesFilter) GetStrategyType() *components.StringFieldFilter {
	if o == nil {
		return nil
	}
	return o.StrategyType
}

func (o *ListAppAuthStrategiesFilter) GetName() *components.StringFieldFilter {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ListAppAuthStrategiesFilter) GetDisplayName() *components.StringFieldFilter {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *ListAppAuthStrategiesFilter) GetDcrProviderID() *components.UUIDFieldFilter {
	if o == nil {
		return nil
	}
	return o.DcrProviderID
}

func (o *ListAppAuthStrategiesFilter) GetDcrProviderName() *components.StringFieldFilter {
	if o == nil {
		return nil
	}
	return o.DcrProviderName
}

func (o *ListAppAuthStrategiesFilter) GetDcrProviderType() *components.StringFieldFilter {
	if o == nil {
		return nil
	}
	return o.DcrProviderType
}

type ListAppAuthStrategiesRequest struct {
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// Determines which page of the entities to retrieve.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Sorts a collection of application auth strategies. Supported sort attributes are:
	//
	//
	//
	//   - created_at
	//   - updated_at
	//   - strategy_type
	//   - name
	//   - display_name
	//   - dcr_provider_id
	//   - dcr_provider_name
	//   - dcr_provider_type
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Filter application auth strategies returned in the response.
	Filter *ListAppAuthStrategiesFilter `queryParam:"style=deepObject,explode=true,name=filter"`
}

func (o *ListAppAuthStrategiesRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListAppAuthStrategiesRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

func (o *ListAppAuthStrategiesRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListAppAuthStrategiesRequest) GetFilter() *ListAppAuthStrategiesFilter {
	if o == nil {
		return nil
	}
	return o.Filter
}

type ListAppAuthStrategiesResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A paginated list response for a collection of application auth strategies.
	ListAppAuthStrategiesResponse *components.ListAppAuthStrategiesResponse
}

func (o *ListAppAuthStrategiesResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListAppAuthStrategiesResponse) GetListAppAuthStrategiesResponse() *components.ListAppAuthStrategiesResponse {
	if o == nil {
		return nil
	}
	return o.ListAppAuthStrategiesResponse
}
