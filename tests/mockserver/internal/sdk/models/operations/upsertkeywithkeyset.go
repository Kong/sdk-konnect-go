// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type UpsertKeyWithKeySetRequest struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// ID of the KeySet to lookup
	KeySetID string `pathParam:"style=simple,explode=false,name=KeySetId"`
	// ID of the Key to lookup
	KeyID string `pathParam:"style=simple,explode=false,name=KeyId"`
	// Description of the Key
	KeyWithoutParents components.KeyWithoutParents `request:"mediaType=application/json"`
}

func (o *UpsertKeyWithKeySetRequest) GetControlPlaneID() string {
	if o == nil {
		return ""
	}
	return o.ControlPlaneID
}

func (o *UpsertKeyWithKeySetRequest) GetKeySetID() string {
	if o == nil {
		return ""
	}
	return o.KeySetID
}

func (o *UpsertKeyWithKeySetRequest) GetKeyID() string {
	if o == nil {
		return ""
	}
	return o.KeyID
}

func (o *UpsertKeyWithKeySetRequest) GetKeyWithoutParents() components.KeyWithoutParents {
	if o == nil {
		return components.KeyWithoutParents{}
	}
	return o.KeyWithoutParents
}

type UpsertKeyWithKeySetResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successfully upserted Key
	Key *components.Key
}

func (o *UpsertKeyWithKeySetResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *UpsertKeyWithKeySetResponse) GetKey() *components.Key {
	if o == nil {
		return nil
	}
	return o.Key
}
