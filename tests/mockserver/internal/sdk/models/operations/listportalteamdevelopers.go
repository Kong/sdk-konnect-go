// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

// ListPortalTeamDevelopersFilter - Filter developers returned in the response.
type ListPortalTeamDevelopersFilter struct {
	// Filters on the given string field value by exact match inequality.
	Email *components.StringFieldFilter `queryParam:"name=email"`
	// Filters on the given string field value by exact match inequality.
	FullName *components.StringFieldFilter `queryParam:"name=full_name"`
	// Filters on the given string field value by exact match inequality.
	Attributes *components.StringFieldFilter `queryParam:"name=attributes"`
	// Filter by a boolean value (true/false).
	Active *bool `queryParam:"name=active"`
}

func (o *ListPortalTeamDevelopersFilter) GetEmail() *components.StringFieldFilter {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *ListPortalTeamDevelopersFilter) GetFullName() *components.StringFieldFilter {
	if o == nil {
		return nil
	}
	return o.FullName
}

func (o *ListPortalTeamDevelopersFilter) GetAttributes() *components.StringFieldFilter {
	if o == nil {
		return nil
	}
	return o.Attributes
}

func (o *ListPortalTeamDevelopersFilter) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

type ListPortalTeamDevelopersRequest struct {
	// ID of the portal.
	PortalID string `pathParam:"style=simple,explode=false,name=portalId"`
	// ID of the team.
	TeamID string `pathParam:"style=simple,explode=false,name=teamId"`
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// Determines which page of the entities to retrieve.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Filter developers returned in the response.
	Filter *ListPortalTeamDevelopersFilter `queryParam:"style=deepObject,explode=true,name=filter"`
}

func (o *ListPortalTeamDevelopersRequest) GetPortalID() string {
	if o == nil {
		return ""
	}
	return o.PortalID
}

func (o *ListPortalTeamDevelopersRequest) GetTeamID() string {
	if o == nil {
		return ""
	}
	return o.TeamID
}

func (o *ListPortalTeamDevelopersRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListPortalTeamDevelopersRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

func (o *ListPortalTeamDevelopersRequest) GetFilter() *ListPortalTeamDevelopersFilter {
	if o == nil {
		return nil
	}
	return o.Filter
}

type ListPortalTeamDevelopersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A paginated list of basic developer information.
	ListBasicDevelopersResponse *components.ListBasicDevelopersResponse
}

func (o *ListPortalTeamDevelopersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListPortalTeamDevelopersResponse) GetListBasicDevelopersResponse() *components.ListBasicDevelopersResponse {
	if o == nil {
		return nil
	}
	return o.ListBasicDevelopersResponse
}
