// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

// ListDevelopersByApplicationFilter - Filter application developers returned in the response.
type ListDevelopersByApplicationFilter struct {
	// Filters on the given string field value by exact match inequality.
	ID *components.StringFieldFilter `queryParam:"name=id"`
}

func (o *ListDevelopersByApplicationFilter) GetID() *components.StringFieldFilter {
	if o == nil {
		return nil
	}
	return o.ID
}

type ListDevelopersByApplicationRequest struct {
	// ID of the portal.
	PortalID string `pathParam:"style=simple,explode=false,name=portalId"`
	// ID of the application.
	ApplicationID string `pathParam:"style=simple,explode=false,name=applicationId"`
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// Determines which page of the entities to retrieve.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
	// Sorts a set of developers for an application. Supported sort attributes are:
	//
	//
	//
	//   - id
	//
	Sort *string `queryParam:"style=form,explode=true,name=sort"`
	// Filter application developers returned in the response.
	Filter *ListDevelopersByApplicationFilter `queryParam:"style=deepObject,explode=true,name=filter"`
}

func (o *ListDevelopersByApplicationRequest) GetPortalID() string {
	if o == nil {
		return ""
	}
	return o.PortalID
}

func (o *ListDevelopersByApplicationRequest) GetApplicationID() string {
	if o == nil {
		return ""
	}
	return o.ApplicationID
}

func (o *ListDevelopersByApplicationRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListDevelopersByApplicationRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

func (o *ListDevelopersByApplicationRequest) GetSort() *string {
	if o == nil {
		return nil
	}
	return o.Sort
}

func (o *ListDevelopersByApplicationRequest) GetFilter() *ListDevelopersByApplicationFilter {
	if o == nil {
		return nil
	}
	return o.Filter
}

type ListDevelopersByApplicationResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A paginated list developers of an application.
	ListApplicationDevelopersResponse *components.ListApplicationDevelopersResponse
}

func (o *ListDevelopersByApplicationResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListDevelopersByApplicationResponse) GetListApplicationDevelopersResponse() *components.ListApplicationDevelopersResponse {
	if o == nil {
		return nil
	}
	return o.ListApplicationDevelopersResponse
}
