// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type CreateKeyAuthWithConsumerRequest struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// Consumer ID for nested entities
	ConsumerIDForNestedEntities string `pathParam:"style=simple,explode=false,name=ConsumerIdForNestedEntities"`
	// Description of new API-key for creation
	KeyAuthWithoutParents *components.KeyAuthWithoutParents `request:"mediaType=application/json"`
}

func (o *CreateKeyAuthWithConsumerRequest) GetControlPlaneID() string {
	if o == nil {
		return ""
	}
	return o.ControlPlaneID
}

func (o *CreateKeyAuthWithConsumerRequest) GetConsumerIDForNestedEntities() string {
	if o == nil {
		return ""
	}
	return o.ConsumerIDForNestedEntities
}

func (o *CreateKeyAuthWithConsumerRequest) GetKeyAuthWithoutParents() *components.KeyAuthWithoutParents {
	if o == nil {
		return nil
	}
	return o.KeyAuthWithoutParents
}

type CreateKeyAuthWithConsumerResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// Successfully created API-key
	KeyAuth *components.KeyAuth
}

func (o *CreateKeyAuthWithConsumerResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *CreateKeyAuthWithConsumerResponse) GetKeyAuth() *components.KeyAuth {
	if o == nil {
		return nil
	}
	return o.KeyAuth
}
