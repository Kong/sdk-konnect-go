// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

type ListPrivateDNSRequest struct {
	// The network to operate on.
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
	// Filters supported for Private DNS.
	Filter *components.PrivateDNSFilterParameters `queryParam:"style=deepObject,explode=true,name=filter"`
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// Determines which page of the entities to retrieve.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
}

func (o *ListPrivateDNSRequest) GetNetworkID() string {
	if o == nil {
		return ""
	}
	return o.NetworkID
}

func (o *ListPrivateDNSRequest) GetFilter() *components.PrivateDNSFilterParameters {
	if o == nil {
		return nil
	}
	return o.Filter
}

func (o *ListPrivateDNSRequest) GetPageSize() *int64 {
	if o == nil {
		return nil
	}
	return o.PageSize
}

func (o *ListPrivateDNSRequest) GetPageNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.PageNumber
}

type ListPrivateDNSResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A paginated list for a collection of Private DNS for a network.
	ListPrivateDNSResponse *components.ListPrivateDNSResponse
}

func (o *ListPrivateDNSResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *ListPrivateDNSResponse) GetListPrivateDNSResponse() *components.ListPrivateDNSResponse {
	if o == nil {
		return nil
	}
	return o.ListPrivateDNSResponse
}
