// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"mockserver/internal/sdk/models/components"
)

// GetPortalIdentityProvidersFilter - Filter identity providers returned in the response.
type GetPortalIdentityProvidersFilter struct {
	// Filter a string value by exact match.
	Type *string `queryParam:"name=type"`
}

func (o *GetPortalIdentityProvidersFilter) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

type GetPortalIdentityProvidersRequest struct {
	// ID of the portal.
	PortalID string `pathParam:"style=simple,explode=false,name=portalId"`
	// Filter identity providers returned in the response.
	Filter *GetPortalIdentityProvidersFilter `queryParam:"style=deepObject,explode=true,name=filter"`
}

func (o *GetPortalIdentityProvidersRequest) GetPortalID() string {
	if o == nil {
		return ""
	}
	return o.PortalID
}

func (o *GetPortalIdentityProvidersRequest) GetFilter() *GetPortalIdentityProvidersFilter {
	if o == nil {
		return nil
	}
	return o.Filter
}

type GetPortalIdentityProvidersResponse struct {
	HTTPMeta components.HTTPMetadata `json:"-"`
	// A collection of identity providers. This response contains a collection of identity providers, which may  include both OIDC and SAML identity providers.
	//
	IdentityProviders []components.IdentityProvider
}

func (o *GetPortalIdentityProvidersResponse) GetHTTPMeta() components.HTTPMetadata {
	if o == nil {
		return components.HTTPMetadata{}
	}
	return o.HTTPMeta
}

func (o *GetPortalIdentityProvidersResponse) GetIdentityProviders() []components.IdentityProvider {
	if o == nil {
		return nil
	}
	return o.IdentityProviders
}
