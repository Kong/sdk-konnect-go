// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type KeyAuthWithoutParentsConsumer struct {
	ID *string `json:"id,omitempty"`
}

func (k *KeyAuthWithoutParentsConsumer) GetID() *string {
	if k == nil {
		return nil
	}
	return k.ID
}

type KeyAuthWithoutParents struct {
	Consumer *KeyAuthWithoutParentsConsumer `json:"consumer,omitempty"`
	// Unix epoch when the resource was created.
	CreatedAt *int64 `json:"created_at,omitempty"`
	// A string representing a UUID (universally unique identifier).
	ID  *string `json:"id,omitempty"`
	Key *string `default:"null" json:"key"`
	// A set of strings representing tags.
	Tags []string `json:"tags,omitempty"`
	// key-auth ttl in seconds
	TTL *int64 `default:"null" json:"ttl"`
}

func (k KeyAuthWithoutParents) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(k, "", false)
}

func (k *KeyAuthWithoutParents) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &k, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (k *KeyAuthWithoutParents) GetConsumer() *KeyAuthWithoutParentsConsumer {
	if k == nil {
		return nil
	}
	return k.Consumer
}

func (k *KeyAuthWithoutParents) GetCreatedAt() *int64 {
	if k == nil {
		return nil
	}
	return k.CreatedAt
}

func (k *KeyAuthWithoutParents) GetID() *string {
	if k == nil {
		return nil
	}
	return k.ID
}

func (k *KeyAuthWithoutParents) GetKey() *string {
	if k == nil {
		return nil
	}
	return k.Key
}

func (k *KeyAuthWithoutParents) GetTags() []string {
	if k == nil {
		return nil
	}
	return k.Tags
}

func (k *KeyAuthWithoutParents) GetTTL() *int64 {
	if k == nil {
		return nil
	}
	return k.TTL
}
