// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type GetApplicationResponseType string

const (
	GetApplicationResponseTypeClientCredentialsApplication GetApplicationResponseType = "ClientCredentialsApplication"
	GetApplicationResponseTypeKeyAuthApplication           GetApplicationResponseType = "KeyAuthApplication"
)

// GetApplicationResponse - Details about an application in a portal.
type GetApplicationResponse struct {
	ClientCredentialsApplication *ClientCredentialsApplication `queryParam:"inline,name=GetApplicationResponse"`
	KeyAuthApplication           *KeyAuthApplication           `queryParam:"inline,name=GetApplicationResponse"`

	Type GetApplicationResponseType
}

func CreateGetApplicationResponseClientCredentialsApplication(clientCredentialsApplication ClientCredentialsApplication) GetApplicationResponse {
	typ := GetApplicationResponseTypeClientCredentialsApplication

	return GetApplicationResponse{
		ClientCredentialsApplication: &clientCredentialsApplication,
		Type:                         typ,
	}
}

func CreateGetApplicationResponseKeyAuthApplication(keyAuthApplication KeyAuthApplication) GetApplicationResponse {
	typ := GetApplicationResponseTypeKeyAuthApplication

	return GetApplicationResponse{
		KeyAuthApplication: &keyAuthApplication,
		Type:               typ,
	}
}

func (u *GetApplicationResponse) UnmarshalJSON(data []byte) error {

	var clientCredentialsApplication ClientCredentialsApplication = ClientCredentialsApplication{}
	if err := utils.UnmarshalJSON(data, &clientCredentialsApplication, "", true, nil); err == nil {
		u.ClientCredentialsApplication = &clientCredentialsApplication
		u.Type = GetApplicationResponseTypeClientCredentialsApplication
		return nil
	}

	var keyAuthApplication KeyAuthApplication = KeyAuthApplication{}
	if err := utils.UnmarshalJSON(data, &keyAuthApplication, "", true, nil); err == nil {
		u.KeyAuthApplication = &keyAuthApplication
		u.Type = GetApplicationResponseTypeKeyAuthApplication
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for GetApplicationResponse", string(data))
}

func (u GetApplicationResponse) MarshalJSON() ([]byte, error) {
	if u.ClientCredentialsApplication != nil {
		return utils.MarshalJSON(u.ClientCredentialsApplication, "", true)
	}

	if u.KeyAuthApplication != nil {
		return utils.MarshalJSON(u.KeyAuthApplication, "", true)
	}

	return nil, errors.New("could not marshal union type GetApplicationResponse: all fields are null")
}
