// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

// MeOrganizationState - State of the organization
type MeOrganizationState string

const (
	MeOrganizationStateActive   MeOrganizationState = "active"
	MeOrganizationStateInactive MeOrganizationState = "inactive"
	MeOrganizationStateDeleting MeOrganizationState = "deleting"
	MeOrganizationStateDeleted  MeOrganizationState = "deleted"
)

func (e MeOrganizationState) ToPointer() *MeOrganizationState {
	return &e
}

// MeOrganization - Me Organization
type MeOrganization struct {
	// UUID of the organization.
	ID *string `json:"id,omitempty"`
	// Name of the organization.
	Name *string `default:"null" json:"name"`
	// Owner ID of the organization.
	OwnerID *string `default:"null" json:"owner_id"`
	// Path to organization-specific login when single sign on (SSO) is enabled. Blank otherwise.
	LoginPath *string `default:"null" json:"login_path"`
	// Date the organization was created.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// Date the organization was last updated.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	// State of the organization
	State *MeOrganizationState `json:"state,omitempty"`
	// The number of days an organization spends inactive before being deleted.
	RetentionPeriodDays *int64 `default:"null" json:"retention_period_days"`
}

func (m MeOrganization) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(m, "", false)
}

func (m *MeOrganization) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &m, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (m *MeOrganization) GetID() *string {
	if m == nil {
		return nil
	}
	return m.ID
}

func (m *MeOrganization) GetName() *string {
	if m == nil {
		return nil
	}
	return m.Name
}

func (m *MeOrganization) GetOwnerID() *string {
	if m == nil {
		return nil
	}
	return m.OwnerID
}

func (m *MeOrganization) GetLoginPath() *string {
	if m == nil {
		return nil
	}
	return m.LoginPath
}

func (m *MeOrganization) GetCreatedAt() *time.Time {
	if m == nil {
		return nil
	}
	return m.CreatedAt
}

func (m *MeOrganization) GetUpdatedAt() *time.Time {
	if m == nil {
		return nil
	}
	return m.UpdatedAt
}

func (m *MeOrganization) GetState() *MeOrganizationState {
	if m == nil {
		return nil
	}
	return m.State
}

func (m *MeOrganization) GetRetentionPeriodDays() *int64 {
	if m == nil {
		return nil
	}
	return m.RetentionPeriodDays
}
