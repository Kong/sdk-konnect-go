// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type AuthStrategyKeyAuthCredentialType string

const (
	AuthStrategyKeyAuthCredentialTypeKeyAuth AuthStrategyKeyAuthCredentialType = "key_auth"
)

func (e AuthStrategyKeyAuthCredentialType) ToPointer() *AuthStrategyKeyAuthCredentialType {
	return &e
}
func (e *AuthStrategyKeyAuthCredentialType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "key_auth":
		*e = AuthStrategyKeyAuthCredentialType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for AuthStrategyKeyAuthCredentialType: %v", v)
	}
}

// AuthStrategyKeyAuth - KeyAuth Auth strategy that the application uses.
type AuthStrategyKeyAuth struct {
	// The Application Auth Strategy ID.
	ID             string                            `json:"id"`
	Name           *string                           `default:"name" json:"name"`
	CredentialType AuthStrategyKeyAuthCredentialType `json:"credential_type"`
	KeyNames       []string                          `json:"key_names"`
}

func (a AuthStrategyKeyAuth) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *AuthStrategyKeyAuth) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"id", "credential_type", "key_names"}); err != nil {
		return err
	}
	return nil
}

func (a *AuthStrategyKeyAuth) GetID() string {
	if a == nil {
		return ""
	}
	return a.ID
}

func (a *AuthStrategyKeyAuth) GetName() *string {
	if a == nil {
		return nil
	}
	return a.Name
}

func (a *AuthStrategyKeyAuth) GetCredentialType() AuthStrategyKeyAuthCredentialType {
	if a == nil {
		return AuthStrategyKeyAuthCredentialType("")
	}
	return a.CredentialType
}

func (a *AuthStrategyKeyAuth) GetKeyNames() []string {
	if a == nil {
		return []string{}
	}
	return a.KeyNames
}
