// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// AssignedRoleEntityRegion - Region of the entity.
type AssignedRoleEntityRegion string

const (
	AssignedRoleEntityRegionUs       AssignedRoleEntityRegion = "us"
	AssignedRoleEntityRegionEu       AssignedRoleEntityRegion = "eu"
	AssignedRoleEntityRegionAu       AssignedRoleEntityRegion = "au"
	AssignedRoleEntityRegionMe       AssignedRoleEntityRegion = "me"
	AssignedRoleEntityRegionIn       AssignedRoleEntityRegion = "in"
	AssignedRoleEntityRegionSg       AssignedRoleEntityRegion = "sg"
	AssignedRoleEntityRegionWildcard AssignedRoleEntityRegion = "*"
)

func (e AssignedRoleEntityRegion) ToPointer() *AssignedRoleEntityRegion {
	return &e
}

// AssignedRole - An assigned role is a role that has been assigned to a user or team.
type AssignedRole struct {
	// The ID of the role assignment.
	ID *string `json:"id,omitempty"`
	// Name of the role being assigned.
	RoleName *string `json:"role_name,omitempty"`
	// A RBAC entity ID.
	EntityID *string `json:"entity_id,omitempty"`
	// Name of the entity type the role is being assigned to.
	EntityTypeName *string `json:"entity_type_name,omitempty"`
	// Region of the entity.
	EntityRegion *AssignedRoleEntityRegion `json:"entity_region,omitempty"`
}

func (a *AssignedRole) GetID() *string {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *AssignedRole) GetRoleName() *string {
	if a == nil {
		return nil
	}
	return a.RoleName
}

func (a *AssignedRole) GetEntityID() *string {
	if a == nil {
		return nil
	}
	return a.EntityID
}

func (a *AssignedRole) GetEntityTypeName() *string {
	if a == nil {
		return nil
	}
	return a.EntityTypeName
}

func (a *AssignedRole) GetEntityRegion() *AssignedRoleEntityRegion {
	if a == nil {
		return nil
	}
	return a.EntityRegion
}
