// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

// WebhookStatus - Current status of a webhook. `active` indicates the webhook is sending or ready to send requests.
// `inactive` indicates the webhook has been turned off due to failed attempts.
type WebhookStatus string

const (
	WebhookStatusActive   WebhookStatus = "active"
	WebhookStatusInactive WebhookStatus = "inactive"
)

func (e WebhookStatus) ToPointer() *WebhookStatus {
	return &e
}

// PortalAuditLogWebhookStatus - Get response for portal audit log webhook status
type PortalAuditLogWebhookStatus struct {
	// Current status of a webhook. `active` indicates the webhook is sending or ready to send requests.
	// `inactive` indicates the webhook has been turned off due to failed attempts.
	WebhookStatus *WebhookStatus `json:"webhook_status,omitempty"`
	// Configured status of a webhook. `enabled` indicates the client will accept requests.
	// `disabled` indicates the client will not accept requests.
	WebhookEnabled *bool `json:"webhook_enabled,omitempty"`
	// The last time a request was made to the webhook, regardless of outcome.
	LastAttemptAt *time.Time `json:"last_attempt_at,omitempty"`
	// The last response code received from the webhook.
	LastResponseCode *int64 `json:"last_response_code,omitempty"`
	// The last message received from the webhook. Useful for debugging.
	LastResponseMessage *string `json:"last_response_message,omitempty"`
}

func (p PortalAuditLogWebhookStatus) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PortalAuditLogWebhookStatus) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (p *PortalAuditLogWebhookStatus) GetWebhookStatus() *WebhookStatus {
	if p == nil {
		return nil
	}
	return p.WebhookStatus
}

func (p *PortalAuditLogWebhookStatus) GetWebhookEnabled() *bool {
	if p == nil {
		return nil
	}
	return p.WebhookEnabled
}

func (p *PortalAuditLogWebhookStatus) GetLastAttemptAt() *time.Time {
	if p == nil {
		return nil
	}
	return p.LastAttemptAt
}

func (p *PortalAuditLogWebhookStatus) GetLastResponseCode() *int64 {
	if p == nil {
		return nil
	}
	return p.LastResponseCode
}

func (p *PortalAuditLogWebhookStatus) GetLastResponseMessage() *string {
	if p == nil {
		return nil
	}
	return p.LastResponseMessage
}
