// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

// WebhookStatus - Current status of a webhook. `active` indicates the webhook is sending or ready to send requests.
// `inactive` indicates the webhook has been turned off due to failed attempts.
type WebhookStatus string

const (
	WebhookStatusActive   WebhookStatus = "active"
	WebhookStatusInactive WebhookStatus = "inactive"
)

func (e WebhookStatus) ToPointer() *WebhookStatus {
	return &e
}
func (e *WebhookStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "active":
		fallthrough
	case "inactive":
		*e = WebhookStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for WebhookStatus: %v", v)
	}
}

// PortalAuditLogWebhookStatus - Get response for portal audit log webhook status
type PortalAuditLogWebhookStatus struct {
	// Current status of a webhook. `active` indicates the webhook is sending or ready to send requests.
	// `inactive` indicates the webhook has been turned off due to failed attempts.
	WebhookStatus *WebhookStatus `json:"webhook_status,omitempty"`
	// Configured status of a webhook. `enabled` indicates the client will accept requests.
	// `disabled` indicates the client will not accept requests.
	WebhookEnabled *bool `default:"null" json:"webhook_enabled"`
	// The last time a request was made to the webhook, regardless of outcome.
	LastAttemptAt *time.Time `default:"null" json:"last_attempt_at"`
	// The last response code received from the webhook.
	LastResponseCode *int64 `default:"null" json:"last_response_code"`
	// The last message received from the webhook. Useful for debugging.
	LastResponseMessage *string `default:"null" json:"last_response_message"`
}

func (p PortalAuditLogWebhookStatus) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PortalAuditLogWebhookStatus) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PortalAuditLogWebhookStatus) GetWebhookStatus() *WebhookStatus {
	if o == nil {
		return nil
	}
	return o.WebhookStatus
}

func (o *PortalAuditLogWebhookStatus) GetWebhookEnabled() *bool {
	if o == nil {
		return nil
	}
	return o.WebhookEnabled
}

func (o *PortalAuditLogWebhookStatus) GetLastAttemptAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.LastAttemptAt
}

func (o *PortalAuditLogWebhookStatus) GetLastResponseCode() *int64 {
	if o == nil {
		return nil
	}
	return o.LastResponseCode
}

func (o *PortalAuditLogWebhookStatus) GetLastResponseMessage() *string {
	if o == nil {
		return nil
	}
	return o.LastResponseMessage
}
