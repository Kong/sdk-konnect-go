// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

// UserConfiguration - Properties of an event.
type UserConfiguration struct {
	EventID                string                `json:"event_id"`
	EventTitle             string                `json:"event_title"`
	EventDescription       string                `json:"event_description"`
	EventNamespace         NotificationNamespace `json:"event_namespace"`
	EventSubscriptionCount *int64                `default:"0" json:"event_subscription_count"`
	DefaultSubscription    []DefaultSubscription `json:"default_subscription"`
}

func (u UserConfiguration) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UserConfiguration) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, []string{"event_id", "event_title", "event_description", "event_namespace", "default_subscription"}); err != nil {
		return err
	}
	return nil
}

func (u *UserConfiguration) GetEventID() string {
	if u == nil {
		return ""
	}
	return u.EventID
}

func (u *UserConfiguration) GetEventTitle() string {
	if u == nil {
		return ""
	}
	return u.EventTitle
}

func (u *UserConfiguration) GetEventDescription() string {
	if u == nil {
		return ""
	}
	return u.EventDescription
}

func (u *UserConfiguration) GetEventNamespace() NotificationNamespace {
	if u == nil {
		return NotificationNamespace("")
	}
	return u.EventNamespace
}

func (u *UserConfiguration) GetEventSubscriptionCount() *int64 {
	if u == nil {
		return nil
	}
	return u.EventSubscriptionCount
}

func (u *UserConfiguration) GetDefaultSubscription() []DefaultSubscription {
	if u == nil {
		return []DefaultSubscription{}
	}
	return u.DefaultSubscription
}
