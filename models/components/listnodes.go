// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type CompatibilityStatus struct {
	State *string `default:"null" json:"state"`
}

func (c CompatibilityStatus) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *CompatibilityStatus) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *CompatibilityStatus) GetState() *string {
	if o == nil {
		return nil
	}
	return o.State
}

type ListNodesItems struct {
	ID                  *string              `json:"id,omitempty"`
	Version             *string              `default:"null" json:"version"`
	Hostname            *string              `default:"null" json:"hostname"`
	LastPing            *int64               `default:"null" json:"last_ping"`
	Type                *string              `default:"null" json:"type"`
	CreatedAt           *int64               `json:"created_at,omitempty"`
	UpdatedAt           *int64               `json:"updated_at,omitempty"`
	ConfigHash          *string              `default:"null" json:"config_hash"`
	CompatibilityStatus *CompatibilityStatus `json:"compatibility_status,omitempty"`
}

func (l ListNodesItems) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListNodesItems) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *ListNodesItems) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *ListNodesItems) GetVersion() *string {
	if o == nil {
		return nil
	}
	return o.Version
}

func (o *ListNodesItems) GetHostname() *string {
	if o == nil {
		return nil
	}
	return o.Hostname
}

func (o *ListNodesItems) GetLastPing() *int64 {
	if o == nil {
		return nil
	}
	return o.LastPing
}

func (o *ListNodesItems) GetType() *string {
	if o == nil {
		return nil
	}
	return o.Type
}

func (o *ListNodesItems) GetCreatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *ListNodesItems) GetUpdatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

func (o *ListNodesItems) GetConfigHash() *string {
	if o == nil {
		return nil
	}
	return o.ConfigHash
}

func (o *ListNodesItems) GetCompatibilityStatus() *CompatibilityStatus {
	if o == nil {
		return nil
	}
	return o.CompatibilityStatus
}

type ListNodesPage struct {
	Total *int64  `default:"null" json:"total"`
	Next  *string `default:"null" json:"next"`
}

func (l ListNodesPage) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(l, "", false)
}

func (l *ListNodesPage) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &l, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *ListNodesPage) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

func (o *ListNodesPage) GetNext() *string {
	if o == nil {
		return nil
	}
	return o.Next
}

// ListNodes - Example response
type ListNodes struct {
	Items []ListNodesItems `json:"items,omitempty"`
	Page  *ListNodesPage   `json:"page,omitempty"`
}

func (o *ListNodes) GetItems() []ListNodesItems {
	if o == nil {
		return nil
	}
	return o.Items
}

func (o *ListNodes) GetPage() *ListNodesPage {
	if o == nil {
		return nil
	}
	return o.Page
}
