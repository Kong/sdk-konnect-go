// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type CompatibilityStatus struct {
	State *string `json:"state,omitempty"`
}

func (c *CompatibilityStatus) GetState() *string {
	if c == nil {
		return nil
	}
	return c.State
}

type ListNodesItems struct {
	ID                  *string              `json:"id,omitempty"`
	Version             *string              `json:"version,omitempty"`
	Hostname            *string              `json:"hostname,omitempty"`
	LastPing            *int64               `json:"last_ping,omitempty"`
	Type                *string              `json:"type,omitempty"`
	CreatedAt           *int64               `json:"created_at,omitempty"`
	UpdatedAt           *int64               `json:"updated_at,omitempty"`
	ConfigHash          *string              `json:"config_hash,omitempty"`
	CompatibilityStatus *CompatibilityStatus `json:"compatibility_status,omitempty"`
}

func (l *ListNodesItems) GetID() *string {
	if l == nil {
		return nil
	}
	return l.ID
}

func (l *ListNodesItems) GetVersion() *string {
	if l == nil {
		return nil
	}
	return l.Version
}

func (l *ListNodesItems) GetHostname() *string {
	if l == nil {
		return nil
	}
	return l.Hostname
}

func (l *ListNodesItems) GetLastPing() *int64 {
	if l == nil {
		return nil
	}
	return l.LastPing
}

func (l *ListNodesItems) GetType() *string {
	if l == nil {
		return nil
	}
	return l.Type
}

func (l *ListNodesItems) GetCreatedAt() *int64 {
	if l == nil {
		return nil
	}
	return l.CreatedAt
}

func (l *ListNodesItems) GetUpdatedAt() *int64 {
	if l == nil {
		return nil
	}
	return l.UpdatedAt
}

func (l *ListNodesItems) GetConfigHash() *string {
	if l == nil {
		return nil
	}
	return l.ConfigHash
}

func (l *ListNodesItems) GetCompatibilityStatus() *CompatibilityStatus {
	if l == nil {
		return nil
	}
	return l.CompatibilityStatus
}

type ListNodesPage struct {
	Total *int64  `json:"total,omitempty"`
	Next  *string `json:"next,omitempty"`
}

func (l *ListNodesPage) GetTotal() *int64 {
	if l == nil {
		return nil
	}
	return l.Total
}

func (l *ListNodesPage) GetNext() *string {
	if l == nil {
		return nil
	}
	return l.Next
}

// ListNodes - Example response
type ListNodes struct {
	Items []ListNodesItems `json:"items,omitempty"`
	Page  *ListNodesPage   `json:"page,omitempty"`
}

func (l *ListNodes) GetItems() []ListNodesItems {
	if l == nil {
		return nil
	}
	return l.Items
}

func (l *ListNodes) GetPage() *ListNodesPage {
	if l == nil {
		return nil
	}
	return l.Page
}
