// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

// Rule - invalid parameters rules
type Rule string

const (
	RuleMinLength    Rule = "min_length"
	RuleMinDigits    Rule = "min_digits"
	RuleMinLowercase Rule = "min_lowercase"
	RuleMinUppercase Rule = "min_uppercase"
	RuleMinSymbols   Rule = "min_symbols"
	RuleMinItems     Rule = "min_items"
	RuleMin          Rule = "min"
)

func (e Rule) ToPointer() *Rule {
	return &e
}

type InvalidParameterMinimumLength struct {
	Field string `json:"field"`
	// invalid parameters rules
	Rule    Rule    `json:"rule"`
	Minimum int64   `json:"minimum"`
	Source  *string `json:"source,omitempty"`
	Reason  string  `json:"reason"`
}

func (i InvalidParameterMinimumLength) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *InvalidParameterMinimumLength) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, []string{"field", "rule", "minimum", "reason"}); err != nil {
		return err
	}
	return nil
}

func (i *InvalidParameterMinimumLength) GetField() string {
	if i == nil {
		return ""
	}
	return i.Field
}

func (i *InvalidParameterMinimumLength) GetRule() Rule {
	if i == nil {
		return Rule("")
	}
	return i.Rule
}

func (i *InvalidParameterMinimumLength) GetMinimum() int64 {
	if i == nil {
		return 0
	}
	return i.Minimum
}

func (i *InvalidParameterMinimumLength) GetSource() *string {
	if i == nil {
		return nil
	}
	return i.Source
}

func (i *InvalidParameterMinimumLength) GetReason() string {
	if i == nil {
		return ""
	}
	return i.Reason
}
