// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

// User - The user object contains information about an individual user who can use the Konnect application and API.
type User struct {
	// The User ID.
	ID *string `json:"id,omitempty"`
	// The email registered to the user.
	Email *string `json:"email,omitempty"`
	// The User's full name.
	FullName *string `json:"full_name,omitempty"`
	// The User's preferred name.
	PreferredName *string `json:"preferred_name,omitempty"`
	// Returns True if a user has verified their email address.
	Active *bool `default:"true" json:"active"`
	// The time stamp for the date the account was registered.
	CreatedAt *time.Time `json:"created_at,omitempty"`
	// A Unix timestamp representation of the most recent change to the User account.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (u User) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *User) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *User) GetID() *string {
	if o == nil {
		return nil
	}
	return o.ID
}

func (o *User) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *User) GetFullName() *string {
	if o == nil {
		return nil
	}
	return o.FullName
}

func (o *User) GetPreferredName() *string {
	if o == nil {
		return nil
	}
	return o.PreferredName
}

func (o *User) GetActive() *bool {
	if o == nil {
		return nil
	}
	return o.Active
}

func (o *User) GetCreatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *User) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
