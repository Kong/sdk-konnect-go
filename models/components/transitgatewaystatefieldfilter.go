// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type TransitGatewayStateFieldFilterType string

const (
	TransitGatewayStateFieldFilterTypeTransitGatewayStateFieldEqualsFilter     TransitGatewayStateFieldFilterType = "TransitGatewayStateFieldEqualsFilter"
	TransitGatewayStateFieldFilterTypeTransitGatewayStateFieldNotEqualsFilter  TransitGatewayStateFieldFilterType = "TransitGatewayStateFieldNotEqualsFilter"
	TransitGatewayStateFieldFilterTypeTransitGatewayStateFieldOrEqualityFilter TransitGatewayStateFieldFilterType = "TransitGatewayStateFieldOrEqualityFilter"
)

type TransitGatewayStateFieldFilter struct {
	TransitGatewayStateFieldEqualsFilter     *TransitGatewayStateFieldEqualsFilter     `queryParam:"inline,name=TransitGatewayStateFieldFilter"`
	TransitGatewayStateFieldNotEqualsFilter  *TransitGatewayStateFieldNotEqualsFilter  `queryParam:"inline,name=TransitGatewayStateFieldFilter"`
	TransitGatewayStateFieldOrEqualityFilter *TransitGatewayStateFieldOrEqualityFilter `queryParam:"inline,name=TransitGatewayStateFieldFilter"`

	Type TransitGatewayStateFieldFilterType
}

func CreateTransitGatewayStateFieldFilterTransitGatewayStateFieldEqualsFilter(transitGatewayStateFieldEqualsFilter TransitGatewayStateFieldEqualsFilter) TransitGatewayStateFieldFilter {
	typ := TransitGatewayStateFieldFilterTypeTransitGatewayStateFieldEqualsFilter

	return TransitGatewayStateFieldFilter{
		TransitGatewayStateFieldEqualsFilter: &transitGatewayStateFieldEqualsFilter,
		Type:                                 typ,
	}
}

func CreateTransitGatewayStateFieldFilterTransitGatewayStateFieldNotEqualsFilter(transitGatewayStateFieldNotEqualsFilter TransitGatewayStateFieldNotEqualsFilter) TransitGatewayStateFieldFilter {
	typ := TransitGatewayStateFieldFilterTypeTransitGatewayStateFieldNotEqualsFilter

	return TransitGatewayStateFieldFilter{
		TransitGatewayStateFieldNotEqualsFilter: &transitGatewayStateFieldNotEqualsFilter,
		Type:                                    typ,
	}
}

func CreateTransitGatewayStateFieldFilterTransitGatewayStateFieldOrEqualityFilter(transitGatewayStateFieldOrEqualityFilter TransitGatewayStateFieldOrEqualityFilter) TransitGatewayStateFieldFilter {
	typ := TransitGatewayStateFieldFilterTypeTransitGatewayStateFieldOrEqualityFilter

	return TransitGatewayStateFieldFilter{
		TransitGatewayStateFieldOrEqualityFilter: &transitGatewayStateFieldOrEqualityFilter,
		Type:                                     typ,
	}
}

func (u *TransitGatewayStateFieldFilter) UnmarshalJSON(data []byte) error {

	var transitGatewayStateFieldOrEqualityFilter TransitGatewayStateFieldOrEqualityFilter = TransitGatewayStateFieldOrEqualityFilter{}
	if err := utils.UnmarshalJSON(data, &transitGatewayStateFieldOrEqualityFilter, "", true, nil); err == nil {
		u.TransitGatewayStateFieldOrEqualityFilter = &transitGatewayStateFieldOrEqualityFilter
		u.Type = TransitGatewayStateFieldFilterTypeTransitGatewayStateFieldOrEqualityFilter
		return nil
	}

	var transitGatewayStateFieldEqualsFilter TransitGatewayStateFieldEqualsFilter = TransitGatewayStateFieldEqualsFilter{}
	if err := utils.UnmarshalJSON(data, &transitGatewayStateFieldEqualsFilter, "", true, nil); err == nil {
		u.TransitGatewayStateFieldEqualsFilter = &transitGatewayStateFieldEqualsFilter
		u.Type = TransitGatewayStateFieldFilterTypeTransitGatewayStateFieldEqualsFilter
		return nil
	}

	var transitGatewayStateFieldNotEqualsFilter TransitGatewayStateFieldNotEqualsFilter = TransitGatewayStateFieldNotEqualsFilter{}
	if err := utils.UnmarshalJSON(data, &transitGatewayStateFieldNotEqualsFilter, "", true, nil); err == nil {
		u.TransitGatewayStateFieldNotEqualsFilter = &transitGatewayStateFieldNotEqualsFilter
		u.Type = TransitGatewayStateFieldFilterTypeTransitGatewayStateFieldNotEqualsFilter
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for TransitGatewayStateFieldFilter", string(data))
}

func (u TransitGatewayStateFieldFilter) MarshalJSON() ([]byte, error) {
	if u.TransitGatewayStateFieldEqualsFilter != nil {
		return utils.MarshalJSON(u.TransitGatewayStateFieldEqualsFilter, "", true)
	}

	if u.TransitGatewayStateFieldNotEqualsFilter != nil {
		return utils.MarshalJSON(u.TransitGatewayStateFieldNotEqualsFilter, "", true)
	}

	if u.TransitGatewayStateFieldOrEqualityFilter != nil {
		return utils.MarshalJSON(u.TransitGatewayStateFieldOrEqualityFilter, "", true)
	}

	return nil, errors.New("could not marshal union type TransitGatewayStateFieldFilter: all fields are null")
}
