// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

// PortalSnippetInfo - Information about a snippet in a portal.
type PortalSnippetInfo struct {
	// Contains a unique identifier used for this resource.
	ID string `json:"id"`
	// The unique name of a snippet in a portal.
	Name string `json:"name"`
	// The display title of a snippet in a portal.
	Title string `json:"title"`
	// Whether the resource is publicly accessible to non-authenticated users.
	Visibility VisibilityStatus `json:"visibility"`
	// Whether the resource is visible on a given portal. Defaults to unpublished.
	Status      PublishedStatus `json:"status"`
	Description *string         `json:"description,omitempty"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (p PortalSnippetInfo) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PortalSnippetInfo) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"id", "name", "title", "visibility", "status", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (o *PortalSnippetInfo) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *PortalSnippetInfo) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *PortalSnippetInfo) GetTitle() string {
	if o == nil {
		return ""
	}
	return o.Title
}

func (o *PortalSnippetInfo) GetVisibility() VisibilityStatus {
	if o == nil {
		return VisibilityStatus("")
	}
	return o.Visibility
}

func (o *PortalSnippetInfo) GetStatus() PublishedStatus {
	if o == nil {
		return PublishedStatus("")
	}
	return o.Status
}

func (o *PortalSnippetInfo) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *PortalSnippetInfo) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *PortalSnippetInfo) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
