// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

// UpdateControlPlaneRequestAuthType - The auth type value of the cluster associated with the Runtime Group.
type UpdateControlPlaneRequestAuthType string

const (
	UpdateControlPlaneRequestAuthTypePinnedClientCerts UpdateControlPlaneRequestAuthType = "pinned_client_certs"
	UpdateControlPlaneRequestAuthTypePkiClientCerts    UpdateControlPlaneRequestAuthType = "pki_client_certs"
)

func (e UpdateControlPlaneRequestAuthType) ToPointer() *UpdateControlPlaneRequestAuthType {
	return &e
}

// UpdateControlPlaneRequest - The request schema for the update control plane request.
type UpdateControlPlaneRequest struct {
	// The name of the control plane.
	Name *string `default:"null" json:"name"`
	// The description of the control plane in Konnect.
	Description *string `json:"description,omitempty"`
	// The auth type value of the cluster associated with the Runtime Group.
	AuthType *UpdateControlPlaneRequestAuthType `json:"auth_type,omitempty"`
	// Array of proxy URLs associated with reaching the data-planes connected to a control-plane.
	ProxyUrls []ProxyURL `json:"proxy_urls,omitempty"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]string `json:"labels,omitempty"`
}

func (u UpdateControlPlaneRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(u, "", false)
}

func (u *UpdateControlPlaneRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &u, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (u *UpdateControlPlaneRequest) GetName() *string {
	if u == nil {
		return nil
	}
	return u.Name
}

func (u *UpdateControlPlaneRequest) GetDescription() *string {
	if u == nil {
		return nil
	}
	return u.Description
}

func (u *UpdateControlPlaneRequest) GetAuthType() *UpdateControlPlaneRequestAuthType {
	if u == nil {
		return nil
	}
	return u.AuthType
}

func (u *UpdateControlPlaneRequest) GetProxyUrls() []ProxyURL {
	if u == nil {
		return nil
	}
	return u.ProxyUrls
}

func (u *UpdateControlPlaneRequest) GetLabels() map[string]string {
	if u == nil {
		return nil
	}
	return u.Labels
}
