// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.

package components

type Items struct {
	// The custom plugin schema; `jq -Rs '.' schema.lua`.
	LuaSchema *string `json:"lua_schema,omitempty"`
	// The custom plugin name determined by the custom plugin schema.
	Name *string `json:"name,omitempty"`
	// An ISO-8604 timestamp representation of custom plugin schema creation date.
	CreatedAt *int64 `json:"created_at,omitempty"`
	// An ISO-8604 timestamp representation of custom plugin schema update date.
	UpdatedAt *int64 `json:"updated_at,omitempty"`
}

func (o *Items) GetLuaSchema() *string {
	if o == nil {
		return nil
	}
	return o.LuaSchema
}

func (o *Items) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *Items) GetCreatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.CreatedAt
}

func (o *Items) GetUpdatedAt() *int64 {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}

type Page struct {
	Total *int64 `json:"total,omitempty"`
}

func (o *Page) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

type ListPluginSchemas struct {
	Items []Items `json:"items,omitempty"`
	Page  *Page   `json:"page,omitempty"`
}

func (o *ListPluginSchemas) GetItems() []Items {
	if o == nil {
		return nil
	}
	return o.Items
}

func (o *ListPluginSchemas) GetPage() *Page {
	if o == nil {
		return nil
	}
	return o.Page
}
