// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type PatchTransitGatewayResponseType string

const (
	PatchTransitGatewayResponseTypeAwsResourceEndpointGatewayResponse PatchTransitGatewayResponseType = "AwsResourceEndpointGatewayResponse"
)

// PatchTransitGatewayResponse - Response format for updating a transit gateway.
type PatchTransitGatewayResponse struct {
	AwsResourceEndpointGatewayResponse *AwsResourceEndpointGatewayResponse `queryParam:"inline,name=PatchTransitGatewayResponse"`

	Type PatchTransitGatewayResponseType
}

func CreatePatchTransitGatewayResponseAwsResourceEndpointGatewayResponse(awsResourceEndpointGatewayResponse AwsResourceEndpointGatewayResponse) PatchTransitGatewayResponse {
	typ := PatchTransitGatewayResponseTypeAwsResourceEndpointGatewayResponse

	return PatchTransitGatewayResponse{
		AwsResourceEndpointGatewayResponse: &awsResourceEndpointGatewayResponse,
		Type:                               typ,
	}
}

func (u *PatchTransitGatewayResponse) UnmarshalJSON(data []byte) error {

	var awsResourceEndpointGatewayResponse AwsResourceEndpointGatewayResponse = AwsResourceEndpointGatewayResponse{}
	if err := utils.UnmarshalJSON(data, &awsResourceEndpointGatewayResponse, "", true, nil); err == nil {
		u.AwsResourceEndpointGatewayResponse = &awsResourceEndpointGatewayResponse
		u.Type = PatchTransitGatewayResponseTypeAwsResourceEndpointGatewayResponse
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for PatchTransitGatewayResponse", string(data))
}

func (u PatchTransitGatewayResponse) MarshalJSON() ([]byte, error) {
	if u.AwsResourceEndpointGatewayResponse != nil {
		return utils.MarshalJSON(u.AwsResourceEndpointGatewayResponse, "", true)
	}

	return nil, errors.New("could not marshal union type PatchTransitGatewayResponse: all fields are null")
}
