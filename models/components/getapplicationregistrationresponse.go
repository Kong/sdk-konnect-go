// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

// GetApplicationRegistrationResponseAPI - Details about the API the application is registered to.
type GetApplicationRegistrationResponseAPI struct {
	// Contains a unique identifier used for this resource.
	ID string `json:"id"`
	// The name of the API the application is registered to.
	Name string `json:"name"`
	// The version of the API the application is registered to.
	Version *string `default:"null" json:"version"`
	// The type of entity that is being published. Can be either an API or an API Package.
	EntityType EntityType `json:"entity_type"`
}

func (g GetApplicationRegistrationResponseAPI) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetApplicationRegistrationResponseAPI) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"id", "name", "entity_type"}); err != nil {
		return err
	}
	return nil
}

func (g *GetApplicationRegistrationResponseAPI) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}

func (g *GetApplicationRegistrationResponseAPI) GetName() string {
	if g == nil {
		return ""
	}
	return g.Name
}

func (g *GetApplicationRegistrationResponseAPI) GetVersion() *string {
	if g == nil {
		return nil
	}
	return g.Version
}

func (g *GetApplicationRegistrationResponseAPI) GetEntityType() EntityType {
	if g == nil {
		return EntityType("")
	}
	return g.EntityType
}

// GetApplicationRegistrationResponseApplication - Details about the application the registration is part of.
type GetApplicationRegistrationResponseApplication struct {
	// Contains a unique identifier used for this resource.
	ID string `json:"id"`
	// The name of the application the registration is part of.
	Name string `json:"name"`
}

func (g *GetApplicationRegistrationResponseApplication) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}

func (g *GetApplicationRegistrationResponseApplication) GetName() string {
	if g == nil {
		return ""
	}
	return g.Name
}

// GetApplicationRegistrationResponse - A application's registration for a specific version of an API.
type GetApplicationRegistrationResponse struct {
	// Contains a unique identifier used for this resource.
	ID string `json:"id"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
	// The status of an application registration request. Each registration is linked to a single API, and application credentials will not grant access to the API until the registration is approved.
	// Pending, revoked, and rejected registrations will not provide access to the API.
	Status ApplicationRegistrationStatus `json:"status"`
	// Details about the API the application is registered to.
	API GetApplicationRegistrationResponseAPI `json:"api"`
	// Details about the application the registration is part of.
	Application GetApplicationRegistrationResponseApplication `json:"application"`
}

func (g GetApplicationRegistrationResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(g, "", false)
}

func (g *GetApplicationRegistrationResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &g, "", false, []string{"id", "created_at", "updated_at", "status", "api", "application"}); err != nil {
		return err
	}
	return nil
}

func (g *GetApplicationRegistrationResponse) GetID() string {
	if g == nil {
		return ""
	}
	return g.ID
}

func (g *GetApplicationRegistrationResponse) GetCreatedAt() time.Time {
	if g == nil {
		return time.Time{}
	}
	return g.CreatedAt
}

func (g *GetApplicationRegistrationResponse) GetUpdatedAt() time.Time {
	if g == nil {
		return time.Time{}
	}
	return g.UpdatedAt
}

func (g *GetApplicationRegistrationResponse) GetStatus() ApplicationRegistrationStatus {
	if g == nil {
		return ApplicationRegistrationStatus("")
	}
	return g.Status
}

func (g *GetApplicationRegistrationResponse) GetAPI() GetApplicationRegistrationResponseAPI {
	if g == nil {
		return GetApplicationRegistrationResponseAPI{}
	}
	return g.API
}

func (g *GetApplicationRegistrationResponse) GetApplication() GetApplicationRegistrationResponseApplication {
	if g == nil {
		return GetApplicationRegistrationResponseApplication{}
	}
	return g.Application
}
