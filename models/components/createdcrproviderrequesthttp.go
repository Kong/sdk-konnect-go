// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
)

type CreateDcrProviderRequestHTTPProviderType string

const (
	CreateDcrProviderRequestHTTPProviderTypeHTTP CreateDcrProviderRequestHTTPProviderType = "http"
)

func (e CreateDcrProviderRequestHTTPProviderType) ToPointer() *CreateDcrProviderRequestHTTPProviderType {
	return &e
}
func (e *CreateDcrProviderRequestHTTPProviderType) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "http":
		*e = CreateDcrProviderRequestHTTPProviderType(v)
		return nil
	default:
		return fmt.Errorf("invalid value for CreateDcrProviderRequestHTTPProviderType: %v", v)
	}
}

// CreateDcrProviderRequestHTTP - Request body for creating an HTTP DCR provider.
type CreateDcrProviderRequestHTTP struct {
	ProviderType CreateDcrProviderRequestHTTPProviderType `json:"provider_type"`
	// Payload to create an HTTP DCR provider.
	DcrConfig CreateDcrConfigHTTPInRequest `json:"dcr_config"`
	// The name of the DCR provider. This is used to identify the DCR provider in the Konnect UI.
	//
	Name string `json:"name"`
	// The display name of the DCR provider. This is used to identify the DCR provider in the Portal UI.
	//
	DisplayName *string `json:"display_name,omitempty"`
	Issuer      string  `json:"issuer"`
	// Labels store metadata of an entity that can be used for filtering an entity list or for searching across entity types.
	//
	// Keys must be of length 1-63 characters, and cannot start with "kong", "konnect", "mesh", "kic", or "_".
	//
	Labels map[string]string `json:"labels,omitempty"`
}

func (o *CreateDcrProviderRequestHTTP) GetProviderType() CreateDcrProviderRequestHTTPProviderType {
	if o == nil {
		return CreateDcrProviderRequestHTTPProviderType("")
	}
	return o.ProviderType
}

func (o *CreateDcrProviderRequestHTTP) GetDcrConfig() CreateDcrConfigHTTPInRequest {
	if o == nil {
		return CreateDcrConfigHTTPInRequest{}
	}
	return o.DcrConfig
}

func (o *CreateDcrProviderRequestHTTP) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *CreateDcrProviderRequestHTTP) GetDisplayName() *string {
	if o == nil {
		return nil
	}
	return o.DisplayName
}

func (o *CreateDcrProviderRequestHTTP) GetIssuer() string {
	if o == nil {
		return ""
	}
	return o.Issuer
}

func (o *CreateDcrProviderRequestHTTP) GetLabels() map[string]string {
	if o == nil {
		return nil
	}
	return o.Labels
}
