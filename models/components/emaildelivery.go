// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

type EmailDelivery struct {
	Enabled      bool    `json:"enabled"`
	FromEmail    *string `default:"null" json:"from_email"`
	ReplyToEmail *string `default:"null" json:"reply_to_email"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (e EmailDelivery) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EmailDelivery) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, []string{"enabled", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (e *EmailDelivery) GetEnabled() bool {
	if e == nil {
		return false
	}
	return e.Enabled
}

func (e *EmailDelivery) GetFromEmail() *string {
	if e == nil {
		return nil
	}
	return e.FromEmail
}

func (e *EmailDelivery) GetReplyToEmail() *string {
	if e == nil {
		return nil
	}
	return e.ReplyToEmail
}

func (e *EmailDelivery) GetCreatedAt() time.Time {
	if e == nil {
		return time.Time{}
	}
	return e.CreatedAt
}

func (e *EmailDelivery) GetUpdatedAt() time.Time {
	if e == nil {
		return time.Time{}
	}
	return e.UpdatedAt
}
