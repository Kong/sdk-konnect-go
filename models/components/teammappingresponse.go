// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

// TeamMappingResponsePage - The page object.
type TeamMappingResponsePage struct {
	// Page number.
	Number *int64 `default:"null" json:"number"`
	// Page size.
	Size *int64 `default:"null" json:"size"`
	// Total number of results.
	Total *int64 `default:"null" json:"total"`
}

func (t TeamMappingResponsePage) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TeamMappingResponsePage) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TeamMappingResponsePage) GetNumber() *int64 {
	if o == nil {
		return nil
	}
	return o.Number
}

func (o *TeamMappingResponsePage) GetSize() *int64 {
	if o == nil {
		return nil
	}
	return o.Size
}

func (o *TeamMappingResponsePage) GetTotal() *int64 {
	if o == nil {
		return nil
	}
	return o.Total
}

// Meta - Contains pagination data.
type Meta struct {
	// The page object.
	Page *TeamMappingResponsePage `json:"page,omitempty"`
}

func (o *Meta) GetPage() *TeamMappingResponsePage {
	if o == nil {
		return nil
	}
	return o.Page
}

type TeamMappingResponseData struct {
	// Group names.
	Group *string `default:"null" json:"group"`
	// Team ID's that belong to the specified group.
	TeamIds []string `json:"team_ids,omitempty"`
}

func (t TeamMappingResponseData) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(t, "", false)
}

func (t *TeamMappingResponseData) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &t, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *TeamMappingResponseData) GetGroup() *string {
	if o == nil {
		return nil
	}
	return o.Group
}

func (o *TeamMappingResponseData) GetTeamIds() []string {
	if o == nil {
		return nil
	}
	return o.TeamIds
}

// TeamMappingResponse - A paginated list response for a collection of team mappings.
type TeamMappingResponse struct {
	// Contains pagination data.
	Meta *Meta                     `json:"meta,omitempty"`
	Data []TeamMappingResponseData `json:"data,omitempty"`
}

func (o *TeamMappingResponse) GetMeta() *Meta {
	if o == nil {
		return nil
	}
	return o.Meta
}

func (o *TeamMappingResponse) GetData() []TeamMappingResponseData {
	if o == nil {
		return nil
	}
	return o.Data
}
