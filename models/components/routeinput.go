// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type RouteInputType string

const (
	RouteInputTypeRouteJSONInput       RouteInputType = "RouteJson_input"
	RouteInputTypeRouteExpressionInput RouteInputType = "RouteExpression_input"
)

type RouteInput struct {
	RouteJSONInput       *RouteJSONInput       `queryParam:"inline"`
	RouteExpressionInput *RouteExpressionInput `queryParam:"inline"`

	Type RouteInputType
}

func CreateRouteInputRouteJSONInput(routeJSONInput RouteJSONInput) RouteInput {
	typ := RouteInputTypeRouteJSONInput

	return RouteInput{
		RouteJSONInput: &routeJSONInput,
		Type:           typ,
	}
}

func CreateRouteInputRouteExpressionInput(routeExpressionInput RouteExpressionInput) RouteInput {
	typ := RouteInputTypeRouteExpressionInput

	return RouteInput{
		RouteExpressionInput: &routeExpressionInput,
		Type:                 typ,
	}
}

func (u *RouteInput) UnmarshalJSON(data []byte) error {

	var routeExpressionInput RouteExpressionInput = RouteExpressionInput{}
	if err := utils.UnmarshalJSON(data, &routeExpressionInput, "", true, true); err == nil {
		u.RouteExpressionInput = &routeExpressionInput
		u.Type = RouteInputTypeRouteExpressionInput
		return nil
	}

	var routeJSONInput RouteJSONInput = RouteJSONInput{}
	if err := utils.UnmarshalJSON(data, &routeJSONInput, "", true, true); err == nil {
		u.RouteJSONInput = &routeJSONInput
		u.Type = RouteInputTypeRouteJSONInput
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for RouteInput", string(data))
}

func (u RouteInput) MarshalJSON() ([]byte, error) {
	if u.RouteJSONInput != nil {
		return utils.MarshalJSON(u.RouteJSONInput, "", true)
	}

	if u.RouteExpressionInput != nil {
		return utils.MarshalJSON(u.RouteExpressionInput, "", true)
	}

	return nil, errors.New("could not marshal union type RouteInput: all fields are null")
}
