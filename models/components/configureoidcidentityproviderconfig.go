// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

// ConfigureOIDCIdentityProviderConfig - The identity provider that contains configuration data for the OIDC authentication integration.
type ConfigureOIDCIdentityProviderConfig struct {
	// The issuer URI of the identity provider. This is the URL where the provider's metadata can be obtained.
	IssuerURL string `json:"issuer_url"`
	// The client ID assigned to your application by the identity provider.
	ClientID string `json:"client_id"`
	// The Client Secret assigned to your application by the identity provider.
	ClientSecret *string `json:"client_secret,omitempty"`
	// The scopes requested by your application when authenticating with the identity provider.
	Scopes []string `json:"scopes,omitempty"`
	// Defines the mappings between OpenID Connect (OIDC) claims and local claims used by your application for
	// authentication.
	//
	ClaimMappings *OIDCIdentityProviderClaimMappings `json:"claim_mappings,omitempty"`
}

func (c ConfigureOIDCIdentityProviderConfig) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ConfigureOIDCIdentityProviderConfig) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, []string{"issuer_url", "client_id"}); err != nil {
		return err
	}
	return nil
}

func (c *ConfigureOIDCIdentityProviderConfig) GetIssuerURL() string {
	if c == nil {
		return ""
	}
	return c.IssuerURL
}

func (c *ConfigureOIDCIdentityProviderConfig) GetClientID() string {
	if c == nil {
		return ""
	}
	return c.ClientID
}

func (c *ConfigureOIDCIdentityProviderConfig) GetClientSecret() *string {
	if c == nil {
		return nil
	}
	return c.ClientSecret
}

func (c *ConfigureOIDCIdentityProviderConfig) GetScopes() []string {
	if c == nil {
		return nil
	}
	return c.Scopes
}

func (c *ConfigureOIDCIdentityProviderConfig) GetClaimMappings() *OIDCIdentityProviderClaimMappings {
	if c == nil {
		return nil
	}
	return c.ClaimMappings
}
