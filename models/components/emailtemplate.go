// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

type EmailTemplate struct {
	// The label of the email template
	Label string `json:"label"`
	// Short name email template name.
	//
	Name           EmailTemplateName           `json:"name"`
	DefaultContent DefaultEmailTemplateContent `json:"default_content"`
	Content        *EmailTemplateContent       `json:"content,omitempty"`
	Variables      []EmailTemplateVariableName `json:"variables"`
	// Whether the email template is enabled or disabled for a portal
	Enabled bool `json:"enabled"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (e EmailTemplate) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EmailTemplate) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, []string{"label", "name", "default_content", "variables", "enabled", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (o *EmailTemplate) GetLabel() string {
	if o == nil {
		return ""
	}
	return o.Label
}

func (o *EmailTemplate) GetName() EmailTemplateName {
	if o == nil {
		return EmailTemplateName("")
	}
	return o.Name
}

func (o *EmailTemplate) GetDefaultContent() DefaultEmailTemplateContent {
	if o == nil {
		return DefaultEmailTemplateContent{}
	}
	return o.DefaultContent
}

func (o *EmailTemplate) GetContent() *EmailTemplateContent {
	if o == nil {
		return nil
	}
	return o.Content
}

func (o *EmailTemplate) GetVariables() []EmailTemplateVariableName {
	if o == nil {
		return []EmailTemplateVariableName{}
	}
	return o.Variables
}

func (o *EmailTemplate) GetEnabled() bool {
	if o == nil {
		return false
	}
	return o.Enabled
}

func (o *EmailTemplate) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *EmailTemplate) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}
