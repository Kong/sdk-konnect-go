// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type APIImplementationListItemType string

const (
	APIImplementationListItemTypeAPIImplementationListItemGatewayServiceEntity APIImplementationListItemType = "ApiImplementationListItemGatewayServiceEntity"
)

// APIImplementationListItem - An entity that implements an API
type APIImplementationListItem struct {
	APIImplementationListItemGatewayServiceEntity *APIImplementationListItemGatewayServiceEntity `queryParam:"inline"`

	Type APIImplementationListItemType
}

func CreateAPIImplementationListItemAPIImplementationListItemGatewayServiceEntity(apiImplementationListItemGatewayServiceEntity APIImplementationListItemGatewayServiceEntity) APIImplementationListItem {
	typ := APIImplementationListItemTypeAPIImplementationListItemGatewayServiceEntity

	return APIImplementationListItem{
		APIImplementationListItemGatewayServiceEntity: &apiImplementationListItemGatewayServiceEntity,
		Type: typ,
	}
}

func (u *APIImplementationListItem) UnmarshalJSON(data []byte) error {

	var apiImplementationListItemGatewayServiceEntity APIImplementationListItemGatewayServiceEntity = APIImplementationListItemGatewayServiceEntity{}
	if err := utils.UnmarshalJSON(data, &apiImplementationListItemGatewayServiceEntity, "", true, true); err == nil {
		u.APIImplementationListItemGatewayServiceEntity = &apiImplementationListItemGatewayServiceEntity
		u.Type = APIImplementationListItemTypeAPIImplementationListItemGatewayServiceEntity
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for APIImplementationListItem", string(data))
}

func (u APIImplementationListItem) MarshalJSON() ([]byte, error) {
	if u.APIImplementationListItemGatewayServiceEntity != nil {
		return utils.MarshalJSON(u.APIImplementationListItemGatewayServiceEntity, "", true)
	}

	return nil, errors.New("could not marshal union type APIImplementationListItem: all fields are null")
}
