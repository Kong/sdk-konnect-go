// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

// EntityRegion - Region of the entity.
type EntityRegion string

const (
	EntityRegionUs       EntityRegion = "us"
	EntityRegionEu       EntityRegion = "eu"
	EntityRegionAu       EntityRegion = "au"
	EntityRegionMe       EntityRegion = "me"
	EntityRegionIn       EntityRegion = "in"
	EntityRegionSg       EntityRegion = "sg"
	EntityRegionWildcard EntityRegion = "*"
)

func (e EntityRegion) ToPointer() *EntityRegion {
	return &e
}

// PortalAssignedRoleResponse - An assigned role associates a service and an action to a team.
type PortalAssignedRoleResponse struct {
	ID             *string `json:"id,omitempty"`
	RoleName       *string `json:"role_name,omitempty"`
	EntityID       *string `json:"entity_id,omitempty"`
	EntityTypeName *string `json:"entity_type_name,omitempty"`
	// Region of the entity.
	EntityRegion *EntityRegion `json:"entity_region,omitempty"`
}

func (p *PortalAssignedRoleResponse) GetID() *string {
	if p == nil {
		return nil
	}
	return p.ID
}

func (p *PortalAssignedRoleResponse) GetRoleName() *string {
	if p == nil {
		return nil
	}
	return p.RoleName
}

func (p *PortalAssignedRoleResponse) GetEntityID() *string {
	if p == nil {
		return nil
	}
	return p.EntityID
}

func (p *PortalAssignedRoleResponse) GetEntityTypeName() *string {
	if p == nil {
		return nil
	}
	return p.EntityTypeName
}

func (p *PortalAssignedRoleResponse) GetEntityRegion() *EntityRegion {
	if p == nil {
		return nil
	}
	return p.EntityRegion
}
