// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

type PortalDeveloper struct {
	// Contains a unique identifier used for this resource.
	ID string `json:"id"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
	Email     string    `json:"email"`
	FullName  string    `json:"full_name"`
	// The status of a developer in a portal. Approved developers can log in, create applications, and view and register for products they have access to. Pending, revoked, and rejected developers cannot login or view any non-public portal information, or create or modify applications or registrations.
	Status DeveloperStatus `json:"status"`
}

func (p PortalDeveloper) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PortalDeveloper) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, []string{"id", "created_at", "updated_at", "email", "full_name", "status"}); err != nil {
		return err
	}
	return nil
}

func (p *PortalDeveloper) GetID() string {
	if p == nil {
		return ""
	}
	return p.ID
}

func (p *PortalDeveloper) GetCreatedAt() time.Time {
	if p == nil {
		return time.Time{}
	}
	return p.CreatedAt
}

func (p *PortalDeveloper) GetUpdatedAt() time.Time {
	if p == nil {
		return time.Time{}
	}
	return p.UpdatedAt
}

func (p *PortalDeveloper) GetEmail() string {
	if p == nil {
		return ""
	}
	return p.Email
}

func (p *PortalDeveloper) GetFullName() string {
	if p == nil {
		return ""
	}
	return p.FullName
}

func (p *PortalDeveloper) GetStatus() DeveloperStatus {
	if p == nil {
		return DeveloperStatus("")
	}
	return p.Status
}
