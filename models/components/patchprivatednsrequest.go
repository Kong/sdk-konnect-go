// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

// PatchAwsPrivateDNSResolver - Request schema for updating a Private DNS AWS Resolver.
type PatchAwsPrivateDNSResolver struct {
	// Human-readable name of the Private DNS.
	Name                       *string                                `json:"name,omitempty"`
	PrivateDNSAttachmentConfig *AwsPrivateDNSResolverAttachmentConfig `json:"private_dns_attachment_config,omitempty"`
}

func (p PatchAwsPrivateDNSResolver) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PatchAwsPrivateDNSResolver) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (o *PatchAwsPrivateDNSResolver) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *PatchAwsPrivateDNSResolver) GetPrivateDNSAttachmentConfig() *AwsPrivateDNSResolverAttachmentConfig {
	if o == nil {
		return nil
	}
	return o.PrivateDNSAttachmentConfig
}

type PatchPrivateDNSRequestType string

const (
	PatchPrivateDNSRequestTypePatchAwsPrivateDNSResolver PatchPrivateDNSRequestType = "PatchAwsPrivateDnsResolver"
)

// PatchPrivateDNSRequest - Request schema for updating a Private DNS.
type PatchPrivateDNSRequest struct {
	PatchAwsPrivateDNSResolver *PatchAwsPrivateDNSResolver `queryParam:"inline" name:"PatchPrivateDnsRequest"`

	Type PatchPrivateDNSRequestType
}

func CreatePatchPrivateDNSRequestPatchAwsPrivateDNSResolver(patchAwsPrivateDNSResolver PatchAwsPrivateDNSResolver) PatchPrivateDNSRequest {
	typ := PatchPrivateDNSRequestTypePatchAwsPrivateDNSResolver

	return PatchPrivateDNSRequest{
		PatchAwsPrivateDNSResolver: &patchAwsPrivateDNSResolver,
		Type:                       typ,
	}
}

func (u *PatchPrivateDNSRequest) UnmarshalJSON(data []byte) error {

	var patchAwsPrivateDNSResolver PatchAwsPrivateDNSResolver = PatchAwsPrivateDNSResolver{}
	if err := utils.UnmarshalJSON(data, &patchAwsPrivateDNSResolver, "", true, nil); err == nil {
		u.PatchAwsPrivateDNSResolver = &patchAwsPrivateDNSResolver
		u.Type = PatchPrivateDNSRequestTypePatchAwsPrivateDNSResolver
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for PatchPrivateDNSRequest", string(data))
}

func (u PatchPrivateDNSRequest) MarshalJSON() ([]byte, error) {
	if u.PatchAwsPrivateDNSResolver != nil {
		return utils.MarshalJSON(u.PatchAwsPrivateDNSResolver, "", true)
	}

	return nil, errors.New("could not marshal union type PatchPrivateDNSRequest: all fields are null")
}
