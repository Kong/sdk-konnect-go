// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

// KeyAuthApplicationPortal - Information about the portal the application is in.
type KeyAuthApplicationPortal struct {
	// Contains a unique identifier used for this resource.
	ID string `json:"id"`
}

func (k KeyAuthApplicationPortal) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(k, "", false)
}

func (k *KeyAuthApplicationPortal) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &k, "", false, []string{"id"}); err != nil {
		return err
	}
	return nil
}

func (o *KeyAuthApplicationPortal) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

type KeyAuthApplication struct {
	// Contains a unique identifier used for this resource.
	ID string `json:"id"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
	// The name of the application.
	Name string `json:"name"`
	// A description of the application.
	Description *string `default:"null" json:"description"`
	// KeyAuth Auth strategy that the application uses.
	AuthStrategy AuthStrategyKeyAuth `json:"auth_strategy"`
	// Information about the portal the application is in.
	Portal KeyAuthApplicationPortal `json:"portal"`
	// The number of API registrations that are associated with the application. Registrations of any status are included in the count.
	RegistrationCount float64 `json:"registration_count"`
}

func (k KeyAuthApplication) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(k, "", false)
}

func (k *KeyAuthApplication) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &k, "", false, []string{"id", "created_at", "updated_at", "name", "auth_strategy", "portal", "registration_count"}); err != nil {
		return err
	}
	return nil
}

func (o *KeyAuthApplication) GetID() string {
	if o == nil {
		return ""
	}
	return o.ID
}

func (o *KeyAuthApplication) GetCreatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.CreatedAt
}

func (o *KeyAuthApplication) GetUpdatedAt() time.Time {
	if o == nil {
		return time.Time{}
	}
	return o.UpdatedAt
}

func (o *KeyAuthApplication) GetName() string {
	if o == nil {
		return ""
	}
	return o.Name
}

func (o *KeyAuthApplication) GetDescription() *string {
	if o == nil {
		return nil
	}
	return o.Description
}

func (o *KeyAuthApplication) GetAuthStrategy() AuthStrategyKeyAuth {
	if o == nil {
		return AuthStrategyKeyAuth{}
	}
	return o.AuthStrategy
}

func (o *KeyAuthApplication) GetPortal() KeyAuthApplicationPortal {
	if o == nil {
		return KeyAuthApplicationPortal{}
	}
	return o.Portal
}

func (o *KeyAuthApplication) GetRegistrationCount() float64 {
	if o == nil {
		return 0.0
	}
	return o.RegistrationCount
}
