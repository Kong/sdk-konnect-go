// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type StringFieldEqualsComparison struct {
	Eq string `queryParam:"name=eq"`
}

func (o *StringFieldEqualsComparison) GetEq() string {
	if o == nil {
		return ""
	}
	return o.Eq
}

type CloudGatewaysStringFieldEqualsFilterOverrideType string

const (
	CloudGatewaysStringFieldEqualsFilterOverrideTypeStr                         CloudGatewaysStringFieldEqualsFilterOverrideType = "str"
	CloudGatewaysStringFieldEqualsFilterOverrideTypeStringFieldEqualsComparison CloudGatewaysStringFieldEqualsFilterOverrideType = "StringFieldEqualsComparison"
)

// CloudGatewaysStringFieldEqualsFilterOverride - Filters on the given string field value by exact match.
type CloudGatewaysStringFieldEqualsFilterOverride struct {
	Str                         *string                      `queryParam:"inline"`
	StringFieldEqualsComparison *StringFieldEqualsComparison `queryParam:"inline"`

	Type CloudGatewaysStringFieldEqualsFilterOverrideType
}

func CreateCloudGatewaysStringFieldEqualsFilterOverrideStr(str string) CloudGatewaysStringFieldEqualsFilterOverride {
	typ := CloudGatewaysStringFieldEqualsFilterOverrideTypeStr

	return CloudGatewaysStringFieldEqualsFilterOverride{
		Str:  &str,
		Type: typ,
	}
}

func CreateCloudGatewaysStringFieldEqualsFilterOverrideStringFieldEqualsComparison(stringFieldEqualsComparison StringFieldEqualsComparison) CloudGatewaysStringFieldEqualsFilterOverride {
	typ := CloudGatewaysStringFieldEqualsFilterOverrideTypeStringFieldEqualsComparison

	return CloudGatewaysStringFieldEqualsFilterOverride{
		StringFieldEqualsComparison: &stringFieldEqualsComparison,
		Type:                        typ,
	}
}

func (u *CloudGatewaysStringFieldEqualsFilterOverride) UnmarshalJSON(data []byte) error {

	var stringFieldEqualsComparison StringFieldEqualsComparison = StringFieldEqualsComparison{}
	if err := utils.UnmarshalJSON(data, &stringFieldEqualsComparison, "", true, true); err == nil {
		u.StringFieldEqualsComparison = &stringFieldEqualsComparison
		u.Type = CloudGatewaysStringFieldEqualsFilterOverrideTypeStringFieldEqualsComparison
		return nil
	}

	var str string = ""
	if err := utils.UnmarshalJSON(data, &str, "", true, true); err == nil {
		u.Str = &str
		u.Type = CloudGatewaysStringFieldEqualsFilterOverrideTypeStr
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for CloudGatewaysStringFieldEqualsFilterOverride", string(data))
}

func (u CloudGatewaysStringFieldEqualsFilterOverride) MarshalJSON() ([]byte, error) {
	if u.Str != nil {
		return utils.MarshalJSON(u.Str, "", true)
	}

	if u.StringFieldEqualsComparison != nil {
		return utils.MarshalJSON(u.StringFieldEqualsComparison, "", true)
	}

	return nil, errors.New("could not marshal union type CloudGatewaysStringFieldEqualsFilterOverride: all fields are null")
}
