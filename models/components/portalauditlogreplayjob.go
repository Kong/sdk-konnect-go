// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"encoding/json"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

type PortalAuditLogReplayJobStatus string

const (
	PortalAuditLogReplayJobStatusUnconfigured PortalAuditLogReplayJobStatus = "unconfigured"
	PortalAuditLogReplayJobStatusAccepted     PortalAuditLogReplayJobStatus = "accepted"
	PortalAuditLogReplayJobStatusPending      PortalAuditLogReplayJobStatus = "pending"
	PortalAuditLogReplayJobStatusRunning      PortalAuditLogReplayJobStatus = "running"
	PortalAuditLogReplayJobStatusCompleted    PortalAuditLogReplayJobStatus = "completed"
	PortalAuditLogReplayJobStatusFailed       PortalAuditLogReplayJobStatus = "failed"
)

func (e PortalAuditLogReplayJobStatus) ToPointer() *PortalAuditLogReplayJobStatus {
	return &e
}
func (e *PortalAuditLogReplayJobStatus) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "unconfigured":
		fallthrough
	case "accepted":
		fallthrough
	case "pending":
		fallthrough
	case "running":
		fallthrough
	case "completed":
		fallthrough
	case "failed":
		*e = PortalAuditLogReplayJobStatus(v)
		return nil
	default:
		return fmt.Errorf("invalid value for PortalAuditLogReplayJobStatus: %v", v)
	}
}

// PortalAuditLogReplayJob - Response from fetching or updating an portal audit log replay job
type PortalAuditLogReplayJob struct {
	// The start of a date-time range. Initial value is 0001-01-01T00:00:0Z.
	StartAt *time.Time `json:"start_at,omitempty"`
	// The end of a date-time range. Initial value is 0001-01-01T00:00:0Z.
	EndAt  *time.Time                     `json:"end_at,omitempty"`
	Status *PortalAuditLogReplayJobStatus `json:"status,omitempty"`
	// Timestamp when this job was last updated. Initial value is 0001-01-01T00:00:0Z.
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
}

func (p PortalAuditLogReplayJob) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(p, "", false)
}

func (p *PortalAuditLogReplayJob) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &p, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *PortalAuditLogReplayJob) GetStartAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.StartAt
}

func (o *PortalAuditLogReplayJob) GetEndAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.EndAt
}

func (o *PortalAuditLogReplayJob) GetStatus() *PortalAuditLogReplayJobStatus {
	if o == nil {
		return nil
	}
	return o.Status
}

func (o *PortalAuditLogReplayJob) GetUpdatedAt() *time.Time {
	if o == nil {
		return nil
	}
	return o.UpdatedAt
}
