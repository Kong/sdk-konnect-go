// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

type APISpecificationSummary struct {
	// The API specification identifier.
	ID string `json:"id"`
	// The type of specification being stored. This allows us to render the specification correctly.
	//
	Type APISpecType `json:"type"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (a APISpecificationSummary) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *APISpecificationSummary) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"id", "type", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (a *APISpecificationSummary) GetID() string {
	if a == nil {
		return ""
	}
	return a.ID
}

func (a *APISpecificationSummary) GetType() APISpecType {
	if a == nil {
		return APISpecType("")
	}
	return a.Type
}

func (a *APISpecificationSummary) GetCreatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.CreatedAt
}

func (a *APISpecificationSummary) GetUpdatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.UpdatedAt
}

// ListAPISpecResponse - List of API specifications (OpenAPI or AsyncAPI)
type ListAPISpecResponse struct {
	// returns the pagination information
	Meta PaginatedMeta             `json:"meta"`
	Data []APISpecificationSummary `json:"data"`
}

func (l *ListAPISpecResponse) GetMeta() PaginatedMeta {
	if l == nil {
		return PaginatedMeta{}
	}
	return l.Meta
}

func (l *ListAPISpecResponse) GetData() []APISpecificationSummary {
	if l == nil {
		return []APISpecificationSummary{}
	}
	return l.Data
}
