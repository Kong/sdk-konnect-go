// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type APIFilterParameters struct {
	// Filters on the given string field value by exact match inequality.
	ID *UUIDFieldFilter `queryParam:"name=id"`
	// Filters on the given string field value by exact match inequality.
	Name *StringFieldFilter `queryParam:"name=name"`
	// Filters on the given string field value by exact match inequality.
	Version    *StringFieldFilter     `queryParam:"name=version"`
	Labels     *LabelsFieldFilter     `queryParam:"name=labels"`
	Attributes *AttributesFieldFilter `queryParam:"name=attributes"`
	// Filters on the given datetime (RFC-3339) field value.
	CreatedAt *DateTimeFieldFilter `queryParam:"name=created_at"`
	// Filters on the given datetime (RFC-3339) field value.
	UpdatedAt *DateTimeFieldFilter `queryParam:"name=updated_at"`
}

func (a *APIFilterParameters) GetID() *UUIDFieldFilter {
	if a == nil {
		return nil
	}
	return a.ID
}

func (a *APIFilterParameters) GetName() *StringFieldFilter {
	if a == nil {
		return nil
	}
	return a.Name
}

func (a *APIFilterParameters) GetVersion() *StringFieldFilter {
	if a == nil {
		return nil
	}
	return a.Version
}

func (a *APIFilterParameters) GetLabels() *LabelsFieldFilter {
	if a == nil {
		return nil
	}
	return a.Labels
}

func (a *APIFilterParameters) GetAttributes() *AttributesFieldFilter {
	if a == nil {
		return nil
	}
	return a.Attributes
}

func (a *APIFilterParameters) GetCreatedAt() *DateTimeFieldFilter {
	if a == nil {
		return nil
	}
	return a.CreatedAt
}

func (a *APIFilterParameters) GetUpdatedAt() *DateTimeFieldFilter {
	if a == nil {
		return nil
	}
	return a.UpdatedAt
}
