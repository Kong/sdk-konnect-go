// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type ClaimMappings struct {
	Name   *string `default:"name" json:"name"`
	Email  *string `default:"email" json:"email"`
	Groups *string `default:"groups" json:"groups"`
}

func (c ClaimMappings) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(c, "", false)
}

func (c *ClaimMappings) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &c, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *ClaimMappings) GetName() *string {
	if o == nil {
		return nil
	}
	return o.Name
}

func (o *ClaimMappings) GetEmail() *string {
	if o == nil {
		return nil
	}
	return o.Email
}

func (o *ClaimMappings) GetGroups() *string {
	if o == nil {
		return nil
	}
	return o.Groups
}

// IDP - The IdP object contains the configuration data for the OIDC authentication integration.
//
// NOTE: The `openid` scope is required. Removing it could break the OIDC integration.
type IDP struct {
	Issuer        *string        `default:"null" json:"issuer"`
	LoginPath     *string        `default:"null" json:"login_path"`
	ClientID      *string        `default:"null" json:"client_id"`
	Scopes        []string       `json:"scopes,omitempty"`
	ClaimMappings *ClaimMappings `json:"claim_mappings,omitempty"`
}

func (i IDP) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(i, "", false)
}

func (i *IDP) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &i, "", false, false); err != nil {
		return err
	}
	return nil
}

func (o *IDP) GetIssuer() *string {
	if o == nil {
		return nil
	}
	return o.Issuer
}

func (o *IDP) GetLoginPath() *string {
	if o == nil {
		return nil
	}
	return o.LoginPath
}

func (o *IDP) GetClientID() *string {
	if o == nil {
		return nil
	}
	return o.ClientID
}

func (o *IDP) GetScopes() []string {
	if o == nil {
		return nil
	}
	return o.Scopes
}

func (o *IDP) GetClaimMappings() *ClaimMappings {
	if o == nil {
		return nil
	}
	return o.ClaimMappings
}
