// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type PrivateDNSStateFieldFilterType string

const (
	PrivateDNSStateFieldFilterTypePrivateDNSStateFieldEqualsFilter     PrivateDNSStateFieldFilterType = "PrivateDnsStateFieldEqualsFilter"
	PrivateDNSStateFieldFilterTypePrivateDNSStateFieldNotEqualsFilter  PrivateDNSStateFieldFilterType = "PrivateDnsStateFieldNotEqualsFilter"
	PrivateDNSStateFieldFilterTypePrivateDNSStateFieldOrEqualityFilter PrivateDNSStateFieldFilterType = "PrivateDnsStateFieldOrEqualityFilter"
)

type PrivateDNSStateFieldFilter struct {
	PrivateDNSStateFieldEqualsFilter     *PrivateDNSStateFieldEqualsFilter     `queryParam:"inline"`
	PrivateDNSStateFieldNotEqualsFilter  *PrivateDNSStateFieldNotEqualsFilter  `queryParam:"inline"`
	PrivateDNSStateFieldOrEqualityFilter *PrivateDNSStateFieldOrEqualityFilter `queryParam:"inline"`

	Type PrivateDNSStateFieldFilterType
}

func CreatePrivateDNSStateFieldFilterPrivateDNSStateFieldEqualsFilter(privateDNSStateFieldEqualsFilter PrivateDNSStateFieldEqualsFilter) PrivateDNSStateFieldFilter {
	typ := PrivateDNSStateFieldFilterTypePrivateDNSStateFieldEqualsFilter

	return PrivateDNSStateFieldFilter{
		PrivateDNSStateFieldEqualsFilter: &privateDNSStateFieldEqualsFilter,
		Type:                             typ,
	}
}

func CreatePrivateDNSStateFieldFilterPrivateDNSStateFieldNotEqualsFilter(privateDNSStateFieldNotEqualsFilter PrivateDNSStateFieldNotEqualsFilter) PrivateDNSStateFieldFilter {
	typ := PrivateDNSStateFieldFilterTypePrivateDNSStateFieldNotEqualsFilter

	return PrivateDNSStateFieldFilter{
		PrivateDNSStateFieldNotEqualsFilter: &privateDNSStateFieldNotEqualsFilter,
		Type:                                typ,
	}
}

func CreatePrivateDNSStateFieldFilterPrivateDNSStateFieldOrEqualityFilter(privateDNSStateFieldOrEqualityFilter PrivateDNSStateFieldOrEqualityFilter) PrivateDNSStateFieldFilter {
	typ := PrivateDNSStateFieldFilterTypePrivateDNSStateFieldOrEqualityFilter

	return PrivateDNSStateFieldFilter{
		PrivateDNSStateFieldOrEqualityFilter: &privateDNSStateFieldOrEqualityFilter,
		Type:                                 typ,
	}
}

func (u *PrivateDNSStateFieldFilter) UnmarshalJSON(data []byte) error {

	var privateDNSStateFieldNotEqualsFilter PrivateDNSStateFieldNotEqualsFilter = PrivateDNSStateFieldNotEqualsFilter{}
	if err := utils.UnmarshalJSON(data, &privateDNSStateFieldNotEqualsFilter, "", true, true); err == nil {
		u.PrivateDNSStateFieldNotEqualsFilter = &privateDNSStateFieldNotEqualsFilter
		u.Type = PrivateDNSStateFieldFilterTypePrivateDNSStateFieldNotEqualsFilter
		return nil
	}

	var privateDNSStateFieldOrEqualityFilter PrivateDNSStateFieldOrEqualityFilter = PrivateDNSStateFieldOrEqualityFilter{}
	if err := utils.UnmarshalJSON(data, &privateDNSStateFieldOrEqualityFilter, "", true, true); err == nil {
		u.PrivateDNSStateFieldOrEqualityFilter = &privateDNSStateFieldOrEqualityFilter
		u.Type = PrivateDNSStateFieldFilterTypePrivateDNSStateFieldOrEqualityFilter
		return nil
	}

	var privateDNSStateFieldEqualsFilter PrivateDNSStateFieldEqualsFilter = PrivateDNSStateFieldEqualsFilter{}
	if err := utils.UnmarshalJSON(data, &privateDNSStateFieldEqualsFilter, "", true, true); err == nil {
		u.PrivateDNSStateFieldEqualsFilter = &privateDNSStateFieldEqualsFilter
		u.Type = PrivateDNSStateFieldFilterTypePrivateDNSStateFieldEqualsFilter
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for PrivateDNSStateFieldFilter", string(data))
}

func (u PrivateDNSStateFieldFilter) MarshalJSON() ([]byte, error) {
	if u.PrivateDNSStateFieldEqualsFilter != nil {
		return utils.MarshalJSON(u.PrivateDNSStateFieldEqualsFilter, "", true)
	}

	if u.PrivateDNSStateFieldNotEqualsFilter != nil {
		return utils.MarshalJSON(u.PrivateDNSStateFieldNotEqualsFilter, "", true)
	}

	if u.PrivateDNSStateFieldOrEqualityFilter != nil {
		return utils.MarshalJSON(u.PrivateDNSStateFieldOrEqualityFilter, "", true)
	}

	return nil, errors.New("could not marshal union type PrivateDNSStateFieldFilter: all fields are null")
}
