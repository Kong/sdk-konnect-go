// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

type NotificationFilterParameters struct {
	// Filters on the given string field value by fuzzy match.
	Title *LegacyStringFieldFilter `queryParam:"name=title"`
	// Filters on the given string field value by fuzzy match.
	Description *LegacyStringFieldFilter `queryParam:"name=description"`
	// Filters on the given string field value by fuzzy match.
	Namespace *LegacyStringFieldFilter `queryParam:"name=namespace"`
	// Filters on the given string field value by fuzzy match.
	Region *LegacyStringFieldFilter `queryParam:"name=region"`
	// Filters on the given string field value by fuzzy match.
	Status *LegacyStringFieldFilter `queryParam:"name=status"`
}

func (n *NotificationFilterParameters) GetTitle() *LegacyStringFieldFilter {
	if n == nil {
		return nil
	}
	return n.Title
}

func (n *NotificationFilterParameters) GetDescription() *LegacyStringFieldFilter {
	if n == nil {
		return nil
	}
	return n.Description
}

func (n *NotificationFilterParameters) GetNamespace() *LegacyStringFieldFilter {
	if n == nil {
		return nil
	}
	return n.Namespace
}

func (n *NotificationFilterParameters) GetRegion() *LegacyStringFieldFilter {
	if n == nil {
		return nil
	}
	return n.Region
}

func (n *NotificationFilterParameters) GetStatus() *LegacyStringFieldFilter {
	if n == nil {
		return nil
	}
	return n.Status
}
