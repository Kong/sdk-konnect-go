// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

type EmailDomain struct {
	Domain               string                  `json:"domain"`
	Verification         EmailDomainVerification `json:"verification"`
	DNSValidationRecords []DNSRecord             `json:"dns_validation_records"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (e EmailDomain) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(e, "", false)
}

func (e *EmailDomain) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &e, "", false, []string{"domain", "verification", "dns_validation_records", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (e *EmailDomain) GetDomain() string {
	if e == nil {
		return ""
	}
	return e.Domain
}

func (e *EmailDomain) GetVerification() EmailDomainVerification {
	if e == nil {
		return EmailDomainVerification{}
	}
	return e.Verification
}

func (e *EmailDomain) GetDNSValidationRecords() []DNSRecord {
	if e == nil {
		return []DNSRecord{}
	}
	return e.DNSValidationRecords
}

func (e *EmailDomain) GetCreatedAt() time.Time {
	if e == nil {
		return time.Time{}
	}
	return e.CreatedAt
}

func (e *EmailDomain) GetUpdatedAt() time.Time {
	if e == nil {
		return time.Time{}
	}
	return e.UpdatedAt
}
