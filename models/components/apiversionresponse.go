// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"time"
)

// APIVersionResponseAPISpecType - The type of specification being stored. This allows us to render the specification correctly.
type APIVersionResponseAPISpecType string

const (
	APIVersionResponseAPISpecTypeOas2     APIVersionResponseAPISpecType = "oas2"
	APIVersionResponseAPISpecTypeOas3     APIVersionResponseAPISpecType = "oas3"
	APIVersionResponseAPISpecTypeAsyncapi APIVersionResponseAPISpecType = "asyncapi"
)

func (e APIVersionResponseAPISpecType) ToPointer() *APIVersionResponseAPISpecType {
	return &e
}

type APIVersionResponseValidationMessages struct {
	Message string `json:"message"`
}

func (a *APIVersionResponseValidationMessages) GetMessage() string {
	if a == nil {
		return ""
	}
	return a.Message
}

type APIVersionResponseSpec struct {
	// The raw content of your API spec, in json or yaml format (OpenAPI or AsyncAPI).
	//
	Content *string `default:"null" json:"content"`
	// The type of specification being stored. This allows us to render the specification correctly.
	//
	Type *APIVersionResponseAPISpecType `json:"type,omitempty"`
	// The errors that occurred while parsing the API version spec.
	ValidationMessages []APIVersionResponseValidationMessages `json:"validation_messages,omitempty"`
}

func (a APIVersionResponseSpec) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *APIVersionResponseSpec) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, nil); err != nil {
		return err
	}
	return nil
}

func (a *APIVersionResponseSpec) GetContent() *string {
	if a == nil {
		return nil
	}
	return a.Content
}

func (a *APIVersionResponseSpec) GetType() *APIVersionResponseAPISpecType {
	if a == nil {
		return nil
	}
	return a.Type
}

func (a *APIVersionResponseSpec) GetValidationMessages() []APIVersionResponseValidationMessages {
	if a == nil {
		return nil
	}
	return a.ValidationMessages
}

// APIVersionResponse - API version (OpenAPI or AsyncAPI)
type APIVersionResponse struct {
	// The API version identifier.
	ID string `json:"id"`
	// The version of the api.
	Version *string                 `default:"null" json:"version"`
	Spec    *APIVersionResponseSpec `json:"spec,omitempty"`
	// An ISO-8601 timestamp representation of entity creation date.
	CreatedAt time.Time `json:"created_at"`
	// An ISO-8601 timestamp representation of entity update date.
	UpdatedAt time.Time `json:"updated_at"`
}

func (a APIVersionResponse) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(a, "", false)
}

func (a *APIVersionResponse) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &a, "", false, []string{"id", "created_at", "updated_at"}); err != nil {
		return err
	}
	return nil
}

func (a *APIVersionResponse) GetID() string {
	if a == nil {
		return ""
	}
	return a.ID
}

func (a *APIVersionResponse) GetVersion() *string {
	if a == nil {
		return nil
	}
	return a.Version
}

func (a *APIVersionResponse) GetSpec() *APIVersionResponseSpec {
	if a == nil {
		return nil
	}
	return a.Spec
}

func (a *APIVersionResponse) GetCreatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.CreatedAt
}

func (a *APIVersionResponse) GetUpdatedAt() time.Time {
	if a == nil {
		return time.Time{}
	}
	return a.UpdatedAt
}
