// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package components

import (
	"errors"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
)

type PrivateDNSResponseType string

const (
	PrivateDNSResponseTypeAwsPrivateHostedZoneResponse   PrivateDNSResponseType = "AwsPrivateHostedZoneResponse"
	PrivateDNSResponseTypeAwsPrivateDNSResolverResponse  PrivateDNSResponseType = "AwsPrivateDnsResolverResponse"
	PrivateDNSResponseTypeGcpPrivateHostedZoneResponse   PrivateDNSResponseType = "GcpPrivateHostedZoneResponse"
	PrivateDNSResponseTypeAzurePrivateHostedZoneResponse PrivateDNSResponseType = "AzurePrivateHostedZoneResponse"
)

type PrivateDNSResponse struct {
	AwsPrivateHostedZoneResponse   *AwsPrivateHostedZoneResponse   `queryParam:"inline" name:"PrivateDnsResponse"`
	AwsPrivateDNSResolverResponse  *AwsPrivateDNSResolverResponse  `queryParam:"inline" name:"PrivateDnsResponse"`
	GcpPrivateHostedZoneResponse   *GcpPrivateHostedZoneResponse   `queryParam:"inline" name:"PrivateDnsResponse"`
	AzurePrivateHostedZoneResponse *AzurePrivateHostedZoneResponse `queryParam:"inline" name:"PrivateDnsResponse"`

	Type PrivateDNSResponseType
}

func CreatePrivateDNSResponseAwsPrivateHostedZoneResponse(awsPrivateHostedZoneResponse AwsPrivateHostedZoneResponse) PrivateDNSResponse {
	typ := PrivateDNSResponseTypeAwsPrivateHostedZoneResponse

	return PrivateDNSResponse{
		AwsPrivateHostedZoneResponse: &awsPrivateHostedZoneResponse,
		Type:                         typ,
	}
}

func CreatePrivateDNSResponseAwsPrivateDNSResolverResponse(awsPrivateDNSResolverResponse AwsPrivateDNSResolverResponse) PrivateDNSResponse {
	typ := PrivateDNSResponseTypeAwsPrivateDNSResolverResponse

	return PrivateDNSResponse{
		AwsPrivateDNSResolverResponse: &awsPrivateDNSResolverResponse,
		Type:                          typ,
	}
}

func CreatePrivateDNSResponseGcpPrivateHostedZoneResponse(gcpPrivateHostedZoneResponse GcpPrivateHostedZoneResponse) PrivateDNSResponse {
	typ := PrivateDNSResponseTypeGcpPrivateHostedZoneResponse

	return PrivateDNSResponse{
		GcpPrivateHostedZoneResponse: &gcpPrivateHostedZoneResponse,
		Type:                         typ,
	}
}

func CreatePrivateDNSResponseAzurePrivateHostedZoneResponse(azurePrivateHostedZoneResponse AzurePrivateHostedZoneResponse) PrivateDNSResponse {
	typ := PrivateDNSResponseTypeAzurePrivateHostedZoneResponse

	return PrivateDNSResponse{
		AzurePrivateHostedZoneResponse: &azurePrivateHostedZoneResponse,
		Type:                           typ,
	}
}

func (u *PrivateDNSResponse) UnmarshalJSON(data []byte) error {

	var awsPrivateHostedZoneResponse AwsPrivateHostedZoneResponse = AwsPrivateHostedZoneResponse{}
	if err := utils.UnmarshalJSON(data, &awsPrivateHostedZoneResponse, "", true, nil); err == nil {
		u.AwsPrivateHostedZoneResponse = &awsPrivateHostedZoneResponse
		u.Type = PrivateDNSResponseTypeAwsPrivateHostedZoneResponse
		return nil
	}

	var awsPrivateDNSResolverResponse AwsPrivateDNSResolverResponse = AwsPrivateDNSResolverResponse{}
	if err := utils.UnmarshalJSON(data, &awsPrivateDNSResolverResponse, "", true, nil); err == nil {
		u.AwsPrivateDNSResolverResponse = &awsPrivateDNSResolverResponse
		u.Type = PrivateDNSResponseTypeAwsPrivateDNSResolverResponse
		return nil
	}

	var gcpPrivateHostedZoneResponse GcpPrivateHostedZoneResponse = GcpPrivateHostedZoneResponse{}
	if err := utils.UnmarshalJSON(data, &gcpPrivateHostedZoneResponse, "", true, nil); err == nil {
		u.GcpPrivateHostedZoneResponse = &gcpPrivateHostedZoneResponse
		u.Type = PrivateDNSResponseTypeGcpPrivateHostedZoneResponse
		return nil
	}

	var azurePrivateHostedZoneResponse AzurePrivateHostedZoneResponse = AzurePrivateHostedZoneResponse{}
	if err := utils.UnmarshalJSON(data, &azurePrivateHostedZoneResponse, "", true, nil); err == nil {
		u.AzurePrivateHostedZoneResponse = &azurePrivateHostedZoneResponse
		u.Type = PrivateDNSResponseTypeAzurePrivateHostedZoneResponse
		return nil
	}

	return fmt.Errorf("could not unmarshal `%s` into any supported union types for PrivateDNSResponse", string(data))
}

func (u PrivateDNSResponse) MarshalJSON() ([]byte, error) {
	if u.AwsPrivateHostedZoneResponse != nil {
		return utils.MarshalJSON(u.AwsPrivateHostedZoneResponse, "", true)
	}

	if u.AwsPrivateDNSResolverResponse != nil {
		return utils.MarshalJSON(u.AwsPrivateDNSResolverResponse, "", true)
	}

	if u.GcpPrivateHostedZoneResponse != nil {
		return utils.MarshalJSON(u.GcpPrivateHostedZoneResponse, "", true)
	}

	if u.AzurePrivateHostedZoneResponse != nil {
		return utils.MarshalJSON(u.AzurePrivateHostedZoneResponse, "", true)
	}

	return nil, errors.New("could not marshal union type PrivateDNSResponse: all fields are null")
}
