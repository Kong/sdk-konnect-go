// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Kong/sdk-konnect-go/models/components"
	"net/http"
)

type UpsertKeyRequest struct {
	// ID of the Key to lookup
	KeyID string `pathParam:"style=simple,explode=false,name=KeyId"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// Description of the Key
	Key components.Key `request:"mediaType=application/json"`
}

func (u *UpsertKeyRequest) GetKeyID() string {
	if u == nil {
		return ""
	}
	return u.KeyID
}

func (u *UpsertKeyRequest) GetControlPlaneID() string {
	if u == nil {
		return ""
	}
	return u.ControlPlaneID
}

func (u *UpsertKeyRequest) GetKey() components.Key {
	if u == nil {
		return components.Key{}
	}
	return u.Key
}

type UpsertKeyResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successfully upserted Key
	Key *components.Key
}

func (u *UpsertKeyResponse) GetContentType() string {
	if u == nil {
		return ""
	}
	return u.ContentType
}

func (u *UpsertKeyResponse) GetStatusCode() int {
	if u == nil {
		return 0
	}
	return u.StatusCode
}

func (u *UpsertKeyResponse) GetRawResponse() *http.Response {
	if u == nil {
		return nil
	}
	return u.RawResponse
}

func (u *UpsertKeyResponse) GetKey() *components.Key {
	if u == nil {
		return nil
	}
	return u.Key
}
