// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"net/http"
)

type DeletePluginWithConsumerRequest struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// Consumer ID for nested entities
	ConsumerIDForNestedEntities string `pathParam:"style=simple,explode=false,name=ConsumerIdForNestedEntities"`
	// ID of the Plugin to lookup
	PluginID string `pathParam:"style=simple,explode=false,name=PluginId"`
}

func (d *DeletePluginWithConsumerRequest) GetControlPlaneID() string {
	if d == nil {
		return ""
	}
	return d.ControlPlaneID
}

func (d *DeletePluginWithConsumerRequest) GetConsumerIDForNestedEntities() string {
	if d == nil {
		return ""
	}
	return d.ConsumerIDForNestedEntities
}

func (d *DeletePluginWithConsumerRequest) GetPluginID() string {
	if d == nil {
		return ""
	}
	return d.PluginID
}

type DeletePluginWithConsumerResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (d *DeletePluginWithConsumerResponse) GetContentType() string {
	if d == nil {
		return ""
	}
	return d.ContentType
}

func (d *DeletePluginWithConsumerResponse) GetStatusCode() int {
	if d == nil {
		return 0
	}
	return d.StatusCode
}

func (d *DeletePluginWithConsumerResponse) GetRawResponse() *http.Response {
	if d == nil {
		return nil
	}
	return d.RawResponse
}
