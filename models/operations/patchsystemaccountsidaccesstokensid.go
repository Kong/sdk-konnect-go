// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Kong/sdk-konnect-go/models/components"
	"net/http"
)

var PatchSystemAccountsIDAccessTokensIDServerList = []string{
	"https://global.api.konghq.com/",
}

type PatchSystemAccountsIDAccessTokensIDRequest struct {
	// ID of the system account.
	AccountID string `pathParam:"style=simple,explode=false,name=accountId"`
	// ID of the system account access token.
	TokenID                        string                                     `pathParam:"style=simple,explode=false,name=tokenId"`
	UpdateSystemAccountAccessToken *components.UpdateSystemAccountAccessToken `request:"mediaType=application/json"`
}

func (p *PatchSystemAccountsIDAccessTokensIDRequest) GetAccountID() string {
	if p == nil {
		return ""
	}
	return p.AccountID
}

func (p *PatchSystemAccountsIDAccessTokensIDRequest) GetTokenID() string {
	if p == nil {
		return ""
	}
	return p.TokenID
}

func (p *PatchSystemAccountsIDAccessTokensIDRequest) GetUpdateSystemAccountAccessToken() *components.UpdateSystemAccountAccessToken {
	if p == nil {
		return nil
	}
	return p.UpdateSystemAccountAccessToken
}

type PatchSystemAccountsIDAccessTokensIDResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A response including a single system account access token.
	SystemAccountAccessToken *components.SystemAccountAccessToken
}

func (p *PatchSystemAccountsIDAccessTokensIDResponse) GetContentType() string {
	if p == nil {
		return ""
	}
	return p.ContentType
}

func (p *PatchSystemAccountsIDAccessTokensIDResponse) GetStatusCode() int {
	if p == nil {
		return 0
	}
	return p.StatusCode
}

func (p *PatchSystemAccountsIDAccessTokensIDResponse) GetRawResponse() *http.Response {
	if p == nil {
		return nil
	}
	return p.RawResponse
}

func (p *PatchSystemAccountsIDAccessTokensIDResponse) GetSystemAccountAccessToken() *components.SystemAccountAccessToken {
	if p == nil {
		return nil
	}
	return p.SystemAccountAccessToken
}
