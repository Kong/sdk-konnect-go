// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Kong/sdk-konnect-go/models/components"
	"net/http"
)

// GetPortalIdentityProvidersQueryParamFilter - Filter identity providers returned in the response.
type GetPortalIdentityProvidersQueryParamFilter struct {
	// Filters on the given string field value by exact match.
	Type *components.StringFieldEqualsFilter `queryParam:"name=type"`
}

func (g *GetPortalIdentityProvidersQueryParamFilter) GetType() *components.StringFieldEqualsFilter {
	if g == nil {
		return nil
	}
	return g.Type
}

type GetPortalIdentityProvidersRequest struct {
	// ID of the portal.
	PortalID string `pathParam:"style=simple,explode=false,name=portalId"`
	// Filter identity providers returned in the response.
	Filter *GetPortalIdentityProvidersQueryParamFilter `queryParam:"style=deepObject,explode=true,name=filter"`
}

func (g *GetPortalIdentityProvidersRequest) GetPortalID() string {
	if g == nil {
		return ""
	}
	return g.PortalID
}

func (g *GetPortalIdentityProvidersRequest) GetFilter() *GetPortalIdentityProvidersQueryParamFilter {
	if g == nil {
		return nil
	}
	return g.Filter
}

type GetPortalIdentityProvidersResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A collection of identity providers. This response contains a collection of identity providers, which may  include both OIDC and SAML identity providers.
	//
	IdentityProviders []components.IdentityProvider
}

func (g *GetPortalIdentityProvidersResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetPortalIdentityProvidersResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetPortalIdentityProvidersResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetPortalIdentityProvidersResponse) GetIdentityProviders() []components.IdentityProvider {
	if g == nil {
		return nil
	}
	return g.IdentityProviders
}
