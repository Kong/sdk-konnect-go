// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Kong/sdk-konnect-go/models/components"
	"net/http"
)

type UpsertDegraphqlRouteWithServiceRequest struct {
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// ID of the Service to lookup
	ServiceID string `pathParam:"style=simple,explode=false,name=ServiceId"`
	// ID of the Degraphql_route to lookup
	DegraphqlRouteID string `pathParam:"style=simple,explode=false,name=Degraphql_routeId"`
	// Description of the Degraphql_route
	DegraphqlRouteWithoutParents components.DegraphqlRouteWithoutParents `request:"mediaType=application/json"`
}

func (u *UpsertDegraphqlRouteWithServiceRequest) GetControlPlaneID() string {
	if u == nil {
		return ""
	}
	return u.ControlPlaneID
}

func (u *UpsertDegraphqlRouteWithServiceRequest) GetServiceID() string {
	if u == nil {
		return ""
	}
	return u.ServiceID
}

func (u *UpsertDegraphqlRouteWithServiceRequest) GetDegraphqlRouteID() string {
	if u == nil {
		return ""
	}
	return u.DegraphqlRouteID
}

func (u *UpsertDegraphqlRouteWithServiceRequest) GetDegraphqlRouteWithoutParents() components.DegraphqlRouteWithoutParents {
	if u == nil {
		return components.DegraphqlRouteWithoutParents{}
	}
	return u.DegraphqlRouteWithoutParents
}

type UpsertDegraphqlRouteWithServiceResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successfully upserted Degraphql_route
	DegraphqlRoute *components.DegraphqlRoute
}

func (u *UpsertDegraphqlRouteWithServiceResponse) GetContentType() string {
	if u == nil {
		return ""
	}
	return u.ContentType
}

func (u *UpsertDegraphqlRouteWithServiceResponse) GetStatusCode() int {
	if u == nil {
		return 0
	}
	return u.StatusCode
}

func (u *UpsertDegraphqlRouteWithServiceResponse) GetRawResponse() *http.Response {
	if u == nil {
		return nil
	}
	return u.RawResponse
}

func (u *UpsertDegraphqlRouteWithServiceResponse) GetDegraphqlRoute() *components.DegraphqlRoute {
	if u == nil {
		return nil
	}
	return u.DegraphqlRoute
}
