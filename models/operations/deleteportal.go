// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"encoding/json"
	"fmt"
	"github.com/Kong/sdk-konnect-go/internal/utils"
	"net/http"
)

// QueryParamForce - If true, the portal will be deleted, automatically deleting all API publications. If the force param is not set, the deletion will only succeed if there are no APIs currently published.
type QueryParamForce string

const (
	QueryParamForceTrue  QueryParamForce = "true"
	QueryParamForceFalse QueryParamForce = "false"
)

func (e QueryParamForce) ToPointer() *QueryParamForce {
	return &e
}
func (e *QueryParamForce) UnmarshalJSON(data []byte) error {
	var v string
	if err := json.Unmarshal(data, &v); err != nil {
		return err
	}
	switch v {
	case "true":
		fallthrough
	case "false":
		*e = QueryParamForce(v)
		return nil
	default:
		return fmt.Errorf("invalid value for QueryParamForce: %v", v)
	}
}

type DeletePortalRequest struct {
	// ID of the portal.
	PortalID string `pathParam:"style=simple,explode=false,name=portalId"`
	// If true, the portal will be deleted, automatically deleting all API publications. If the force param is not set, the deletion will only succeed if there are no APIs currently published.
	Force *QueryParamForce `default:"false" queryParam:"style=form,explode=true,name=force"`
}

func (d DeletePortalRequest) MarshalJSON() ([]byte, error) {
	return utils.MarshalJSON(d, "", false)
}

func (d *DeletePortalRequest) UnmarshalJSON(data []byte) error {
	if err := utils.UnmarshalJSON(data, &d, "", false, []string{"portalId"}); err != nil {
		return err
	}
	return nil
}

func (d *DeletePortalRequest) GetPortalID() string {
	if d == nil {
		return ""
	}
	return d.PortalID
}

func (d *DeletePortalRequest) GetForce() *QueryParamForce {
	if d == nil {
		return nil
	}
	return d.Force
}

type DeletePortalResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
}

func (d *DeletePortalResponse) GetContentType() string {
	if d == nil {
		return ""
	}
	return d.ContentType
}

func (d *DeletePortalResponse) GetStatusCode() int {
	if d == nil {
		return 0
	}
	return d.StatusCode
}

func (d *DeletePortalResponse) GetRawResponse() *http.Response {
	if d == nil {
		return nil
	}
	return d.RawResponse
}
