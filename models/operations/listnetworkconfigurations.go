// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Kong/sdk-konnect-go/models/components"
	"net/http"
)

var ListNetworkConfigurationsServerList = []string{
	"https://global.api.konghq.com/",
}

type ListNetworkConfigurationsRequest struct {
	// The network to operate on.
	NetworkID string `pathParam:"style=simple,explode=false,name=networkId"`
	// The maximum number of items to include per page. The last page of a collection may include fewer items.
	PageSize *int64 `queryParam:"style=form,explode=true,name=page[size]"`
	// Determines which page of the entities to retrieve.
	PageNumber *int64 `queryParam:"style=form,explode=true,name=page[number]"`
}

func (l *ListNetworkConfigurationsRequest) GetNetworkID() string {
	if l == nil {
		return ""
	}
	return l.NetworkID
}

func (l *ListNetworkConfigurationsRequest) GetPageSize() *int64 {
	if l == nil {
		return nil
	}
	return l.PageSize
}

func (l *ListNetworkConfigurationsRequest) GetPageNumber() *int64 {
	if l == nil {
		return nil
	}
	return l.PageNumber
}

type ListNetworkConfigurationsResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// A paginated list for a collection of configurations that reference a network.
	ListNetworkConfigurationReferencesResponse *components.ListNetworkConfigurationReferencesResponse
}

func (l *ListNetworkConfigurationsResponse) GetContentType() string {
	if l == nil {
		return ""
	}
	return l.ContentType
}

func (l *ListNetworkConfigurationsResponse) GetStatusCode() int {
	if l == nil {
		return 0
	}
	return l.StatusCode
}

func (l *ListNetworkConfigurationsResponse) GetRawResponse() *http.Response {
	if l == nil {
		return nil
	}
	return l.RawResponse
}

func (l *ListNetworkConfigurationsResponse) GetListNetworkConfigurationReferencesResponse() *components.ListNetworkConfigurationReferencesResponse {
	if l == nil {
		return nil
	}
	return l.ListNetworkConfigurationReferencesResponse
}
