// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Kong/sdk-konnect-go/models/components"
	"net/http"
)

type UpsertSniRequest struct {
	// ID of the SNI to lookup
	SNIID string `pathParam:"style=simple,explode=false,name=SNIId"`
	// The UUID of your control plane. This variable is available in the Konnect manager.
	ControlPlaneID string `pathParam:"style=simple,explode=false,name=controlPlaneId"`
	// Description of the SNI
	Sni components.Sni `request:"mediaType=application/json"`
}

func (u *UpsertSniRequest) GetSNIID() string {
	if u == nil {
		return ""
	}
	return u.SNIID
}

func (u *UpsertSniRequest) GetControlPlaneID() string {
	if u == nil {
		return ""
	}
	return u.ControlPlaneID
}

func (u *UpsertSniRequest) GetSni() components.Sni {
	if u == nil {
		return components.Sni{}
	}
	return u.Sni
}

type UpsertSniResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Successfully upserted SNI
	Sni *components.Sni
}

func (u *UpsertSniResponse) GetContentType() string {
	if u == nil {
		return ""
	}
	return u.ContentType
}

func (u *UpsertSniResponse) GetStatusCode() int {
	if u == nil {
		return 0
	}
	return u.StatusCode
}

func (u *UpsertSniResponse) GetRawResponse() *http.Response {
	if u == nil {
		return nil
	}
	return u.RawResponse
}

func (u *UpsertSniResponse) GetSni() *components.Sni {
	if u == nil {
		return nil
	}
	return u.Sni
}
