// Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.

package operations

import (
	"github.com/Kong/sdk-konnect-go/models/components"
	"net/http"
)

type GetEventSubscriptionRequest struct {
	// Formatted string ID of the notification event.
	EventID string `pathParam:"style=simple,explode=false,name=eventId"`
	// Subscription ID of the user configuration.
	SubscriptionID string `pathParam:"style=simple,explode=false,name=subscriptionId"`
}

func (g *GetEventSubscriptionRequest) GetEventID() string {
	if g == nil {
		return ""
	}
	return g.EventID
}

func (g *GetEventSubscriptionRequest) GetSubscriptionID() string {
	if g == nil {
		return ""
	}
	return g.SubscriptionID
}

type GetEventSubscriptionResponse struct {
	// HTTP response content type for this operation
	ContentType string
	// HTTP response status code for this operation
	StatusCode int
	// Raw HTTP response; suitable for custom response parsing
	RawResponse *http.Response
	// Response containing specific subscription details associated with an event.
	EventSubscriptionResponse *components.EventSubscriptionResponse
}

func (g *GetEventSubscriptionResponse) GetContentType() string {
	if g == nil {
		return ""
	}
	return g.ContentType
}

func (g *GetEventSubscriptionResponse) GetStatusCode() int {
	if g == nil {
		return 0
	}
	return g.StatusCode
}

func (g *GetEventSubscriptionResponse) GetRawResponse() *http.Response {
	if g == nil {
		return nil
	}
	return g.RawResponse
}

func (g *GetEventSubscriptionResponse) GetEventSubscriptionResponse() *components.EventSubscriptionResponse {
	if g == nil {
		return nil
	}
	return g.EventSubscriptionResponse
}
