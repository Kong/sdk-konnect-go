lockVersion: 2.0.0
id: b81e5def-5b1e-4753-ae7c-0efccc2e6f61
management:
  docChecksum: 3ac482e4057a4eb58de5aecc8fea25ea
  docVersion: 0.0.1
  speakeasyVersion: 1.548.4
  generationVersion: 2.605.6
  releaseVersion: 0.2.30
  configChecksum: eec63cc79f566a4b6be3eebe28f175ab
features:
  go:
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.12
    core: 3.7.5
    deepObjectParams: 0.1.1
    defaultEnabledRetries: 0.2.0
    envVarSecurityUsage: 0.3.2
    flattening: 2.81.1
    globalSecurity: 2.82.11
    globalSecurityCallbacks: 0.1.0
    globalServerURLs: 2.82.3
    groups: 2.81.2
    inputOutputModels: 2.83.0
    intellisenseMarkdownSupport: 0.1.0
    methodServerURLs: 2.82.1
    nameOverrides: 2.81.2
    nullables: 0.1.1
    responseFormat: 0.1.2
    retries: 2.83.2
    sdkHooks: 0.1.0
    unions: 2.85.10
generatedFiles:
  - .gitattributes
  - /models/components/acl.go
  - /models/components/aclwithoutparents.go
  - /models/components/addsystemaccounttoteam.go
  - /models/components/addusertoteam.go
  - /models/components/apiaccess.go
  - /models/components/assignedrole.go
  - /models/components/assignedrolecollection.go
  - /models/components/assignrole.go
  - /models/components/authenticationsettings.go
  - /models/components/availabilitydocument.go
  - /models/components/awstransitgateway.go
  - /models/components/awstransitgatewayattachmentconfig.go
  - /models/components/awstransitgatewayresponse.go
  - /models/components/awsvpcpeeringgateway.go
  - /models/components/awsvpcpeeringgatewayattachmentconfig.go
  - /models/components/awsvpcpeeringgatewayresponse.go
  - /models/components/azuretransitgateway.go
  - /models/components/azuretransitgatewayresponse.go
  - /models/components/azurevnetpeeringattachmentconfig.go
  - /models/components/basicauth.go
  - /models/components/basicauthwithoutparents.go
  - /models/components/bulkpayload.go
  - /models/components/cacertificate.go
  - /models/components/certificate.go
  - /models/components/cloudgatewaysstringfieldequalsfilteroverride.go
  - /models/components/cloudgatewaysstringfieldfilteroverride.go
  - /models/components/configstore.go
  - /models/components/configstoresecret.go
  - /models/components/configurationdataplanegroup.go
  - /models/components/configurationdataplanegroupautoscale.go
  - /models/components/configurationdataplanegroupautoscaleautopilot.go
  - /models/components/configurationdataplanegroupautoscalestatic.go
  - /models/components/configurationdataplanegroupconfig.go
  - /models/components/configurationdataplanegroupenvironmentfield.go
  - /models/components/configurationfilterparameters.go
  - /models/components/configurationmanifest.go
  - /models/components/configurationsfilterparameters.go
  - /models/components/configureoidcidentityproviderconfig.go
  - /models/components/consumer.go
  - /models/components/consumergroup.go
  - /models/components/consumergroupinsidewrapper.go
  - /models/components/controlplane.go
  - /models/components/controlplanefilterparameters.go
  - /models/components/controlplanegeo.go
  - /models/components/controlplanegeofieldequalsfilter.go
  - /models/components/controlplanegeofieldfilter.go
  - /models/components/controlplanegeofieldnotequalsfilter.go
  - /models/components/controlplanegeofieldorequalityfilter.go
  - /models/components/createconfigstore.go
  - /models/components/createconfigstoresecret.go
  - /models/components/createconfigurationdataplanegroup.go
  - /models/components/createconfigurationrequest.go
  - /models/components/createcontrolplanerequest.go
  - /models/components/createcustomdomainrequest.go
  - /models/components/createidentityprovider.go
  - /models/components/createnetworkrequest.go
  - /models/components/createpluginschemas.go
  - /models/components/createsystemaccount.go
  - /models/components/createsystemaccountaccesstoken.go
  - /models/components/createteam.go
  - /models/components/createtransitgatewayrequest.go
  - /models/components/cursormeta.go
  - /models/components/cursormetapage.go
  - /models/components/cursormetawithsizeandtotal.go
  - /models/components/cursorpaginatedmetawithsizeandtotal.go
  - /models/components/customdomain.go
  - /models/components/customdomainonlinepropertystatus.go
  - /models/components/customdomainonlinestatus.go
  - /models/components/customdomainsfilterparameters.go
  - /models/components/customdomainstate.go
  - /models/components/customdomainstatefieldequalsfilter.go
  - /models/components/customdomainstatefieldfilter.go
  - /models/components/customdomainstatefieldnotequalsfilter.go
  - /models/components/customdomainstatefieldorequalityfilter.go
  - /models/components/customplugin.go
  - /models/components/dataplaneclientcertificate.go
  - /models/components/dataplaneclientcertificaterequest.go
  - /models/components/dataplaneclientcertificateresponse.go
  - /models/components/defaultresourceconfiguration.go
  - /models/components/defaultresourcequota.go
  - /models/components/defaultsubscription.go
  - /models/components/degraphqlroute.go
  - /models/components/degraphqlroutewithoutparents.go
  - /models/components/entitytypes.go
  - /models/components/eventsubscription.go
  - /models/components/eventsubscriptionlistresponse.go
  - /models/components/eventsubscriptionresponse.go
  - /models/components/getexpectedconfighashresponse.go
  - /models/components/getgroupstatus.go
  - /models/components/getimpersonationsettingsresponse.go
  - /models/components/getnode.go
  - /models/components/groupconflict.go
  - /models/components/groupconflictresource.go
  - /models/components/groupmembership.go
  - /models/components/groupmemberstatus.go
  - /models/components/groupstatus.go
  - /models/components/hmacauth.go
  - /models/components/hmacauthwithoutparents.go
  - /models/components/identityprovider.go
  - /models/components/identityprovidertype.go
  - /models/components/idfieldfilter.go
  - /models/components/idp.go
  - /models/components/instancetype.go
  - /models/components/instancetypename.go
  - /models/components/invalidparameterchoiceitem.go
  - /models/components/invalidparameterdependentitem.go
  - /models/components/invalidparametermaximumlength.go
  - /models/components/invalidparameterminimumlength.go
  - /models/components/invalidparameters.go
  - /models/components/invalidparameterstandard.go
  - /models/components/invalidrules.go
  - /models/components/inviteuser.go
  - /models/components/jwt.go
  - /models/components/jwtwithoutparents.go
  - /models/components/key.go
  - /models/components/keyauth.go
  - /models/components/keyauthwithoutparents.go
  - /models/components/keyset.go
  - /models/components/keywithoutparents.go
  - /models/components/listconfigstoresecretsresponse.go
  - /models/components/listconfigstoresresponse.go
  - /models/components/listconfigurationsresponse.go
  - /models/components/listcontrolplanesresponse.go
  - /models/components/listcustomdomainsresponse.go
  - /models/components/listdataplanecertificatesresponse.go
  - /models/components/listdefaultresourceconfigurationsresponse.go
  - /models/components/listdefaultresourcequotasresponse.go
  - /models/components/listgroupmemberships.go
  - /models/components/listnetworkconfigurationreferencesresponse.go
  - /models/components/listnetworksresponse.go
  - /models/components/listnodes.go
  - /models/components/listnodeseol.go
  - /models/components/listpluginschemas.go
  - /models/components/listprovideraccountsresponse.go
  - /models/components/listresourceconfigurationsresponse.go
  - /models/components/listresourcequotasresponse.go
  - /models/components/listtransitgatewaysresponse.go
  - /models/components/meorganization.go
  - /models/components/mtlsauth.go
  - /models/components/mtlsauthwithoutparents.go
  - /models/components/network.go
  - /models/components/networkconfigurationreference.go
  - /models/components/networkcreatestate.go
  - /models/components/networkprovidermetadata.go
  - /models/components/networksfilterparameters.go
  - /models/components/networkstate.go
  - /models/components/networkstatefieldequalsfilter.go
  - /models/components/networkstatefieldfilter.go
  - /models/components/networkstatefieldnotequalsfilter.go
  - /models/components/networkstatefieldorequalityfilter.go
  - /models/components/networkstatemetadata.go
  - /models/components/notification.go
  - /models/components/notificationchannel.go
  - /models/components/notificationchanneltype.go
  - /models/components/notificationfilterparameters.go
  - /models/components/notificationlistresponse.go
  - /models/components/notificationnamespace.go
  - /models/components/notificationregion.go
  - /models/components/notificationstatus.go
  - /models/components/notificationupdatepayload.go
  - /models/components/oidcidentityproviderclaimmappings.go
  - /models/components/oidcidentityproviderconfig.go
  - /models/components/pagemeta.go
  - /models/components/paginatedmeta.go
  - /models/components/partial.go
  - /models/components/partiallink.go
  - /models/components/patchnetworkrequest.go
  - /models/components/patchteamgroupmappings.go
  - /models/components/plugin.go
  - /models/components/pluginschemas.go
  - /models/components/pluginwithoutparents.go
  - /models/components/provider.go
  - /models/components/provideraccount.go
  - /models/components/provideraccountsfilterparameters.go
  - /models/components/providername.go
  - /models/components/providerregion.go
  - /models/components/proxyurl.go
  - /models/components/resourceconfiguration.go
  - /models/components/resourceconfigurationqualifier.go
  - /models/components/resourcequota.go
  - /models/components/resourcequotaqualifier.go
  - /models/components/roles.go
  - /models/components/route.go
  - /models/components/routeexpression.go
  - /models/components/routejson.go
  - /models/components/routewithoutparents.go
  - /models/components/samlidentityproviderconfig.go
  - /models/components/samlidentityproviderconfiginput.go
  - /models/components/security.go
  - /models/components/serviceoutput.go
  - /models/components/sni.go
  - /models/components/sniwithoutparents.go
  - /models/components/stringfieldcontainsfilter.go
  - /models/components/stringfieldfilter.go
  - /models/components/stringfieldneqfilter.go
  - /models/components/stringfieldocontainsfilter.go
  - /models/components/stringfieldoeqfilter.go
  - /models/components/systemaccount.go
  - /models/components/systemaccountaccesstoken.go
  - /models/components/systemaccountaccesstokencollection.go
  - /models/components/systemaccountaccesstokencreated.go
  - /models/components/systemaccountcollection.go
  - /models/components/target.go
  - /models/components/targetwithoutparents.go
  - /models/components/team.go
  - /models/components/teamcollection.go
  - /models/components/teamgroupmapping.go
  - /models/components/teamgroupmappingcollection.go
  - /models/components/teammapping.go
  - /models/components/teammappingcollection.go
  - /models/components/teammappingresponse.go
  - /models/components/transitgatewaydnsconfig.go
  - /models/components/transitgatewayresponse.go
  - /models/components/transitgatewaysfilterparameters.go
  - /models/components/transitgatewaystate.go
  - /models/components/transitgatewaystatefieldequalsfilter.go
  - /models/components/transitgatewaystatefieldfilter.go
  - /models/components/transitgatewaystatefieldnotequalsfilter.go
  - /models/components/transitgatewaystatefieldorequalityfilter.go
  - /models/components/updateauthenticationsettings.go
  - /models/components/updateconfigstore.go
  - /models/components/updateconfigstoresecret.go
  - /models/components/updatecontrolplanerequest.go
  - /models/components/updateidentityprovider.go
  - /models/components/updateidpconfiguration.go
  - /models/components/updateimpersonationsettingsrequest.go
  - /models/components/updateimpersonationsettingsresponse.go
  - /models/components/updatesystemaccount.go
  - /models/components/updatesystemaccountaccesstoken.go
  - /models/components/updateteam.go
  - /models/components/updateteammappings.go
  - /models/components/updateuser.go
  - /models/components/upstream.go
  - /models/components/user.go
  - /models/components/usercollection.go
  - /models/components/userconfiguration.go
  - /models/components/userconfigurationlistresponse.go
  - /models/components/vault.go
  - /models/operations/addconsumertogroup.go
  - /models/operations/addconsumertospecificconsumergroup.go
  - /models/operations/addusertoteam.go
  - /models/operations/authenticatesso.go
  - /models/operations/bulknotifications.go
  - /models/operations/createaclwithconsumer.go
  - /models/operations/createbasicauthwithconsumer.go
  - /models/operations/createcacertificate.go
  - /models/operations/createcertificate.go
  - /models/operations/createconfigstore.go
  - /models/operations/createconfigstoresecret.go
  - /models/operations/createconfiguration.go
  - /models/operations/createconsumer.go
  - /models/operations/createconsumergroup.go
  - /models/operations/createcontrolplane.go
  - /models/operations/createcustomdomains.go
  - /models/operations/createcustomplugin.go
  - /models/operations/createdataplanecertificate.go
  - /models/operations/createdegraphqlroutewithservice.go
  - /models/operations/createeventsubscription.go
  - /models/operations/createhmacauthwithconsumer.go
  - /models/operations/createidentityprovider.go
  - /models/operations/createjwtwithconsumer.go
  - /models/operations/createkey.go
  - /models/operations/createkeyauthwithconsumer.go
  - /models/operations/createkeyset.go
  - /models/operations/createkeywithkeyset.go
  - /models/operations/createmtlsauthwithconsumer.go
  - /models/operations/createnetwork.go
  - /models/operations/createpartial.go
  - /models/operations/createplugin.go
  - /models/operations/createpluginschemas.go
  - /models/operations/createpluginwithconsumer.go
  - /models/operations/createpluginwithconsumergroup.go
  - /models/operations/createpluginwithroute.go
  - /models/operations/createpluginwithservice.go
  - /models/operations/createroute.go
  - /models/operations/createroutewithservice.go
  - /models/operations/createservice.go
  - /models/operations/createsni.go
  - /models/operations/createsniwithcertificate.go
  - /models/operations/createtargetwithupstream.go
  - /models/operations/createteam.go
  - /models/operations/createtransitgateway.go
  - /models/operations/createupstream.go
  - /models/operations/createvault.go
  - /models/operations/deleteaclwithconsumer.go
  - /models/operations/deletebasicauthwithconsumer.go
  - /models/operations/deletecacertificate.go
  - /models/operations/deletecertificate.go
  - /models/operations/deleteconfigstore.go
  - /models/operations/deleteconfigstoresecret.go
  - /models/operations/deleteconsumer.go
  - /models/operations/deleteconsumergroup.go
  - /models/operations/deletecontrolplane.go
  - /models/operations/deletecustomdomain.go
  - /models/operations/deletecustomplugin.go
  - /models/operations/deletedataplanecertificate.go
  - /models/operations/deletedegraphqlroutewithservice.go
  - /models/operations/deleteeventsubscription.go
  - /models/operations/deletehmacauthwithconsumer.go
  - /models/operations/deleteidentityprovider.go
  - /models/operations/deletejwtwithconsumer.go
  - /models/operations/deletekey.go
  - /models/operations/deletekeyauthwithconsumer.go
  - /models/operations/deletekeyset.go
  - /models/operations/deletekeywithkeyset.go
  - /models/operations/deletemtlsauthwithconsumer.go
  - /models/operations/deletenetwork.go
  - /models/operations/deletenodesnodeid.go
  - /models/operations/deletenotification.go
  - /models/operations/deletepartial.go
  - /models/operations/deleteplugin.go
  - /models/operations/deletepluginschemas.go
  - /models/operations/deletepluginwithconsumer.go
  - /models/operations/deletepluginwithconsumergroup.go
  - /models/operations/deletepluginwithroute.go
  - /models/operations/deletepluginwithservice.go
  - /models/operations/deleteroute.go
  - /models/operations/deleteroutewithservice.go
  - /models/operations/deleteservice.go
  - /models/operations/deletesni.go
  - /models/operations/deletesniwithcertificate.go
  - /models/operations/deletesystemaccountsaccountidassignedrolesroleid.go
  - /models/operations/deletesystemaccountsid.go
  - /models/operations/deletesystemaccountsidaccesstokensid.go
  - /models/operations/deletetargetwithupstream.go
  - /models/operations/deleteteam.go
  - /models/operations/deleteteamsteamidsystemaccountsaccountid.go
  - /models/operations/deletetransitgateway.go
  - /models/operations/deleteupstream.go
  - /models/operations/deleteuser.go
  - /models/operations/deletevault.go
  - /models/operations/fetchpluginschema.go
  - /models/operations/getacl.go
  - /models/operations/getaclwithconsumer.go
  - /models/operations/getauthenticationsettings.go
  - /models/operations/getavailabilityjson.go
  - /models/operations/getbasicauth.go
  - /models/operations/getbasicauthwithconsumer.go
  - /models/operations/getcacertificate.go
  - /models/operations/getcertificate.go
  - /models/operations/getconfigstore.go
  - /models/operations/getconfigstoresecret.go
  - /models/operations/getconfiguration.go
  - /models/operations/getconsumer.go
  - /models/operations/getconsumergroup.go
  - /models/operations/getcontrolplane.go
  - /models/operations/getcontrolplanesidgroupmemberships.go
  - /models/operations/getcontrolplanesidgroupmemberstatus.go
  - /models/operations/getcontrolplanesidgroupstatus.go
  - /models/operations/getcustomdomain.go
  - /models/operations/getcustomdomainonlinestatus.go
  - /models/operations/getcustomplugin.go
  - /models/operations/getdataplanecertificate.go
  - /models/operations/getdegraphqlroute.go
  - /models/operations/getdegraphqlroutewithservice.go
  - /models/operations/geteventsubscription.go
  - /models/operations/getexpectedconfighash.go
  - /models/operations/gethmacauth.go
  - /models/operations/gethmacauthwithconsumer.go
  - /models/operations/getidentityprovider.go
  - /models/operations/getidentityproviders.go
  - /models/operations/getidpconfiguration.go
  - /models/operations/getidpteammappings.go
  - /models/operations/getimpersonationsettings.go
  - /models/operations/getjwt.go
  - /models/operations/getjwtwithconsumer.go
  - /models/operations/getkey.go
  - /models/operations/getkeyauth.go
  - /models/operations/getkeyauthwithconsumer.go
  - /models/operations/getkeyset.go
  - /models/operations/getkeywithkeyset.go
  - /models/operations/getmtlsauth.go
  - /models/operations/getmtlsauthwithconsumer.go
  - /models/operations/getnetwork.go
  - /models/operations/getnodeseol.go
  - /models/operations/getnodesnodeid.go
  - /models/operations/getnotificationdetails.go
  - /models/operations/getorganizationsme.go
  - /models/operations/getpartial.go
  - /models/operations/getplugin.go
  - /models/operations/getpluginschema.go
  - /models/operations/getpluginwithconsumer.go
  - /models/operations/getpluginwithconsumergroup.go
  - /models/operations/getpluginwithroute.go
  - /models/operations/getpluginwithservice.go
  - /models/operations/getpredefinedroles.go
  - /models/operations/getprovideraccount.go
  - /models/operations/getresourceconfiguration.go
  - /models/operations/getresourcequota.go
  - /models/operations/getroute.go
  - /models/operations/getroutewithservice.go
  - /models/operations/getservice.go
  - /models/operations/getsni.go
  - /models/operations/getsniwithcertificate.go
  - /models/operations/getsystemaccountidaccesstokens.go
  - /models/operations/getsystemaccounts.go
  - /models/operations/getsystemaccountsaccountidassignedroles.go
  - /models/operations/getsystemaccountsaccountidteams.go
  - /models/operations/getsystemaccountsid.go
  - /models/operations/getsystemaccountsidaccesstokensid.go
  - /models/operations/gettargetwithupstream.go
  - /models/operations/getteam.go
  - /models/operations/getteamgroupmappings.go
  - /models/operations/getteamsteamidsystemaccounts.go
  - /models/operations/gettransitgateway.go
  - /models/operations/getupstream.go
  - /models/operations/getuser.go
  - /models/operations/getusersme.go
  - /models/operations/getvault.go
  - /models/operations/inviteuser.go
  - /models/operations/listacl.go
  - /models/operations/listaclwithconsumer.go
  - /models/operations/listbasicauth.go
  - /models/operations/listbasicauthwithconsumer.go
  - /models/operations/listcacertificate.go
  - /models/operations/listcertificate.go
  - /models/operations/listconfigstores.go
  - /models/operations/listconfigstoresecrets.go
  - /models/operations/listconfigurations.go
  - /models/operations/listconsumer.go
  - /models/operations/listconsumergroup.go
  - /models/operations/listconsumergroupsforconsumer.go
  - /models/operations/listconsumersforconsumergroup.go
  - /models/operations/listcontrolplanes.go
  - /models/operations/listcustomdomains.go
  - /models/operations/listcustomplugin.go
  - /models/operations/listdataplanenodes.go
  - /models/operations/listdefaultresourceconfigurations.go
  - /models/operations/listdefaultresourcequotas.go
  - /models/operations/listdegraphqlroute.go
  - /models/operations/listdegraphqlroutewithservice.go
  - /models/operations/listdpclientcertificates.go
  - /models/operations/listeventsubscriptions.go
  - /models/operations/listhmacauth.go
  - /models/operations/listhmacauthwithconsumer.go
  - /models/operations/listjwt.go
  - /models/operations/listjwtwithconsumer.go
  - /models/operations/listkey.go
  - /models/operations/listkeyauth.go
  - /models/operations/listkeyauthwithconsumer.go
  - /models/operations/listkeyset.go
  - /models/operations/listkeywithkeyset.go
  - /models/operations/listmtlsauth.go
  - /models/operations/listmtlsauthwithconsumer.go
  - /models/operations/listnetworkconfigurations.go
  - /models/operations/listnetworks.go
  - /models/operations/listnotifications.go
  - /models/operations/listpartial.go
  - /models/operations/listpartiallink.go
  - /models/operations/listplugin.go
  - /models/operations/listpluginschemas.go
  - /models/operations/listpluginwithconsumer.go
  - /models/operations/listpluginwithconsumergroup.go
  - /models/operations/listpluginwithroute.go
  - /models/operations/listpluginwithservice.go
  - /models/operations/listprovideraccounts.go
  - /models/operations/listresourceconfigurations.go
  - /models/operations/listresourcequotas.go
  - /models/operations/listroute.go
  - /models/operations/listroutewithservice.go
  - /models/operations/listservice.go
  - /models/operations/listsni.go
  - /models/operations/listsniwithcertificate.go
  - /models/operations/listtargetwithupstream.go
  - /models/operations/listteamroles.go
  - /models/operations/listteams.go
  - /models/operations/listteamusers.go
  - /models/operations/listtransitgateways.go
  - /models/operations/listupstream.go
  - /models/operations/listuserconfigurations.go
  - /models/operations/listuserroles.go
  - /models/operations/listusers.go
  - /models/operations/listuserteams.go
  - /models/operations/listvault.go
  - /models/operations/patchsystemaccountsid.go
  - /models/operations/patchsystemaccountsidaccesstokensid.go
  - /models/operations/patchteamgroupmappings.go
  - /models/operations/postcontrolplanesidgroupmembershipsadd.go
  - /models/operations/postcontrolplanesidgroupmembershipsremove.go
  - /models/operations/postsystemaccounts.go
  - /models/operations/postsystemaccountsaccountidassignedroles.go
  - /models/operations/postsystemaccountsidaccesstokens.go
  - /models/operations/postteamsteamidsystemaccounts.go
  - /models/operations/putcontrolplanesidgroupmemberships.go
  - /models/operations/removeallconsumersfromconsumergroup.go
  - /models/operations/removeconsumerfromallconsumergroups.go
  - /models/operations/removeconsumerfromconsumergroup.go
  - /models/operations/removeconsumerfromgroup.go
  - /models/operations/removeuserfromteam.go
  - /models/operations/teamsassignrole.go
  - /models/operations/teamsremoverole.go
  - /models/operations/updateauthenticationsettings.go
  - /models/operations/updateconfigstore.go
  - /models/operations/updateconfigstoresecret.go
  - /models/operations/updatecontrolplane.go
  - /models/operations/updateeventsubscription.go
  - /models/operations/updateidentityprovider.go
  - /models/operations/updateidpconfiguration.go
  - /models/operations/updateidpteammappings.go
  - /models/operations/updateimpersonationsettings.go
  - /models/operations/updatenetwork.go
  - /models/operations/updatenotification.go
  - /models/operations/updatepluginschemas.go
  - /models/operations/updateteam.go
  - /models/operations/updateuser.go
  - /models/operations/upsertaclwithconsumer.go
  - /models/operations/upsertbasicauthwithconsumer.go
  - /models/operations/upsertcacertificate.go
  - /models/operations/upsertcertificate.go
  - /models/operations/upsertconsumer.go
  - /models/operations/upsertconsumergroup.go
  - /models/operations/upsertcustomplugin.go
  - /models/operations/upsertdegraphqlroutewithservice.go
  - /models/operations/upserthmacauthwithconsumer.go
  - /models/operations/upsertjwtwithconsumer.go
  - /models/operations/upsertkey.go
  - /models/operations/upsertkeyauthwithconsumer.go
  - /models/operations/upsertkeyset.go
  - /models/operations/upsertkeywithkeyset.go
  - /models/operations/upsertmtlsauthwithconsumer.go
  - /models/operations/upsertpartial.go
  - /models/operations/upsertplugin.go
  - /models/operations/upsertpluginwithconsumer.go
  - /models/operations/upsertpluginwithconsumergroup.go
  - /models/operations/upsertpluginwithroute.go
  - /models/operations/upsertpluginwithservice.go
  - /models/operations/upsertroute.go
  - /models/operations/upsertroutewithservice.go
  - /models/operations/upsertservice.go
  - /models/operations/upsertsni.go
  - /models/operations/upsertsniwithcertificate.go
  - /models/operations/upserttargetwithupstream.go
  - /models/operations/upsertupstream.go
  - /models/operations/upsertvault.go
  - /models/operations/usersassignrole.go
  - /models/operations/usersremoverole.go
  - /models/sdkerrors/badrequesterror.go
  - /models/sdkerrors/baseerror.go
  - /models/sdkerrors/conflicterror.go
  - /models/sdkerrors/forbiddenerror.go
  - /models/sdkerrors/gatewayunauthorizederror.go
  - /models/sdkerrors/internalservererror.go
  - /models/sdkerrors/notfounderror.go
  - /models/sdkerrors/preconditionfailed.go
  - /models/sdkerrors/ratelimited.go
  - /models/sdkerrors/serviceunavailable.go
  - /models/sdkerrors/unauthorizederror.go
  - /models/sdkerrors/unsupportedmediatypeerror.go
  - USAGE.md
  - acls.go
  - apikeys.go
  - authentication.go
  - authsettings.go
  - basicauthcredentials.go
  - cacertificates.go
  - certificates.go
  - cloudgateways.go
  - configstores.go
  - configstoresecrets.go
  - consumergroups.go
  - consumers.go
  - controlplanegroups.go
  - controlplanes.go
  - customplugins.go
  - custompluginschemas.go
  - degraphqlroutes.go
  - docs/models/components/acl.md
  - docs/models/components/aclconsumer.md
  - docs/models/components/aclwithoutparents.md
  - docs/models/components/aclwithoutparentsconsumer.md
  - docs/models/components/active.md
  - docs/models/components/addsystemaccounttoteam.md
  - docs/models/components/addusertoteam.md
  - docs/models/components/admin.md
  - docs/models/components/after.md
  - docs/models/components/algorithm.md
  - docs/models/components/apiaccess.md
  - docs/models/components/apiproducts.md
  - docs/models/components/applicationregistration.md
  - docs/models/components/assignedrole.md
  - docs/models/components/assignedrolecollection.md
  - docs/models/components/assignrole.md
  - docs/models/components/assignroleentityregion.md
  - docs/models/components/auditlogs.md
  - docs/models/components/authenticationsettings.md
  - docs/models/components/authtype.md
  - docs/models/components/availabilitydocument.md
  - docs/models/components/awstransitgateway.md
  - docs/models/components/awstransitgatewayattachmentconfig.md
  - docs/models/components/awstransitgatewayattachmenttype.md
  - docs/models/components/awstransitgatewayresponse.md
  - docs/models/components/awsvpcpeeringattachmentconfig.md
  - docs/models/components/awsvpcpeeringgateway.md
  - docs/models/components/awsvpcpeeringgatewayattachmentconfig.md
  - docs/models/components/awsvpcpeeringgatewayresponse.md
  - docs/models/components/awsvpcpeeringgatewayresponsetransitgatewaystatemetadata.md
  - docs/models/components/azuretransitgateway.md
  - docs/models/components/azuretransitgatewayresponse.md
  - docs/models/components/azuretransitgatewayresponsetransitgatewaystatemetadata.md
  - docs/models/components/azurevnetpeeringattachmentconfig.md
  - docs/models/components/azurevnetpeeringattachmenttype.md
  - docs/models/components/basicauth.md
  - docs/models/components/basicauthconsumer.md
  - docs/models/components/basicauthwithoutparents.md
  - docs/models/components/basicauthwithoutparentsconsumer.md
  - docs/models/components/before.md
  - docs/models/components/bulkpayload.md
  - docs/models/components/cacertificate.md
  - docs/models/components/certificate.md
  - docs/models/components/certificateadmin.md
  - docs/models/components/claimmappings.md
  - docs/models/components/clientcertificate.md
  - docs/models/components/cloudgatewaysstringfieldequalsfilteroverride.md
  - docs/models/components/cloudgatewaysstringfieldfilteroverride.md
  - docs/models/components/clustertype.md
  - docs/models/components/compatibilitystatus.md
  - docs/models/components/config.md
  - docs/models/components/configstore.md
  - docs/models/components/configstoresecret.md
  - docs/models/components/configurationdataplanegroup.md
  - docs/models/components/configurationdataplanegroupautoscale.md
  - docs/models/components/configurationdataplanegroupautoscaleautopilot.md
  - docs/models/components/configurationdataplanegroupautoscaleautopilotkind.md
  - docs/models/components/configurationdataplanegroupautoscalestatic.md
  - docs/models/components/configurationdataplanegroupconfig.md
  - docs/models/components/configurationdataplanegroupenvironmentfield.md
  - docs/models/components/configurationfilterparameters.md
  - docs/models/components/configurationmanifest.md
  - docs/models/components/configurationsfilterparameters.md
  - docs/models/components/configureoidcidentityproviderconfig.md
  - docs/models/components/connector.md
  - docs/models/components/consumer.md
  - docs/models/components/consumeradmin.md
  - docs/models/components/consumergroup.md
  - docs/models/components/consumergroupinsidewrapper.md
  - docs/models/components/controlplane.md
  - docs/models/components/controlplaneauthtype.md
  - docs/models/components/controlplaneclustertype.md
  - docs/models/components/controlplanefilterparameters.md
  - docs/models/components/controlplanegeo.md
  - docs/models/components/controlplanegeofieldequalscomparison.md
  - docs/models/components/controlplanegeofieldequalsfilter.md
  - docs/models/components/controlplanegeofieldfilter.md
  - docs/models/components/controlplanegeofieldnotequalsfilter.md
  - docs/models/components/controlplanegeofieldorequalityfilter.md
  - docs/models/components/controlplanes.md
  - docs/models/components/createconfigstore.md
  - docs/models/components/createconfigstoresecret.md
  - docs/models/components/createconfigurationdataplanegroup.md
  - docs/models/components/createconfigurationrequest.md
  - docs/models/components/createcontrolplanerequest.md
  - docs/models/components/createcontrolplanerequestclustertype.md
  - docs/models/components/createcustomdomainrequest.md
  - docs/models/components/createidentityprovider.md
  - docs/models/components/createidentityproviderconfig.md
  - docs/models/components/createnetworkrequest.md
  - docs/models/components/createpluginschemas.md
  - docs/models/components/createsystemaccount.md
  - docs/models/components/createsystemaccountaccesstoken.md
  - docs/models/components/createteam.md
  - docs/models/components/createtransitgatewayrequest.md
  - docs/models/components/creator.md
  - docs/models/components/cursormeta.md
  - docs/models/components/cursormetapage.md
  - docs/models/components/cursormetawithsizeandtotal.md
  - docs/models/components/cursorpaginatedmetawithsizeandtotal.md
  - docs/models/components/customdomain.md
  - docs/models/components/customdomainonlinepropertystatus.md
  - docs/models/components/customdomainonlinestatus.md
  - docs/models/components/customdomainsfilterparameters.md
  - docs/models/components/customdomainstate.md
  - docs/models/components/customdomainstatefieldequalscomparison.md
  - docs/models/components/customdomainstatefieldequalsfilter.md
  - docs/models/components/customdomainstatefieldfilter.md
  - docs/models/components/customdomainstatefieldnotequalsfilter.md
  - docs/models/components/customdomainstatefieldorequalityfilter.md
  - docs/models/components/customdomainstatemetadata.md
  - docs/models/components/customplugin.md
  - docs/models/components/data.md
  - docs/models/components/dataplaneclientcertificate.md
  - docs/models/components/dataplaneclientcertificaterequest.md
  - docs/models/components/dataplaneclientcertificateresponse.md
  - docs/models/components/defaultresourceconfiguration.md
  - docs/models/components/defaultresourcequota.md
  - docs/models/components/defaultsubscription.md
  - docs/models/components/degraphqlroute.md
  - docs/models/components/degraphqlrouteservice.md
  - docs/models/components/degraphqlroutewithoutparents.md
  - docs/models/components/degraphqlroutewithoutparentsservice.md
  - docs/models/components/deployer.md
  - docs/models/components/description.md
  - docs/models/components/destinations.md
  - docs/models/components/details.md
  - docs/models/components/entityregion.md
  - docs/models/components/entitytypename.md
  - docs/models/components/entitytypes.md
  - docs/models/components/eventsubscription.md
  - docs/models/components/eventsubscriptionlistresponse.md
  - docs/models/components/eventsubscriptionresponse.md
  - docs/models/components/gatewayserviceadmin.md
  - docs/models/components/getexpectedconfighashresponse.md
  - docs/models/components/getgroupstatus.md
  - docs/models/components/getimpersonationsettingsresponse.md
  - docs/models/components/getnode.md
  - docs/models/components/getnodecompatibilitystatus.md
  - docs/models/components/getnodeitem.md
  - docs/models/components/groupconflict.md
  - docs/models/components/groupconflictresource.md
  - docs/models/components/groupmembership.md
  - docs/models/components/groupmemberstatus.md
  - docs/models/components/groupstatus.md
  - docs/models/components/groupstatusstate.md
  - docs/models/components/hashfallback.md
  - docs/models/components/hashon.md
  - docs/models/components/healthchecks.md
  - docs/models/components/healthy.md
  - docs/models/components/hmacauth.md
  - docs/models/components/hmacauthconsumer.md
  - docs/models/components/hmacauthwithoutparents.md
  - docs/models/components/hmacauthwithoutparentsconsumer.md
  - docs/models/components/httpsredirectstatuscode.md
  - docs/models/components/id.md
  - docs/models/components/identity.md
  - docs/models/components/identityprovider.md
  - docs/models/components/identityproviderconfig.md
  - docs/models/components/identityprovidertype.md
  - docs/models/components/idfieldfilter.md
  - docs/models/components/idp.md
  - docs/models/components/instancetype.md
  - docs/models/components/instancetypename.md
  - docs/models/components/invalidparameterchoiceitem.md
  - docs/models/components/invalidparameterchoiceitemrule.md
  - docs/models/components/invalidparameterdependentitem.md
  - docs/models/components/invalidparameterdependentitemrule.md
  - docs/models/components/invalidparametermaximumlength.md
  - docs/models/components/invalidparametermaximumlengthrule.md
  - docs/models/components/invalidparameterminimumlength.md
  - docs/models/components/invalidparameters.md
  - docs/models/components/invalidparameterstandard.md
  - docs/models/components/invalidrules.md
  - docs/models/components/inviteuser.md
  - docs/models/components/item.md
  - docs/models/components/items.md
  - docs/models/components/jwt.md
  - docs/models/components/jwtconsumer.md
  - docs/models/components/jwtwithoutparents.md
  - docs/models/components/jwtwithoutparentsalgorithm.md
  - docs/models/components/jwtwithoutparentsconsumer.md
  - docs/models/components/key.md
  - docs/models/components/keyauth.md
  - docs/models/components/keyauthconsumer.md
  - docs/models/components/keyauthwithoutparents.md
  - docs/models/components/keyauthwithoutparentsconsumer.md
  - docs/models/components/keyset.md
  - docs/models/components/keywithoutparents.md
  - docs/models/components/keywithoutparentspem.md
  - docs/models/components/keywithoutparentsset.md
  - docs/models/components/kind.md
  - docs/models/components/listconfigstoresecretsresponse.md
  - docs/models/components/listconfigstoresresponse.md
  - docs/models/components/listconfigurationsresponse.md
  - docs/models/components/listcontrolplanesresponse.md
  - docs/models/components/listcustomdomainsresponse.md
  - docs/models/components/listdataplanecertificatesresponse.md
  - docs/models/components/listdataplanecertificatesresponsepage.md
  - docs/models/components/listdefaultresourceconfigurationsresponse.md
  - docs/models/components/listdefaultresourcequotasresponse.md
  - docs/models/components/listgroupmemberships.md
  - docs/models/components/listnetworkconfigurationreferencesresponse.md
  - docs/models/components/listnetworksresponse.md
  - docs/models/components/listnodes.md
  - docs/models/components/listnodeseol.md
  - docs/models/components/listnodeseolitems.md
  - docs/models/components/listnodeseolpage.md
  - docs/models/components/listnodesitems.md
  - docs/models/components/listnodespage.md
  - docs/models/components/listpluginschemas.md
  - docs/models/components/listprovideraccountsresponse.md
  - docs/models/components/listresourceconfigurationsresponse.md
  - docs/models/components/listresourcequotasresponse.md
  - docs/models/components/listtransitgatewaysresponse.md
  - docs/models/components/maintainer.md
  - docs/models/components/mappings.md
  - docs/models/components/members.md
  - docs/models/components/meorganization.md
  - docs/models/components/meorganizationstate.md
  - docs/models/components/meshcontrolplanes.md
  - docs/models/components/meta.md
  - docs/models/components/mtlsauth.md
  - docs/models/components/mtlsauthcacertificate.md
  - docs/models/components/mtlsauthconsumer.md
  - docs/models/components/mtlsauthwithoutparents.md
  - docs/models/components/mtlsauthwithoutparentscacertificate.md
  - docs/models/components/mtlsauthwithoutparentsconsumer.md
  - docs/models/components/name.md
  - docs/models/components/network.md
  - docs/models/components/networkconfigurationreference.md
  - docs/models/components/networkcreatestate.md
  - docs/models/components/networkprovidermetadata.md
  - docs/models/components/networksfilterparameters.md
  - docs/models/components/networkstate.md
  - docs/models/components/networkstatefieldequalscomparison.md
  - docs/models/components/networkstatefieldequalsfilter.md
  - docs/models/components/networkstatefieldfilter.md
  - docs/models/components/networkstatefieldnotequalsfilter.md
  - docs/models/components/networkstatefieldorequalityfilter.md
  - docs/models/components/networkstatemetadata.md
  - docs/models/components/notification.md
  - docs/models/components/notificationchannel.md
  - docs/models/components/notificationchanneltype.md
  - docs/models/components/notificationfilterparameters.md
  - docs/models/components/notificationlistresponse.md
  - docs/models/components/notificationnamespace.md
  - docs/models/components/notificationregion.md
  - docs/models/components/notificationstatus.md
  - docs/models/components/notificationupdatepayload.md
  - docs/models/components/oidcidentityproviderclaimmappings.md
  - docs/models/components/oidcidentityproviderconfig.md
  - docs/models/components/ordering.md
  - docs/models/components/page.md
  - docs/models/components/pagemeta.md
  - docs/models/components/paginatedmeta.md
  - docs/models/components/partial.md
  - docs/models/components/partiallink.md
  - docs/models/components/partials.md
  - docs/models/components/passive.md
  - docs/models/components/patchnetworkrequest.md
  - docs/models/components/patchteamgroupmappings.md
  - docs/models/components/pathhandling.md
  - docs/models/components/pem.md
  - docs/models/components/plugin.md
  - docs/models/components/pluginadmin.md
  - docs/models/components/pluginconsumer.md
  - docs/models/components/pluginconsumergroup.md
  - docs/models/components/pluginroute.md
  - docs/models/components/pluginsadmin.md
  - docs/models/components/pluginschemas.md
  - docs/models/components/pluginservice.md
  - docs/models/components/pluginwithoutparents.md
  - docs/models/components/pluginwithoutparentsafter.md
  - docs/models/components/pluginwithoutparentsbefore.md
  - docs/models/components/pluginwithoutparentsconsumer.md
  - docs/models/components/pluginwithoutparentsconsumergroup.md
  - docs/models/components/pluginwithoutparentsordering.md
  - docs/models/components/pluginwithoutparentspartials.md
  - docs/models/components/pluginwithoutparentsprotocols.md
  - docs/models/components/pluginwithoutparentsroute.md
  - docs/models/components/pluginwithoutparentsservice.md
  - docs/models/components/protocol.md
  - docs/models/components/protocols.md
  - docs/models/components/provider.md
  - docs/models/components/provideraccount.md
  - docs/models/components/provideraccountsfilterparameters.md
  - docs/models/components/providername.md
  - docs/models/components/providerregion.md
  - docs/models/components/proxyurl.md
  - docs/models/components/publisher.md
  - docs/models/components/resourceconfiguration.md
  - docs/models/components/resourceconfigurationqualifier.md
  - docs/models/components/resourcequota.md
  - docs/models/components/resourcequotaqualifier.md
  - docs/models/components/rolename.md
  - docs/models/components/roles.md
  - docs/models/components/rolesadmin.md
  - docs/models/components/rolesapiproductsdescription.md
  - docs/models/components/rolesapiproductsname.md
  - docs/models/components/rolesapiproductsrolesapplicationregistrationname.md
  - docs/models/components/rolesapiproductsrolescreatordescription.md
  - docs/models/components/rolesapiproductsrolescreatorname.md
  - docs/models/components/rolesapiproductsrolesdeployerdescription.md
  - docs/models/components/rolesapiproductsrolesdeployername.md
  - docs/models/components/rolesapiproductsrolesdescription.md
  - docs/models/components/rolesapiproductsrolesmaintainerdescription.md
  - docs/models/components/rolesapiproductsrolesmaintainername.md
  - docs/models/components/rolesapiproductsrolesname.md
  - docs/models/components/rolesapiproductsrolespluginsadmindescription.md
  - docs/models/components/rolesapiproductsrolespluginsadminname.md
  - docs/models/components/rolesapiproductsrolespublisherdescription.md
  - docs/models/components/rolesapiproductsrolespublishername.md
  - docs/models/components/rolesapiproductsrolesviewerdescription.md
  - docs/models/components/rolesapiproductsrolesviewername.md
  - docs/models/components/rolesauditlogsadmin.md
  - docs/models/components/rolesauditlogsdescription.md
  - docs/models/components/rolesauditlogsname.md
  - docs/models/components/rolesauditlogsroles.md
  - docs/models/components/rolesauditlogsrolesname.md
  - docs/models/components/rolescontrolplanesdescription.md
  - docs/models/components/rolescontrolplanesname.md
  - docs/models/components/rolescontrolplanesroles.md
  - docs/models/components/rolescontrolplanesrolesconsumeradminname.md
  - docs/models/components/rolescontrolplanesrolescreatorname.md
  - docs/models/components/rolescontrolplanesrolesdeployerdescription.md
  - docs/models/components/rolescontrolplanesrolesdeployername.md
  - docs/models/components/rolescontrolplanesrolesdescription.md
  - docs/models/components/rolescontrolplanesrolesgatewayserviceadmindescription.md
  - docs/models/components/rolescontrolplanesrolesgatewayserviceadminname.md
  - docs/models/components/rolescontrolplanesrolesname.md
  - docs/models/components/rolescontrolplanesrolespluginadmindescription.md
  - docs/models/components/rolescontrolplanesrolespluginadminname.md
  - docs/models/components/rolescontrolplanesrolesrouteadmindescription.md
  - docs/models/components/rolescontrolplanesrolesrouteadminname.md
  - docs/models/components/rolescontrolplanesrolessniadmindescription.md
  - docs/models/components/rolescontrolplanesrolessniadminname.md
  - docs/models/components/rolescontrolplanesrolesupstreamadmindescription.md
  - docs/models/components/rolescontrolplanesrolesupstreamadminname.md
  - docs/models/components/rolescontrolplanesrolesviewerdescription.md
  - docs/models/components/rolescontrolplanesrolesviewername.md
  - docs/models/components/rolescreator.md
  - docs/models/components/rolesdeployer.md
  - docs/models/components/rolesdescription.md
  - docs/models/components/rolesidentityadmin.md
  - docs/models/components/rolesidentitydescription.md
  - docs/models/components/rolesidentityname.md
  - docs/models/components/rolesidentityroles.md
  - docs/models/components/rolesidentityrolesname.md
  - docs/models/components/rolesmeshcontrolplanesadmin.md
  - docs/models/components/rolesmeshcontrolplanescreator.md
  - docs/models/components/rolesmeshcontrolplanesdescription.md
  - docs/models/components/rolesmeshcontrolplanesname.md
  - docs/models/components/rolesmeshcontrolplanesroles.md
  - docs/models/components/rolesmeshcontrolplanesrolesconnectorname.md
  - docs/models/components/rolesmeshcontrolplanesrolescreatordescription.md
  - docs/models/components/rolesmeshcontrolplanesrolescreatorname.md
  - docs/models/components/rolesmeshcontrolplanesrolesdescription.md
  - docs/models/components/rolesmeshcontrolplanesrolesname.md
  - docs/models/components/rolesmeshcontrolplanesrolesviewerdescription.md
  - docs/models/components/rolesmeshcontrolplanesrolesviewername.md
  - docs/models/components/rolesmeshcontrolplanesviewer.md
  - docs/models/components/rolesname.md
  - docs/models/components/rolesroles.md
  - docs/models/components/rolesviewer.md
  - docs/models/components/route.md
  - docs/models/components/routeadmin.md
  - docs/models/components/routeexpression.md
  - docs/models/components/routeexpressionhttpsredirectstatuscode.md
  - docs/models/components/routeexpressionpathhandling.md
  - docs/models/components/routeexpressionprotocols.md
  - docs/models/components/routeexpressionservice.md
  - docs/models/components/routejson.md
  - docs/models/components/routejsonprotocols.md
  - docs/models/components/routejsonservice.md
  - docs/models/components/routewithoutparents.md
  - docs/models/components/rule.md
  - docs/models/components/samlidentityproviderconfig.md
  - docs/models/components/samlidentityproviderconfiginput.md
  - docs/models/components/security.md
  - docs/models/components/service.md
  - docs/models/components/serviceoutput.md
  - docs/models/components/set.md
  - docs/models/components/sni.md
  - docs/models/components/sniadmin.md
  - docs/models/components/snicertificate.md
  - docs/models/components/sniwithoutparents.md
  - docs/models/components/sniwithoutparentscertificate.md
  - docs/models/components/sources.md
  - docs/models/components/state.md
  - docs/models/components/statemetadata.md
  - docs/models/components/stringfieldcontainsfilter.md
  - docs/models/components/stringfieldequalscomparison.md
  - docs/models/components/stringfieldfilter.md
  - docs/models/components/stringfieldneqfilter.md
  - docs/models/components/stringfieldocontainsfilter.md
  - docs/models/components/stringfieldoeqfilter.md
  - docs/models/components/systemaccount.md
  - docs/models/components/systemaccountaccesstoken.md
  - docs/models/components/systemaccountaccesstokencollection.md
  - docs/models/components/systemaccountaccesstokencreated.md
  - docs/models/components/systemaccountcollection.md
  - docs/models/components/target.md
  - docs/models/components/targetupstream.md
  - docs/models/components/targetwithoutparents.md
  - docs/models/components/targetwithoutparentsupstream.md
  - docs/models/components/team.md
  - docs/models/components/teamcollection.md
  - docs/models/components/teamgroupmapping.md
  - docs/models/components/teamgroupmappingcollection.md
  - docs/models/components/teammapping.md
  - docs/models/components/teammappingcollection.md
  - docs/models/components/teammappingresponse.md
  - docs/models/components/teammappingresponsedata.md
  - docs/models/components/teammappingresponsepage.md
  - docs/models/components/transitgatewaydnsconfig.md
  - docs/models/components/transitgatewayresponse.md
  - docs/models/components/transitgatewaysfilterparameters.md
  - docs/models/components/transitgatewaystate.md
  - docs/models/components/transitgatewaystatefieldequalscomparison.md
  - docs/models/components/transitgatewaystatefieldequalsfilter.md
  - docs/models/components/transitgatewaystatefieldfilter.md
  - docs/models/components/transitgatewaystatefieldnotequalsfilter.md
  - docs/models/components/transitgatewaystatefieldorequalityfilter.md
  - docs/models/components/transitgatewaystatemetadata.md
  - docs/models/components/type.md
  - docs/models/components/unhealthy.md
  - docs/models/components/updateauthenticationsettings.md
  - docs/models/components/updateconfigstore.md
  - docs/models/components/updateconfigstoresecret.md
  - docs/models/components/updatecontrolplanerequest.md
  - docs/models/components/updatecontrolplanerequestauthtype.md
  - docs/models/components/updateidentityprovider.md
  - docs/models/components/updateidentityproviderconfig.md
  - docs/models/components/updateidpconfiguration.md
  - docs/models/components/updateidpconfigurationclaimmappings.md
  - docs/models/components/updateimpersonationsettingsrequest.md
  - docs/models/components/updateimpersonationsettingsresponse.md
  - docs/models/components/updatesystemaccount.md
  - docs/models/components/updatesystemaccountaccesstoken.md
  - docs/models/components/updateteam.md
  - docs/models/components/updateteammappings.md
  - docs/models/components/updateuser.md
  - docs/models/components/upstream.md
  - docs/models/components/upstreamadmin.md
  - docs/models/components/upstreamalgorithm.md
  - docs/models/components/upstreamclientcertificate.md
  - docs/models/components/upstreamhealthy.md
  - docs/models/components/upstreamtype.md
  - docs/models/components/upstreamunhealthy.md
  - docs/models/components/user.md
  - docs/models/components/usercollection.md
  - docs/models/components/userconfiguration.md
  - docs/models/components/userconfigurationlistresponse.md
  - docs/models/components/vault.md
  - docs/models/components/viewer.md
  - docs/models/operations/addconsumertogrouprequest.md
  - docs/models/operations/addconsumertogrouprequestbody.md
  - docs/models/operations/addconsumertogroupresponse.md
  - docs/models/operations/addconsumertogroupresponsebody.md
  - docs/models/operations/addconsumertospecificconsumergrouprequest.md
  - docs/models/operations/addconsumertospecificconsumergrouprequestbody.md
  - docs/models/operations/addconsumertospecificconsumergroupresponse.md
  - docs/models/operations/addconsumertospecificconsumergroupresponsebody.md
  - docs/models/operations/addusertoteamrequest.md
  - docs/models/operations/addusertoteamresponse.md
  - docs/models/operations/authenticatessorequest.md
  - docs/models/operations/authenticatessoresponse.md
  - docs/models/operations/bulknotificationsresponse.md
  - docs/models/operations/createaclwithconsumerrequest.md
  - docs/models/operations/createaclwithconsumerresponse.md
  - docs/models/operations/createbasicauthwithconsumerrequest.md
  - docs/models/operations/createbasicauthwithconsumerresponse.md
  - docs/models/operations/createcacertificaterequest.md
  - docs/models/operations/createcacertificateresponse.md
  - docs/models/operations/createcertificaterequest.md
  - docs/models/operations/createcertificateresponse.md
  - docs/models/operations/createconfigstorerequest.md
  - docs/models/operations/createconfigstoreresponse.md
  - docs/models/operations/createconfigstoresecretrequest.md
  - docs/models/operations/createconfigstoresecretresponse.md
  - docs/models/operations/createconfigurationresponse.md
  - docs/models/operations/createconsumergrouprequest.md
  - docs/models/operations/createconsumergroupresponse.md
  - docs/models/operations/createconsumerrequest.md
  - docs/models/operations/createconsumerresponse.md
  - docs/models/operations/createcontrolplaneresponse.md
  - docs/models/operations/createcustomdomainsresponse.md
  - docs/models/operations/createcustompluginrequest.md
  - docs/models/operations/createcustompluginresponse.md
  - docs/models/operations/createdataplanecertificaterequest.md
  - docs/models/operations/createdataplanecertificateresponse.md
  - docs/models/operations/createdegraphqlroutewithservicerequest.md
  - docs/models/operations/createdegraphqlroutewithserviceresponse.md
  - docs/models/operations/createeventsubscriptionrequest.md
  - docs/models/operations/createeventsubscriptionresponse.md
  - docs/models/operations/createhmacauthwithconsumerrequest.md
  - docs/models/operations/createhmacauthwithconsumerresponse.md
  - docs/models/operations/createidentityproviderresponse.md
  - docs/models/operations/createjwtwithconsumerrequest.md
  - docs/models/operations/createjwtwithconsumerresponse.md
  - docs/models/operations/createkeyauthwithconsumerrequest.md
  - docs/models/operations/createkeyauthwithconsumerresponse.md
  - docs/models/operations/createkeyrequest.md
  - docs/models/operations/createkeyresponse.md
  - docs/models/operations/createkeysetrequest.md
  - docs/models/operations/createkeysetresponse.md
  - docs/models/operations/createkeywithkeysetrequest.md
  - docs/models/operations/createkeywithkeysetresponse.md
  - docs/models/operations/createmtlsauthwithconsumerrequest.md
  - docs/models/operations/createmtlsauthwithconsumerresponse.md
  - docs/models/operations/createnetworkresponse.md
  - docs/models/operations/createpartialrequest.md
  - docs/models/operations/createpartialresponse.md
  - docs/models/operations/createpluginrequest.md
  - docs/models/operations/createpluginresponse.md
  - docs/models/operations/createpluginschemasrequest.md
  - docs/models/operations/createpluginschemasresponse.md
  - docs/models/operations/createpluginwithconsumergrouprequest.md
  - docs/models/operations/createpluginwithconsumergroupresponse.md
  - docs/models/operations/createpluginwithconsumerrequest.md
  - docs/models/operations/createpluginwithconsumerresponse.md
  - docs/models/operations/createpluginwithrouterequest.md
  - docs/models/operations/createpluginwithrouteresponse.md
  - docs/models/operations/createpluginwithservicerequest.md
  - docs/models/operations/createpluginwithserviceresponse.md
  - docs/models/operations/createrouterequest.md
  - docs/models/operations/createrouteresponse.md
  - docs/models/operations/createroutewithservicerequest.md
  - docs/models/operations/createroutewithserviceresponse.md
  - docs/models/operations/createservicerequest.md
  - docs/models/operations/createserviceresponse.md
  - docs/models/operations/createsnirequest.md
  - docs/models/operations/createsniresponse.md
  - docs/models/operations/createsniwithcertificaterequest.md
  - docs/models/operations/createsniwithcertificateresponse.md
  - docs/models/operations/createtargetwithupstreamrequest.md
  - docs/models/operations/createtargetwithupstreamresponse.md
  - docs/models/operations/createteamresponse.md
  - docs/models/operations/createtransitgatewayrequest.md
  - docs/models/operations/createtransitgatewayresponse.md
  - docs/models/operations/createupstreamrequest.md
  - docs/models/operations/createupstreamresponse.md
  - docs/models/operations/createvaultrequest.md
  - docs/models/operations/createvaultresponse.md
  - docs/models/operations/deleteaclwithconsumerrequest.md
  - docs/models/operations/deleteaclwithconsumerresponse.md
  - docs/models/operations/deletebasicauthwithconsumerrequest.md
  - docs/models/operations/deletebasicauthwithconsumerresponse.md
  - docs/models/operations/deletecacertificaterequest.md
  - docs/models/operations/deletecacertificateresponse.md
  - docs/models/operations/deletecertificaterequest.md
  - docs/models/operations/deletecertificateresponse.md
  - docs/models/operations/deleteconfigstorerequest.md
  - docs/models/operations/deleteconfigstoreresponse.md
  - docs/models/operations/deleteconfigstoresecretrequest.md
  - docs/models/operations/deleteconfigstoresecretresponse.md
  - docs/models/operations/deleteconsumergrouprequest.md
  - docs/models/operations/deleteconsumergroupresponse.md
  - docs/models/operations/deleteconsumerrequest.md
  - docs/models/operations/deleteconsumerresponse.md
  - docs/models/operations/deletecontrolplanerequest.md
  - docs/models/operations/deletecontrolplaneresponse.md
  - docs/models/operations/deletecustomdomainrequest.md
  - docs/models/operations/deletecustomdomainresponse.md
  - docs/models/operations/deletecustompluginrequest.md
  - docs/models/operations/deletecustompluginresponse.md
  - docs/models/operations/deletedataplanecertificaterequest.md
  - docs/models/operations/deletedataplanecertificateresponse.md
  - docs/models/operations/deletedegraphqlroutewithservicerequest.md
  - docs/models/operations/deletedegraphqlroutewithserviceresponse.md
  - docs/models/operations/deleteeventsubscriptionrequest.md
  - docs/models/operations/deleteeventsubscriptionresponse.md
  - docs/models/operations/deletehmacauthwithconsumerrequest.md
  - docs/models/operations/deletehmacauthwithconsumerresponse.md
  - docs/models/operations/deleteidentityproviderrequest.md
  - docs/models/operations/deleteidentityproviderresponse.md
  - docs/models/operations/deletejwtwithconsumerrequest.md
  - docs/models/operations/deletejwtwithconsumerresponse.md
  - docs/models/operations/deletekeyauthwithconsumerrequest.md
  - docs/models/operations/deletekeyauthwithconsumerresponse.md
  - docs/models/operations/deletekeyrequest.md
  - docs/models/operations/deletekeyresponse.md
  - docs/models/operations/deletekeysetrequest.md
  - docs/models/operations/deletekeysetresponse.md
  - docs/models/operations/deletekeywithkeysetrequest.md
  - docs/models/operations/deletekeywithkeysetresponse.md
  - docs/models/operations/deletemtlsauthwithconsumerrequest.md
  - docs/models/operations/deletemtlsauthwithconsumerresponse.md
  - docs/models/operations/deletenetworkrequest.md
  - docs/models/operations/deletenetworkresponse.md
  - docs/models/operations/deletenodesnodeidrequest.md
  - docs/models/operations/deletenodesnodeidresponse.md
  - docs/models/operations/deletenotificationrequest.md
  - docs/models/operations/deletenotificationresponse.md
  - docs/models/operations/deletepartialrequest.md
  - docs/models/operations/deletepartialresponse.md
  - docs/models/operations/deletepluginrequest.md
  - docs/models/operations/deletepluginresponse.md
  - docs/models/operations/deletepluginschemasrequest.md
  - docs/models/operations/deletepluginschemasresponse.md
  - docs/models/operations/deletepluginwithconsumergrouprequest.md
  - docs/models/operations/deletepluginwithconsumergroupresponse.md
  - docs/models/operations/deletepluginwithconsumerrequest.md
  - docs/models/operations/deletepluginwithconsumerresponse.md
  - docs/models/operations/deletepluginwithrouterequest.md
  - docs/models/operations/deletepluginwithrouteresponse.md
  - docs/models/operations/deletepluginwithservicerequest.md
  - docs/models/operations/deletepluginwithserviceresponse.md
  - docs/models/operations/deleterouterequest.md
  - docs/models/operations/deleterouteresponse.md
  - docs/models/operations/deleteroutewithservicerequest.md
  - docs/models/operations/deleteroutewithserviceresponse.md
  - docs/models/operations/deleteservicerequest.md
  - docs/models/operations/deleteserviceresponse.md
  - docs/models/operations/deletesnirequest.md
  - docs/models/operations/deletesniresponse.md
  - docs/models/operations/deletesniwithcertificaterequest.md
  - docs/models/operations/deletesniwithcertificateresponse.md
  - docs/models/operations/deletesystemaccountsaccountidassignedrolesroleidrequest.md
  - docs/models/operations/deletesystemaccountsaccountidassignedrolesroleidresponse.md
  - docs/models/operations/deletesystemaccountsidaccesstokensidrequest.md
  - docs/models/operations/deletesystemaccountsidaccesstokensidresponse.md
  - docs/models/operations/deletesystemaccountsidrequest.md
  - docs/models/operations/deletesystemaccountsidresponse.md
  - docs/models/operations/deletetargetwithupstreamrequest.md
  - docs/models/operations/deletetargetwithupstreamresponse.md
  - docs/models/operations/deleteteamrequest.md
  - docs/models/operations/deleteteamresponse.md
  - docs/models/operations/deleteteamsteamidsystemaccountsaccountidrequest.md
  - docs/models/operations/deleteteamsteamidsystemaccountsaccountidresponse.md
  - docs/models/operations/deletetransitgatewayrequest.md
  - docs/models/operations/deletetransitgatewayresponse.md
  - docs/models/operations/deleteupstreamrequest.md
  - docs/models/operations/deleteupstreamresponse.md
  - docs/models/operations/deleteuserrequest.md
  - docs/models/operations/deleteuserresponse.md
  - docs/models/operations/deletevaultrequest.md
  - docs/models/operations/deletevaultresponse.md
  - docs/models/operations/fetchpluginschemarequest.md
  - docs/models/operations/fetchpluginschemaresponse.md
  - docs/models/operations/fetchpluginschemaresponsebody.md
  - docs/models/operations/filter.md
  - docs/models/operations/force.md
  - docs/models/operations/getaclrequest.md
  - docs/models/operations/getaclresponse.md
  - docs/models/operations/getaclwithconsumerrequest.md
  - docs/models/operations/getaclwithconsumerresponse.md
  - docs/models/operations/getauthenticationsettingsresponse.md
  - docs/models/operations/getavailabilityjsonresponse.md
  - docs/models/operations/getbasicauthrequest.md
  - docs/models/operations/getbasicauthresponse.md
  - docs/models/operations/getbasicauthwithconsumerrequest.md
  - docs/models/operations/getbasicauthwithconsumerresponse.md
  - docs/models/operations/getcacertificaterequest.md
  - docs/models/operations/getcacertificateresponse.md
  - docs/models/operations/getcertificaterequest.md
  - docs/models/operations/getcertificateresponse.md
  - docs/models/operations/getconfigstorerequest.md
  - docs/models/operations/getconfigstoreresponse.md
  - docs/models/operations/getconfigstoresecretrequest.md
  - docs/models/operations/getconfigstoresecretresponse.md
  - docs/models/operations/getconfigurationrequest.md
  - docs/models/operations/getconfigurationresponse.md
  - docs/models/operations/getconsumergrouprequest.md
  - docs/models/operations/getconsumergroupresponse.md
  - docs/models/operations/getconsumerrequest.md
  - docs/models/operations/getconsumerresponse.md
  - docs/models/operations/getcontrolplanerequest.md
  - docs/models/operations/getcontrolplaneresponse.md
  - docs/models/operations/getcontrolplanesidgroupmembershipsrequest.md
  - docs/models/operations/getcontrolplanesidgroupmembershipsresponse.md
  - docs/models/operations/getcontrolplanesidgroupmemberstatusrequest.md
  - docs/models/operations/getcontrolplanesidgroupmemberstatusresponse.md
  - docs/models/operations/getcontrolplanesidgroupstatusrequest.md
  - docs/models/operations/getcontrolplanesidgroupstatusresponse.md
  - docs/models/operations/getcustomdomainonlinestatusrequest.md
  - docs/models/operations/getcustomdomainonlinestatusresponse.md
  - docs/models/operations/getcustomdomainrequest.md
  - docs/models/operations/getcustomdomainresponse.md
  - docs/models/operations/getcustompluginrequest.md
  - docs/models/operations/getcustompluginresponse.md
  - docs/models/operations/getdataplanecertificaterequest.md
  - docs/models/operations/getdataplanecertificateresponse.md
  - docs/models/operations/getdegraphqlrouterequest.md
  - docs/models/operations/getdegraphqlrouteresponse.md
  - docs/models/operations/getdegraphqlroutewithservicerequest.md
  - docs/models/operations/getdegraphqlroutewithserviceresponse.md
  - docs/models/operations/geteventsubscriptionrequest.md
  - docs/models/operations/geteventsubscriptionresponse.md
  - docs/models/operations/getexpectedconfighashrequest.md
  - docs/models/operations/getexpectedconfighashresponse.md
  - docs/models/operations/gethmacauthrequest.md
  - docs/models/operations/gethmacauthresponse.md
  - docs/models/operations/gethmacauthwithconsumerrequest.md
  - docs/models/operations/gethmacauthwithconsumerresponse.md
  - docs/models/operations/getidentityproviderrequest.md
  - docs/models/operations/getidentityproviderresponse.md
  - docs/models/operations/getidentityprovidersrequest.md
  - docs/models/operations/getidentityprovidersresponse.md
  - docs/models/operations/getidpconfigurationresponse.md
  - docs/models/operations/getidpteammappingsrequest.md
  - docs/models/operations/getidpteammappingsresponse.md
  - docs/models/operations/getimpersonationsettingsresponse.md
  - docs/models/operations/getjwtrequest.md
  - docs/models/operations/getjwtresponse.md
  - docs/models/operations/getjwtwithconsumerrequest.md
  - docs/models/operations/getjwtwithconsumerresponse.md
  - docs/models/operations/getkeyauthrequest.md
  - docs/models/operations/getkeyauthresponse.md
  - docs/models/operations/getkeyauthwithconsumerrequest.md
  - docs/models/operations/getkeyauthwithconsumerresponse.md
  - docs/models/operations/getkeyrequest.md
  - docs/models/operations/getkeyresponse.md
  - docs/models/operations/getkeysetrequest.md
  - docs/models/operations/getkeysetresponse.md
  - docs/models/operations/getkeywithkeysetrequest.md
  - docs/models/operations/getkeywithkeysetresponse.md
  - docs/models/operations/getmtlsauthrequest.md
  - docs/models/operations/getmtlsauthresponse.md
  - docs/models/operations/getmtlsauthwithconsumerrequest.md
  - docs/models/operations/getmtlsauthwithconsumerresponse.md
  - docs/models/operations/getnetworkrequest.md
  - docs/models/operations/getnetworkresponse.md
  - docs/models/operations/getnodeseolrequest.md
  - docs/models/operations/getnodeseolresponse.md
  - docs/models/operations/getnodesnodeidrequest.md
  - docs/models/operations/getnodesnodeidresponse.md
  - docs/models/operations/getnotificationdetailsrequest.md
  - docs/models/operations/getnotificationdetailsresponse.md
  - docs/models/operations/getorganizationsmeresponse.md
  - docs/models/operations/getpartialrequest.md
  - docs/models/operations/getpartialresponse.md
  - docs/models/operations/getpluginrequest.md
  - docs/models/operations/getpluginresponse.md
  - docs/models/operations/getpluginschemarequest.md
  - docs/models/operations/getpluginschemaresponse.md
  - docs/models/operations/getpluginwithconsumergrouprequest.md
  - docs/models/operations/getpluginwithconsumergroupresponse.md
  - docs/models/operations/getpluginwithconsumerrequest.md
  - docs/models/operations/getpluginwithconsumerresponse.md
  - docs/models/operations/getpluginwithrouterequest.md
  - docs/models/operations/getpluginwithrouteresponse.md
  - docs/models/operations/getpluginwithservicerequest.md
  - docs/models/operations/getpluginwithserviceresponse.md
  - docs/models/operations/getpredefinedrolesresponse.md
  - docs/models/operations/getprovideraccountrequest.md
  - docs/models/operations/getprovideraccountresponse.md
  - docs/models/operations/getresourceconfigurationrequest.md
  - docs/models/operations/getresourceconfigurationresponse.md
  - docs/models/operations/getresourcequotarequest.md
  - docs/models/operations/getresourcequotaresponse.md
  - docs/models/operations/getrouterequest.md
  - docs/models/operations/getrouteresponse.md
  - docs/models/operations/getroutewithservicerequest.md
  - docs/models/operations/getroutewithserviceresponse.md
  - docs/models/operations/getservicerequest.md
  - docs/models/operations/getserviceresponse.md
  - docs/models/operations/getsnirequest.md
  - docs/models/operations/getsniresponse.md
  - docs/models/operations/getsniwithcertificaterequest.md
  - docs/models/operations/getsniwithcertificateresponse.md
  - docs/models/operations/getsystemaccountidaccesstokensqueryparamfilter.md
  - docs/models/operations/getsystemaccountidaccesstokensrequest.md
  - docs/models/operations/getsystemaccountidaccesstokensresponse.md
  - docs/models/operations/getsystemaccountsaccountidassignedrolesqueryparamfilter.md
  - docs/models/operations/getsystemaccountsaccountidassignedrolesrequest.md
  - docs/models/operations/getsystemaccountsaccountidassignedrolesresponse.md
  - docs/models/operations/getsystemaccountsaccountidteamsqueryparamfilter.md
  - docs/models/operations/getsystemaccountsaccountidteamsrequest.md
  - docs/models/operations/getsystemaccountsaccountidteamsresponse.md
  - docs/models/operations/getsystemaccountsidaccesstokensidrequest.md
  - docs/models/operations/getsystemaccountsidaccesstokensidresponse.md
  - docs/models/operations/getsystemaccountsidrequest.md
  - docs/models/operations/getsystemaccountsidresponse.md
  - docs/models/operations/getsystemaccountsrequest.md
  - docs/models/operations/getsystemaccountsresponse.md
  - docs/models/operations/gettargetwithupstreamrequest.md
  - docs/models/operations/gettargetwithupstreamresponse.md
  - docs/models/operations/getteamgroupmappingsrequest.md
  - docs/models/operations/getteamgroupmappingsresponse.md
  - docs/models/operations/getteamrequest.md
  - docs/models/operations/getteamresponse.md
  - docs/models/operations/getteamsteamidsystemaccountsqueryparamfilter.md
  - docs/models/operations/getteamsteamidsystemaccountsrequest.md
  - docs/models/operations/getteamsteamidsystemaccountsresponse.md
  - docs/models/operations/gettransitgatewayrequest.md
  - docs/models/operations/gettransitgatewayresponse.md
  - docs/models/operations/getupstreamrequest.md
  - docs/models/operations/getupstreamresponse.md
  - docs/models/operations/getuserrequest.md
  - docs/models/operations/getuserresponse.md
  - docs/models/operations/getusersmeresponse.md
  - docs/models/operations/getvaultrequest.md
  - docs/models/operations/getvaultresponse.md
  - docs/models/operations/inviteuserresponse.md
  - docs/models/operations/listaclrequest.md
  - docs/models/operations/listaclresponse.md
  - docs/models/operations/listaclresponsebody.md
  - docs/models/operations/listaclwithconsumerrequest.md
  - docs/models/operations/listaclwithconsumerresponse.md
  - docs/models/operations/listaclwithconsumerresponsebody.md
  - docs/models/operations/listbasicauthrequest.md
  - docs/models/operations/listbasicauthresponse.md
  - docs/models/operations/listbasicauthresponsebody.md
  - docs/models/operations/listbasicauthwithconsumerrequest.md
  - docs/models/operations/listbasicauthwithconsumerresponse.md
  - docs/models/operations/listbasicauthwithconsumerresponsebody.md
  - docs/models/operations/listcacertificaterequest.md
  - docs/models/operations/listcacertificateresponse.md
  - docs/models/operations/listcacertificateresponsebody.md
  - docs/models/operations/listcertificaterequest.md
  - docs/models/operations/listcertificateresponse.md
  - docs/models/operations/listcertificateresponsebody.md
  - docs/models/operations/listconfigstoresecretsrequest.md
  - docs/models/operations/listconfigstoresecretsresponse.md
  - docs/models/operations/listconfigstoresrequest.md
  - docs/models/operations/listconfigstoresresponse.md
  - docs/models/operations/listconfigurationsrequest.md
  - docs/models/operations/listconfigurationsresponse.md
  - docs/models/operations/listconsumergrouprequest.md
  - docs/models/operations/listconsumergroupresponse.md
  - docs/models/operations/listconsumergroupresponsebody.md
  - docs/models/operations/listconsumergroupsforconsumerrequest.md
  - docs/models/operations/listconsumergroupsforconsumerresponse.md
  - docs/models/operations/listconsumergroupsforconsumerresponsebody.md
  - docs/models/operations/listconsumerrequest.md
  - docs/models/operations/listconsumerresponse.md
  - docs/models/operations/listconsumerresponsebody.md
  - docs/models/operations/listconsumersforconsumergrouprequest.md
  - docs/models/operations/listconsumersforconsumergroupresponse.md
  - docs/models/operations/listconsumersforconsumergroupresponsebody.md
  - docs/models/operations/listcontrolplanesrequest.md
  - docs/models/operations/listcontrolplanesresponse.md
  - docs/models/operations/listcustomdomainsrequest.md
  - docs/models/operations/listcustomdomainsresponse.md
  - docs/models/operations/listcustompluginrequest.md
  - docs/models/operations/listcustompluginresponse.md
  - docs/models/operations/listcustompluginresponsebody.md
  - docs/models/operations/listdataplanenodesrequest.md
  - docs/models/operations/listdataplanenodesresponse.md
  - docs/models/operations/listdefaultresourceconfigurationsrequest.md
  - docs/models/operations/listdefaultresourceconfigurationsresponse.md
  - docs/models/operations/listdefaultresourcequotasrequest.md
  - docs/models/operations/listdefaultresourcequotasresponse.md
  - docs/models/operations/listdegraphqlrouterequest.md
  - docs/models/operations/listdegraphqlrouteresponse.md
  - docs/models/operations/listdegraphqlrouteresponsebody.md
  - docs/models/operations/listdegraphqlroutewithservicerequest.md
  - docs/models/operations/listdegraphqlroutewithserviceresponse.md
  - docs/models/operations/listdegraphqlroutewithserviceresponsebody.md
  - docs/models/operations/listdpclientcertificatesrequest.md
  - docs/models/operations/listdpclientcertificatesresponse.md
  - docs/models/operations/listeventsubscriptionsrequest.md
  - docs/models/operations/listeventsubscriptionsresponse.md
  - docs/models/operations/listhmacauthrequest.md
  - docs/models/operations/listhmacauthresponse.md
  - docs/models/operations/listhmacauthresponsebody.md
  - docs/models/operations/listhmacauthwithconsumerrequest.md
  - docs/models/operations/listhmacauthwithconsumerresponse.md
  - docs/models/operations/listhmacauthwithconsumerresponsebody.md
  - docs/models/operations/listjwtrequest.md
  - docs/models/operations/listjwtresponse.md
  - docs/models/operations/listjwtresponsebody.md
  - docs/models/operations/listjwtwithconsumerrequest.md
  - docs/models/operations/listjwtwithconsumerresponse.md
  - docs/models/operations/listjwtwithconsumerresponsebody.md
  - docs/models/operations/listkeyauthrequest.md
  - docs/models/operations/listkeyauthresponse.md
  - docs/models/operations/listkeyauthresponsebody.md
  - docs/models/operations/listkeyauthwithconsumerrequest.md
  - docs/models/operations/listkeyauthwithconsumerresponse.md
  - docs/models/operations/listkeyauthwithconsumerresponsebody.md
  - docs/models/operations/listkeyrequest.md
  - docs/models/operations/listkeyresponse.md
  - docs/models/operations/listkeyresponsebody.md
  - docs/models/operations/listkeysetrequest.md
  - docs/models/operations/listkeysetresponse.md
  - docs/models/operations/listkeysetresponsebody.md
  - docs/models/operations/listkeywithkeysetrequest.md
  - docs/models/operations/listkeywithkeysetresponse.md
  - docs/models/operations/listkeywithkeysetresponsebody.md
  - docs/models/operations/listmtlsauthrequest.md
  - docs/models/operations/listmtlsauthresponse.md
  - docs/models/operations/listmtlsauthresponsebody.md
  - docs/models/operations/listmtlsauthwithconsumerrequest.md
  - docs/models/operations/listmtlsauthwithconsumerresponse.md
  - docs/models/operations/listmtlsauthwithconsumerresponsebody.md
  - docs/models/operations/listnetworkconfigurationsrequest.md
  - docs/models/operations/listnetworkconfigurationsresponse.md
  - docs/models/operations/listnetworksrequest.md
  - docs/models/operations/listnetworksresponse.md
  - docs/models/operations/listnotificationsrequest.md
  - docs/models/operations/listnotificationsresponse.md
  - docs/models/operations/listpartiallinkrequest.md
  - docs/models/operations/listpartiallinkresponse.md
  - docs/models/operations/listpartiallinkresponsebody.md
  - docs/models/operations/listpartialrequest.md
  - docs/models/operations/listpartialresponse.md
  - docs/models/operations/listpartialresponsebody.md
  - docs/models/operations/listpluginrequest.md
  - docs/models/operations/listpluginresponse.md
  - docs/models/operations/listpluginresponsebody.md
  - docs/models/operations/listpluginschemasrequest.md
  - docs/models/operations/listpluginschemasresponse.md
  - docs/models/operations/listpluginwithconsumergrouprequest.md
  - docs/models/operations/listpluginwithconsumergroupresponse.md
  - docs/models/operations/listpluginwithconsumergroupresponsebody.md
  - docs/models/operations/listpluginwithconsumerrequest.md
  - docs/models/operations/listpluginwithconsumerresponse.md
  - docs/models/operations/listpluginwithconsumerresponsebody.md
  - docs/models/operations/listpluginwithrouterequest.md
  - docs/models/operations/listpluginwithrouteresponse.md
  - docs/models/operations/listpluginwithrouteresponsebody.md
  - docs/models/operations/listpluginwithservicerequest.md
  - docs/models/operations/listpluginwithserviceresponse.md
  - docs/models/operations/listpluginwithserviceresponsebody.md
  - docs/models/operations/listprovideraccountsrequest.md
  - docs/models/operations/listprovideraccountsresponse.md
  - docs/models/operations/listresourceconfigurationsrequest.md
  - docs/models/operations/listresourceconfigurationsresponse.md
  - docs/models/operations/listresourcequotasrequest.md
  - docs/models/operations/listresourcequotasresponse.md
  - docs/models/operations/listrouterequest.md
  - docs/models/operations/listrouteresponse.md
  - docs/models/operations/listrouteresponsebody.md
  - docs/models/operations/listroutewithservicerequest.md
  - docs/models/operations/listroutewithserviceresponse.md
  - docs/models/operations/listroutewithserviceresponsebody.md
  - docs/models/operations/listservicerequest.md
  - docs/models/operations/listserviceresponse.md
  - docs/models/operations/listserviceresponsebody.md
  - docs/models/operations/listsnirequest.md
  - docs/models/operations/listsniresponse.md
  - docs/models/operations/listsniresponsebody.md
  - docs/models/operations/listsniwithcertificaterequest.md
  - docs/models/operations/listsniwithcertificateresponse.md
  - docs/models/operations/listsniwithcertificateresponsebody.md
  - docs/models/operations/listtargetwithupstreamrequest.md
  - docs/models/operations/listtargetwithupstreamresponse.md
  - docs/models/operations/listtargetwithupstreamresponsebody.md
  - docs/models/operations/listteamrolesqueryparamfilter.md
  - docs/models/operations/listteamrolesrequest.md
  - docs/models/operations/listteamrolesresponse.md
  - docs/models/operations/listteamsqueryparamfilter.md
  - docs/models/operations/listteamsrequest.md
  - docs/models/operations/listteamsresponse.md
  - docs/models/operations/listteamusersqueryparamfilter.md
  - docs/models/operations/listteamusersrequest.md
  - docs/models/operations/listteamusersresponse.md
  - docs/models/operations/listtransitgatewaysrequest.md
  - docs/models/operations/listtransitgatewaysresponse.md
  - docs/models/operations/listupstreamrequest.md
  - docs/models/operations/listupstreamresponse.md
  - docs/models/operations/listupstreamresponsebody.md
  - docs/models/operations/listuserconfigurationsrequest.md
  - docs/models/operations/listuserconfigurationsresponse.md
  - docs/models/operations/listuserrolesqueryparamfilter.md
  - docs/models/operations/listuserrolesrequest.md
  - docs/models/operations/listuserrolesresponse.md
  - docs/models/operations/listusersqueryparamfilter.md
  - docs/models/operations/listusersrequest.md
  - docs/models/operations/listusersresponse.md
  - docs/models/operations/listuserteamsqueryparamfilter.md
  - docs/models/operations/listuserteamsrequest.md
  - docs/models/operations/listuserteamsresponse.md
  - docs/models/operations/listvaultrequest.md
  - docs/models/operations/listvaultresponse.md
  - docs/models/operations/listvaultresponsebody.md
  - docs/models/operations/option.md
  - docs/models/operations/patchsystemaccountsidaccesstokensidrequest.md
  - docs/models/operations/patchsystemaccountsidaccesstokensidresponse.md
  - docs/models/operations/patchsystemaccountsidrequest.md
  - docs/models/operations/patchsystemaccountsidresponse.md
  - docs/models/operations/patchteamgroupmappingsresponse.md
  - docs/models/operations/postcontrolplanesidgroupmembershipsaddrequest.md
  - docs/models/operations/postcontrolplanesidgroupmembershipsaddresponse.md
  - docs/models/operations/postcontrolplanesidgroupmembershipsremoverequest.md
  - docs/models/operations/postcontrolplanesidgroupmembershipsremoveresponse.md
  - docs/models/operations/postsystemaccountsaccountidassignedrolesrequest.md
  - docs/models/operations/postsystemaccountsaccountidassignedrolesresponse.md
  - docs/models/operations/postsystemaccountsidaccesstokensrequest.md
  - docs/models/operations/postsystemaccountsidaccesstokensresponse.md
  - docs/models/operations/postsystemaccountsresponse.md
  - docs/models/operations/postteamsteamidsystemaccountsrequest.md
  - docs/models/operations/postteamsteamidsystemaccountsresponse.md
  - docs/models/operations/putcontrolplanesidgroupmembershipsrequest.md
  - docs/models/operations/putcontrolplanesidgroupmembershipsresponse.md
  - docs/models/operations/queryparamfilter.md
  - docs/models/operations/removeallconsumersfromconsumergrouprequest.md
  - docs/models/operations/removeallconsumersfromconsumergroupresponse.md
  - docs/models/operations/removeconsumerfromallconsumergroupsrequest.md
  - docs/models/operations/removeconsumerfromallconsumergroupsresponse.md
  - docs/models/operations/removeconsumerfromconsumergrouprequest.md
  - docs/models/operations/removeconsumerfromconsumergroupresponse.md
  - docs/models/operations/removeconsumerfromgrouprequest.md
  - docs/models/operations/removeconsumerfromgroupresponse.md
  - docs/models/operations/removeuserfromteamrequest.md
  - docs/models/operations/removeuserfromteamresponse.md
  - docs/models/operations/teamsassignrolerequest.md
  - docs/models/operations/teamsassignroleresponse.md
  - docs/models/operations/teamsremoverolerequest.md
  - docs/models/operations/teamsremoveroleresponse.md
  - docs/models/operations/updateauthenticationsettingsresponse.md
  - docs/models/operations/updateconfigstorerequest.md
  - docs/models/operations/updateconfigstoreresponse.md
  - docs/models/operations/updateconfigstoresecretrequest.md
  - docs/models/operations/updateconfigstoresecretresponse.md
  - docs/models/operations/updatecontrolplanerequest.md
  - docs/models/operations/updatecontrolplaneresponse.md
  - docs/models/operations/updateeventsubscriptionrequest.md
  - docs/models/operations/updateeventsubscriptionresponse.md
  - docs/models/operations/updateidentityproviderrequest.md
  - docs/models/operations/updateidentityproviderresponse.md
  - docs/models/operations/updateidpconfigurationresponse.md
  - docs/models/operations/updateidpteammappingsresponse.md
  - docs/models/operations/updateimpersonationsettingsresponse.md
  - docs/models/operations/updatenetworkrequest.md
  - docs/models/operations/updatenetworkresponse.md
  - docs/models/operations/updatenotificationrequest.md
  - docs/models/operations/updatenotificationresponse.md
  - docs/models/operations/updatepluginschemasrequest.md
  - docs/models/operations/updatepluginschemasresponse.md
  - docs/models/operations/updateteamrequest.md
  - docs/models/operations/updateteamresponse.md
  - docs/models/operations/updateuserrequest.md
  - docs/models/operations/updateuserresponse.md
  - docs/models/operations/upsertaclwithconsumerrequest.md
  - docs/models/operations/upsertaclwithconsumerresponse.md
  - docs/models/operations/upsertbasicauthwithconsumerrequest.md
  - docs/models/operations/upsertbasicauthwithconsumerresponse.md
  - docs/models/operations/upsertcacertificaterequest.md
  - docs/models/operations/upsertcacertificateresponse.md
  - docs/models/operations/upsertcertificaterequest.md
  - docs/models/operations/upsertcertificateresponse.md
  - docs/models/operations/upsertconsumergrouprequest.md
  - docs/models/operations/upsertconsumergroupresponse.md
  - docs/models/operations/upsertconsumerrequest.md
  - docs/models/operations/upsertconsumerresponse.md
  - docs/models/operations/upsertcustompluginrequest.md
  - docs/models/operations/upsertcustompluginresponse.md
  - docs/models/operations/upsertdegraphqlroutewithservicerequest.md
  - docs/models/operations/upsertdegraphqlroutewithserviceresponse.md
  - docs/models/operations/upserthmacauthwithconsumerrequest.md
  - docs/models/operations/upserthmacauthwithconsumerresponse.md
  - docs/models/operations/upsertjwtwithconsumerrequest.md
  - docs/models/operations/upsertjwtwithconsumerresponse.md
  - docs/models/operations/upsertkeyauthwithconsumerrequest.md
  - docs/models/operations/upsertkeyauthwithconsumerresponse.md
  - docs/models/operations/upsertkeyrequest.md
  - docs/models/operations/upsertkeyresponse.md
  - docs/models/operations/upsertkeysetrequest.md
  - docs/models/operations/upsertkeysetresponse.md
  - docs/models/operations/upsertkeywithkeysetrequest.md
  - docs/models/operations/upsertkeywithkeysetresponse.md
  - docs/models/operations/upsertmtlsauthwithconsumerrequest.md
  - docs/models/operations/upsertmtlsauthwithconsumerresponse.md
  - docs/models/operations/upsertpartialrequest.md
  - docs/models/operations/upsertpartialresponse.md
  - docs/models/operations/upsertpluginrequest.md
  - docs/models/operations/upsertpluginresponse.md
  - docs/models/operations/upsertpluginwithconsumergrouprequest.md
  - docs/models/operations/upsertpluginwithconsumergroupresponse.md
  - docs/models/operations/upsertpluginwithconsumerrequest.md
  - docs/models/operations/upsertpluginwithconsumerresponse.md
  - docs/models/operations/upsertpluginwithrouterequest.md
  - docs/models/operations/upsertpluginwithrouteresponse.md
  - docs/models/operations/upsertpluginwithservicerequest.md
  - docs/models/operations/upsertpluginwithserviceresponse.md
  - docs/models/operations/upsertrouterequest.md
  - docs/models/operations/upsertrouteresponse.md
  - docs/models/operations/upsertroutewithservicerequest.md
  - docs/models/operations/upsertroutewithserviceresponse.md
  - docs/models/operations/upsertservicerequest.md
  - docs/models/operations/upsertserviceresponse.md
  - docs/models/operations/upsertsnirequest.md
  - docs/models/operations/upsertsniresponse.md
  - docs/models/operations/upsertsniwithcertificaterequest.md
  - docs/models/operations/upsertsniwithcertificateresponse.md
  - docs/models/operations/upserttargetwithupstreamrequest.md
  - docs/models/operations/upserttargetwithupstreamresponse.md
  - docs/models/operations/upsertupstreamrequest.md
  - docs/models/operations/upsertupstreamresponse.md
  - docs/models/operations/upsertvaultrequest.md
  - docs/models/operations/upsertvaultresponse.md
  - docs/models/operations/usersassignrolerequest.md
  - docs/models/operations/usersassignroleresponse.md
  - docs/models/operations/usersremoverolerequest.md
  - docs/models/operations/usersremoveroleresponse.md
  - docs/models/sdkerrors/badrequesterror.md
  - docs/models/sdkerrors/baseerror.md
  - docs/models/sdkerrors/conflicterror.md
  - docs/models/sdkerrors/forbiddenerror.md
  - docs/models/sdkerrors/gatewayunauthorizederror.md
  - docs/models/sdkerrors/internalservererror.md
  - docs/models/sdkerrors/internalservererrorstatus.md
  - docs/models/sdkerrors/notfounderror.md
  - docs/models/sdkerrors/preconditionfailed.md
  - docs/models/sdkerrors/ratelimited.md
  - docs/models/sdkerrors/serviceunavailable.md
  - docs/models/sdkerrors/status.md
  - docs/models/sdkerrors/unauthorizederror.md
  - docs/models/sdkerrors/unsupportedmediatypeerror.md
  - docs/sdks/acls/README.md
  - docs/sdks/apikeys/README.md
  - docs/sdks/authentication/README.md
  - docs/sdks/authsettings/README.md
  - docs/sdks/basicauthcredentials/README.md
  - docs/sdks/cacertificates/README.md
  - docs/sdks/certificates/README.md
  - docs/sdks/cloudgateways/README.md
  - docs/sdks/configstores/README.md
  - docs/sdks/configstoresecrets/README.md
  - docs/sdks/consumergroups/README.md
  - docs/sdks/consumers/README.md
  - docs/sdks/controlplanegroups/README.md
  - docs/sdks/controlplanes/README.md
  - docs/sdks/customplugins/README.md
  - docs/sdks/custompluginschemas/README.md
  - docs/sdks/degraphqlroutes/README.md
  - docs/sdks/dpcertificates/README.md
  - docs/sdks/dpnodes/README.md
  - docs/sdks/hmacauthcredentials/README.md
  - docs/sdks/impersonationsettings/README.md
  - docs/sdks/invites/README.md
  - docs/sdks/jwts/README.md
  - docs/sdks/keys/README.md
  - docs/sdks/keysets/README.md
  - docs/sdks/me/README.md
  - docs/sdks/mtlsauthcredentials/README.md
  - docs/sdks/notifications/README.md
  - docs/sdks/partiallinks/README.md
  - docs/sdks/partials/README.md
  - docs/sdks/plugins/README.md
  - docs/sdks/roles/README.md
  - docs/sdks/routes/README.md
  - docs/sdks/sdk/README.md
  - docs/sdks/services/README.md
  - docs/sdks/snis/README.md
  - docs/sdks/systemaccounts/README.md
  - docs/sdks/systemaccountsaccesstokens/README.md
  - docs/sdks/systemaccountsroles/README.md
  - docs/sdks/systemaccountsteammembership/README.md
  - docs/sdks/targets/README.md
  - docs/sdks/teammembership/README.md
  - docs/sdks/teams/README.md
  - docs/sdks/upstreams/README.md
  - docs/sdks/users/README.md
  - docs/sdks/vaults/README.md
  - dpcertificates.go
  - dpnodes.go
  - go.mod
  - hmacauthcredentials.go
  - impersonationsettings.go
  - internal/hooks/hooks.go
  - internal/utils/contenttype.go
  - internal/utils/env.go
  - internal/utils/form.go
  - internal/utils/headers.go
  - internal/utils/json.go
  - internal/utils/pathparams.go
  - internal/utils/queryparams.go
  - internal/utils/requestbody.go
  - internal/utils/retries.go
  - internal/utils/security.go
  - internal/utils/utils.go
  - invites.go
  - jwts.go
  - keys.go
  - keysets.go
  - me.go
  - models/operations/options.go
  - models/sdkerrors/sdkerror.go
  - mtlsauthcredentials.go
  - notifications.go
  - partiallinks.go
  - partials.go
  - plugins.go
  - retry/config.go
  - roles.go
  - routes.go
  - sdk.go
  - services.go
  - snis.go
  - systemaccounts.go
  - systemaccountsaccesstokens.go
  - systemaccountsroles.go
  - systemaccountsteammembership.go
  - targets.go
  - teammembership.go
  - teams.go
  - types/bigint.go
  - types/date.go
  - types/datetime.go
  - types/decimal.go
  - types/pointers.go
  - upstreams.go
  - users.go
  - vaults.go
examples:
  list-user-configurations:
    speakeasy-default-list-user-configurations:
      responses:
        "200":
          application/json: {"data": [{"event_id": "<id>", "event_title": "<value>", "event_description": "<value>", "event_namespace": "cloud-gateways", "event_subscription_count": 638140, "default_subscription": [{"channel": "EMAIL", "enabled": true}, {"channel": "EMAIL", "enabled": true}, {"channel": "EMAIL", "enabled": true}]}, {"event_id": "<id>", "event_title": "<value>", "event_description": "<value>", "event_namespace": "cloud-gateways", "event_subscription_count": 638140, "default_subscription": [{"channel": "EMAIL", "enabled": true}, {"channel": "EMAIL", "enabled": true}, {"channel": "EMAIL", "enabled": true}]}]}
        "400":
          application/problem+json: {"status": 809660, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  list-event-subscriptions:
    speakeasy-default-list-event-subscriptions:
      parameters:
        path:
          eventId: "invoice-ready"
      responses:
        "200":
          application/json: {"data": [], "meta": {"next": "/usr/src", "previous": "/usr/ports", "size": 10}}
        "400":
          application/problem+json: {"status": 978386, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": [], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  create-event-subscription:
    speakeasy-default-create-event-subscription:
      parameters:
        path:
          eventId: "invoice-ready"
      responses:
        "201":
          application/json: {"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "entity_type": "billing-invoice", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z", "regions": ["AU", "ME", "AU"], "entities": ["<value 1>", "<value 2>"], "channels": [{"type": "IN_APP", "enabled": false}, {"type": "IN_APP", "enabled": false}], "enabled": false, "name": "<value>"}
        "400":
          application/problem+json: {"status": 217870, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": null, "reason": "is a required field", "dependents": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  get-event-subscription:
    speakeasy-default-get-event-subscription:
      parameters:
        path:
          eventId: "invoice-ready"
          subscriptionId: "<id>"
      responses:
        "200":
          application/json: {"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "entity_type": "dataplane", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z", "regions": [], "entities": ["<value 1>", "<value 2>", "<value 3>"], "channels": [{"type": "IN_APP", "enabled": false}, {"type": "IN_APP", "enabled": false}], "enabled": false, "name": "<value>"}
        "400":
          application/problem+json: {"status": 575086, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": [], "source": "body"}, {"field": "name", "rule": "enum", "reason": "is a required field", "choices": [], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  update-event-subscription:
    speakeasy-default-update-event-subscription:
      parameters:
        path:
          eventId: "invoice-ready"
          subscriptionId: "<id>"
      responses:
        "200":
          application/json: {"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "entity_type": "dataplane", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z", "regions": [], "entities": [], "channels": [{"type": "EMAIL", "enabled": true}], "enabled": true, "name": "<value>"}
        "400":
          application/problem+json: {"status": 167230, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  delete-event-subscription:
    speakeasy-default-delete-event-subscription:
      parameters:
        path:
          eventId: "invoice-ready"
          subscriptionId: "<id>"
      responses:
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-notifications:
    speakeasy-default-list-notifications:
      parameters:
        query:
          page[before]: "ewogICJpZCI6ICJoZWxsbyB3b3JsZCIKfQ"
          page[after]: "ewogICJpZCI6ICJoZWxsbyB3b3JsZCIKfQ"
      responses:
        "200":
          application/json: {"data": [{"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "title": "<value>", "description": "squid yearningly ectoderm hexagon ferret dusk buck alarmed", "status": "READ", "region": "IN", "namespace": "plan-and-usage", "entity_id": "<id>", "details": {}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "title": "<value>", "description": "squid yearningly ectoderm hexagon ferret dusk buck alarmed", "status": "READ", "region": "IN", "namespace": "plan-and-usage", "entity_id": "<id>", "details": {}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "title": "<value>", "description": "squid yearningly ectoderm hexagon ferret dusk buck alarmed", "status": "READ", "region": "IN", "namespace": "plan-and-usage", "entity_id": "<id>", "details": {}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}], "meta": {"next": "/lost+found", "previous": "/opt/sbin", "size": 10}}
        "400":
          application/problem+json: {"status": 405720, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": [], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  get-notification-details:
    speakeasy-default-get-notification-details:
      parameters:
        path:
          notificationId: "<id>"
      responses:
        "200":
          application/json: {"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "title": "<value>", "description": "boldly outrank affiliate outnumber along progress ick hoick energetically", "status": "ARCHIVED", "region": "US", "namespace": "plan-and-usage", "entity_id": "<id>", "details": {}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  update-notification:
    speakeasy-default-update-notification:
      parameters:
        path:
          notificationId: "<id>"
      responses:
        "200":
          application/json: {"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "title": "<value>", "description": "probable vice daily that revitalise", "status": "UNREAD", "region": "ME", "namespace": "cloud-gateways", "entity_id": "<id>", "details": {}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 138055, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>", "<value 2>"], "source": "body"}, {"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>", "<value 2>"], "source": "body"}, {"field": "name", "rule": "min_lowercase", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  delete-notification:
    speakeasy-default-delete-notification:
      parameters:
        path:
          notificationId: "<id>"
      responses:
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  bulk-notifications:
    speakeasy-default-bulk-notifications:
      responses:
        "400":
          application/problem+json: {"status": 15165, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>", "<value 2>"], "source": "body"}, {"field": "name", "rule": "max_items", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "min_items", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  get-availability-json:
    speakeasy-default-get-availability-json:
      responses:
        "200":
          application/json: {"versions": ["3.2"], "instance_types": [{"name": "large", "hourly_cost": "1.00", "v_cpu": "2", "gb_memory": "2"}, {"name": "large", "hourly_cost": "1.00", "v_cpu": "2", "gb_memory": "2"}], "providers": [{"provider": "aws", "regions": []}, {"provider": "aws", "regions": []}]}
  list-configurations:
    speakeasy-default-list-configurations:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "edaf40f9-9fb0-4ffe-bb74-4e763a6bd471", "version": "3.2", "api_access": "private+public", "dataplane_group_config": [{"provider": "aws", "region": "us-east-2", "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "autoscale": {"kind": "static", "instance_type": "medium", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}]}, {"provider": "aws", "region": "us-east-2", "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "autoscale": {"kind": "static", "instance_type": "medium", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}]}], "dataplane_groups": [{"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "static", "instance_type": "medium", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "terminated", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "static", "instance_type": "medium", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "terminated", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "static", "instance_type": "medium", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "terminated", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}], "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z", "control_plane_id": "0949471e-b759-45ba-87ab-ee63fb781388", "control_plane_geo": "au"}, {"id": "edaf40f9-9fb0-4ffe-bb74-4e763a6bd471", "version": "3.2", "api_access": "private+public", "dataplane_group_config": [{"provider": "aws", "region": "us-east-2", "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "autoscale": {"kind": "static", "instance_type": "medium", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}]}, {"provider": "aws", "region": "us-east-2", "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "autoscale": {"kind": "static", "instance_type": "medium", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}]}], "dataplane_groups": [{"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "static", "instance_type": "medium", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "terminated", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "static", "instance_type": "medium", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "terminated", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "static", "instance_type": "medium", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "terminated", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}], "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z", "control_plane_id": "0949471e-b759-45ba-87ab-ee63fb781388", "control_plane_geo": "au"}]}
        "400":
          application/problem+json: {"status": 245214, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  create-configuration:
    speakeasy-default-create-configuration:
      requestBody:
        application/json: {"control_plane_id": "0949471e-b759-45ba-87ab-ee63fb781388", "control_plane_geo": "in", "version": "3.2", "dataplane_groups": [{"provider": "aws", "region": "us-east-2", "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "autoscale": {"kind": "autopilot", "base_rps": 1, "max_rps": 1000}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}]}, {"provider": "aws", "region": "us-east-2", "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "autoscale": {"kind": "autopilot", "base_rps": 1, "max_rps": 1000}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}]}], "api_access": "private+public"}
      responses:
        "200":
          application/json: {"id": "edaf40f9-9fb0-4ffe-bb74-4e763a6bd471", "version": "3.2", "api_access": "private+public", "dataplane_group_config": [{"provider": "aws", "region": "us-east-2", "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "autoscale": {"kind": "static", "instance_type": "large", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}]}, {"provider": "aws", "region": "us-east-2", "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "autoscale": {"kind": "static", "instance_type": "large", "requested_instances": 3}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}]}], "dataplane_groups": [{"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "autopilot", "base_rps": 1, "max_rps": 1000}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "ready", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "autopilot", "base_rps": 1, "max_rps": 1000}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "ready", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "autopilot", "base_rps": 1, "max_rps": 1000}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "ready", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}], "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z", "control_plane_id": "0949471e-b759-45ba-87ab-ee63fb781388", "control_plane_geo": "me"}
        "400":
          application/problem+json: {"status": 419168, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  get-configuration:
    speakeasy-default-get-configuration:
      parameters:
        path:
          configurationId: "edaf40f9-9fb0-4ffe-bb74-4e763a6bd471"
      responses:
        "200":
          application/json: {"id": "edaf40f9-9fb0-4ffe-bb74-4e763a6bd471", "version": "3.2", "api_access": "private+public", "dataplane_group_config": [{"provider": "aws", "region": "us-east-2", "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "autoscale": {"kind": "autopilot", "base_rps": 1, "max_rps": 1000}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}]}], "dataplane_groups": [{"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "autopilot", "base_rps": 1, "max_rps": 1000}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "terminating", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "autopilot", "base_rps": 1, "max_rps": 1000}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "terminating", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "autopilot", "base_rps": 1, "max_rps": 1000}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}, {"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "terminating", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}], "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z", "control_plane_id": "0949471e-b759-45ba-87ab-ee63fb781388", "control_plane_geo": "us"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-custom-domains:
    speakeasy-default-list-custom-domains:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "39ed3790-085d-4605-9627-f96d86aaf425", "control_plane_id": "0949471e-b759-45ba-87ab-ee63fb781388", "control_plane_geo": "us", "domain": "example.com", "certificate_id": "3b7cbeee-fbec-440e-a5ef-89e7dec3b9d0", "sni_id": "a8f11ea8-af09-4422-9735-5d4f8910aba1", "state": "terminating", "state_metadata": {"reported_status": "INVALID", "reason": "CNAME points to '_acme-challenge.<prefix>.gateways.konghq.tech.' instead of '_acme-challenge.<prefix>.acme.gateways.konghq.tech.'\n"}, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "39ed3790-085d-4605-9627-f96d86aaf425", "control_plane_id": "0949471e-b759-45ba-87ab-ee63fb781388", "control_plane_geo": "us", "domain": "example.com", "certificate_id": "3b7cbeee-fbec-440e-a5ef-89e7dec3b9d0", "sni_id": "a8f11ea8-af09-4422-9735-5d4f8910aba1", "state": "terminating", "state_metadata": {"reported_status": "INVALID", "reason": "CNAME points to '_acme-challenge.<prefix>.gateways.konghq.tech.' instead of '_acme-challenge.<prefix>.acme.gateways.konghq.tech.'\n"}, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}]}
        "400":
          application/problem+json: {"status": 427220, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "min", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "rule": "max_length", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  create-custom-domains:
    speakeasy-default-create-custom-domains:
      requestBody:
        application/json: {"control_plane_id": "0949471e-b759-45ba-87ab-ee63fb781388", "control_plane_geo": "us", "domain": "example.com"}
      responses:
        "201":
          application/json: {"id": "39ed3790-085d-4605-9627-f96d86aaf425", "control_plane_id": "0949471e-b759-45ba-87ab-ee63fb781388", "control_plane_geo": "in", "domain": "example.com", "certificate_id": "3b7cbeee-fbec-440e-a5ef-89e7dec3b9d0", "sni_id": "a8f11ea8-af09-4422-9735-5d4f8910aba1", "state": "ready", "state_metadata": {"reported_status": "INVALID", "reason": "CNAME points to '_acme-challenge.<prefix>.gateways.konghq.tech.' instead of '_acme-challenge.<prefix>.acme.gateways.konghq.tech.'\n"}, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 154529, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  get-custom-domain:
    speakeasy-default-get-custom-domain:
      parameters:
        path:
          customDomainId: "39ed3790-085d-4605-9627-f96d86aaf425"
      responses:
        "200":
          application/json: {"id": "39ed3790-085d-4605-9627-f96d86aaf425", "control_plane_id": "0949471e-b759-45ba-87ab-ee63fb781388", "control_plane_geo": "me", "domain": "example.com", "certificate_id": "3b7cbeee-fbec-440e-a5ef-89e7dec3b9d0", "sni_id": "a8f11ea8-af09-4422-9735-5d4f8910aba1", "state": "initializing", "state_metadata": {"reported_status": "INVALID", "reason": "CNAME points to '_acme-challenge.<prefix>.gateways.konghq.tech.' instead of '_acme-challenge.<prefix>.acme.gateways.konghq.tech.'\n"}, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  delete-custom-domain:
    speakeasy-default-delete-custom-domain:
      parameters:
        path:
          customDomainId: "39ed3790-085d-4605-9627-f96d86aaf425"
      responses:
        "400":
          application/problem+json: {"status": 52984, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>"], "source": "body"}, {"field": "name", "rule": "max_length", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  get-custom-domain-online-status:
    speakeasy-default-get-custom-domain-online-status:
      parameters:
        path:
          customDomainId: "39ed3790-085d-4605-9627-f96d86aaf425"
      responses:
        "200":
          application/json: {"cname": "verified", "ssl": "verified"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-default-resource-configurations:
    speakeasy-default-list-default-resource-configurations:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": []}
        "400":
          application/problem+json: {"status": 748771, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}, {"field": "name", "source": "body", "reason": "is a required field"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  list-default-resource-quotas:
    speakeasy-default-list-default-resource-quotas:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "cc504063-f3bb-4e09-8e32-bbcdbc5cd618", "resource": "count/data-planes-estimate", "name": "Active Networks", "description": "Across the organization, the aggregate number of active networks cannot exceed this value.", "value": 2, "overrides": [{"id": "9678f205-49a1-47bb-82d9-d01cafa42a0d", "resource": "count/networks.not-offline", "name": "Active Networks", "description": "Across the organization, the aggregate number of active networks cannot exceed this value.", "value": 2, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "9678f205-49a1-47bb-82d9-d01cafa42a0d", "resource": "count/networks.not-offline", "name": "Active Networks", "description": "Across the organization, the aggregate number of active networks cannot exceed this value.", "value": 2, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "cc504063-f3bb-4e09-8e32-bbcdbc5cd618", "resource": "count/data-planes-estimate", "name": "Active Networks", "description": "Across the organization, the aggregate number of active networks cannot exceed this value.", "value": 2, "overrides": [{"id": "9678f205-49a1-47bb-82d9-d01cafa42a0d", "resource": "count/networks.not-offline", "name": "Active Networks", "description": "Across the organization, the aggregate number of active networks cannot exceed this value.", "value": 2, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "9678f205-49a1-47bb-82d9-d01cafa42a0d", "resource": "count/networks.not-offline", "name": "Active Networks", "description": "Across the organization, the aggregate number of active networks cannot exceed this value.", "value": 2, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}]}
        "400":
          application/problem+json: {"status": 797235, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "min_items", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "source": "body", "reason": "is a required field"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  list-networks:
    speakeasy-default-list-networks:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "name": "us-east-2 network", "default": false, "cloud_gateway_provider_account_id": "929b2449-c69f-44c4-b6ad-9ecec6f811ae", "region": "us-east-2", "availability_zones": ["use2-az1", "use2-az2", "use2-az3"], "cidr_block": "10.0.0.0/8", "state": "terminated", "state_metadata": {"reported_status": "INVALID", "reason": "Network could not be deployed due to insufficient cloud provider compute instances.\n"}, "provider_metadata": {}, "transit_gateway_count": 0, "configuration_reference_count": 0, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}]}
        "400":
          application/problem+json: {"status": 672186, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  create-network:
    speakeasy-default-create-network:
      requestBody:
        application/json: {"name": "us-east-2 network", "cloud_gateway_provider_account_id": "929b2449-c69f-44c4-b6ad-9ecec6f811ae", "region": "us-east-2", "availability_zones": ["use2-az1", "use2-az2", "use2-az3"], "cidr_block": "10.0.0.0/8", "state": "initializing"}
      responses:
        "201":
          application/json: {"id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "name": "us-east-2 network", "default": false, "cloud_gateway_provider_account_id": "929b2449-c69f-44c4-b6ad-9ecec6f811ae", "region": "us-east-2", "availability_zones": ["use2-az1", "use2-az2", "use2-az3"], "cidr_block": "10.0.0.0/8", "state": "offline", "state_metadata": {"reported_status": "INVALID", "reason": "Network could not be deployed due to insufficient cloud provider compute instances.\n"}, "provider_metadata": {}, "transit_gateway_count": 0, "configuration_reference_count": 0, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 867880, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  get-network:
    speakeasy-default-get-network:
      parameters:
        path:
          networkId: "36ae63d3-efd1-4bec-b246-62aa5d3f5695"
      responses:
        "200":
          application/json: {"id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "name": "us-east-2 network", "default": false, "cloud_gateway_provider_account_id": "929b2449-c69f-44c4-b6ad-9ecec6f811ae", "region": "us-east-2", "availability_zones": ["use2-az1", "use2-az2", "use2-az3"], "cidr_block": "10.0.0.0/8", "state": "terminating", "state_metadata": {"reported_status": "INVALID", "reason": "Network could not be deployed due to insufficient cloud provider compute instances.\n"}, "provider_metadata": {}, "transit_gateway_count": 0, "configuration_reference_count": 0, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  update-network:
    speakeasy-default-update-network:
      parameters:
        path:
          networkId: "36ae63d3-efd1-4bec-b246-62aa5d3f5695"
      requestBody:
        application/json: {"name": "us-east-2 network"}
      responses:
        "200":
          application/json: {"id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "name": "us-east-2 network", "default": false, "cloud_gateway_provider_account_id": "929b2449-c69f-44c4-b6ad-9ecec6f811ae", "region": "us-east-2", "availability_zones": ["use2-az1", "use2-az2", "use2-az3"], "cidr_block": "10.0.0.0/8", "state": "terminating", "state_metadata": {"reported_status": "INVALID", "reason": "Network could not be deployed due to insufficient cloud provider compute instances.\n"}, "provider_metadata": {}, "transit_gateway_count": 0, "configuration_reference_count": 0, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 996797, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max_items", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "max_items", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "source": "body", "reason": "is a required field"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  delete-network:
    speakeasy-default-delete-network:
      parameters:
        path:
          networkId: "36ae63d3-efd1-4bec-b246-62aa5d3f5695"
      responses:
        "400":
          application/problem+json: {"status": 720486, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-network-configurations:
    speakeasy-default-list-network-configurations:
      parameters:
        path:
          networkId: "36ae63d3-efd1-4bec-b246-62aa5d3f5695"
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "edaf40f9-9fb0-4ffe-bb74-4e763a6bd471", "version": "3.2", "api_access": "private+public", "dataplane_group_config": [], "dataplane_groups": [{"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "autopilot", "base_rps": 1, "max_rps": 1000}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "terminating", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "cbb8872a-1f83-4806-bf69-fdf0b4783c7e", "provider": "aws", "region": "us-east-2", "autoscale": {"kind": "autopilot", "base_rps": 1, "max_rps": 1000}, "environment": [{"name": "KONG_LOG_LEVEL", "value": "INFO"}], "cloud_gateway_network_id": "36ae63d3-efd1-4bec-b246-62aa5d3f5695", "state": "terminating", "state_metadata": {"reported_status": "ERROR", "reason": "Dataplane group could not be deployed due to insufficient cloud provider compute instances.\n"}, "private_ip_addresses": ["192.168.248.132", "192.168.66.81", "192.168.137.135"], "egress_ip_addresses": ["71.78.149.75", "91.149.112.244", "51.235.15.121"], "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}], "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z", "control_plane_id": "0949471e-b759-45ba-87ab-ee63fb781388", "control_plane_geo": "in"}]}
        "400":
          application/problem+json: {"status": 836364, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": [], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-transit-gateways:
    speakeasy-default-list-transit-gateways:
      parameters:
        path:
          networkId: "36ae63d3-efd1-4bec-b246-62aa5d3f5695"
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"name": "us-east-2 transit gateway", "dns_config": [{"remote_dns_server_ip_addresses": ["10.0.0.2"], "domain_proxy_list": ["foobar.com"]}], "cidr_blocks": ["10.0.0.0/8", "100.64.0.0/10", "172.16.0.0/12"], "transit_gateway_attachment_config": {"kind": "aws-transit-gateway-attachment", "transit_gateway_id": "<id>", "ram_share_arn": "<value>"}, "id": "0850820b-d153-4a2a-b9be-7d2204779139", "state": "pending-acceptance", "state_metadata": {"reported_status": "ERROR", "reason": "Transit Gateway Attachment configuration could not find a resource with the provided ram share arn.\n"}, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"name": "us-east-2 transit gateway", "dns_config": [{"remote_dns_server_ip_addresses": ["10.0.0.2"], "domain_proxy_list": ["foobar.com"]}, {"remote_dns_server_ip_addresses": ["10.0.0.2"], "domain_proxy_list": ["foobar.com"]}, {"remote_dns_server_ip_addresses": ["10.0.0.2"], "domain_proxy_list": ["foobar.com"]}], "transit_gateway_attachment_config": {"kind": "azure-vnet-peering-attachment", "tenant_id": "<id>", "subscription_id": "<id>", "resource_group_name": "<value>", "vnet_name": "<value>"}, "id": "0850820b-d153-4a2a-b9be-7d2204779139", "state": "terminated", "state_metadata": {"reported_status": "ERROR", "reason": "Transit Gateway Attachment configuration could not find a resource with the provided ram share arn.\n"}, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"name": "us-east-2 transit gateway", "dns_config": [{"remote_dns_server_ip_addresses": ["10.0.0.2"], "domain_proxy_list": ["foobar.com"]}, {"remote_dns_server_ip_addresses": ["10.0.0.2"], "domain_proxy_list": ["foobar.com"]}, {"remote_dns_server_ip_addresses": ["10.0.0.2"], "domain_proxy_list": ["foobar.com"]}], "transit_gateway_attachment_config": {"kind": "azure-vnet-peering-attachment", "tenant_id": "<id>", "subscription_id": "<id>", "resource_group_name": "<value>", "vnet_name": "<value>"}, "id": "0850820b-d153-4a2a-b9be-7d2204779139", "state": "terminated", "state_metadata": {"reported_status": "ERROR", "reason": "Transit Gateway Attachment configuration could not find a resource with the provided ram share arn.\n"}, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}]}
        "400":
          application/problem+json: {"status": 646051, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": [], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  create-transit-gateway:
    speakeasy-default-create-transit-gateway:
      parameters:
        path:
          networkId: "36ae63d3-efd1-4bec-b246-62aa5d3f5695"
      requestBody:
        application/json: {"name": "us-east-2 transit gateway", "dns_config": [{"remote_dns_server_ip_addresses": ["10.0.0.2"], "domain_proxy_list": ["foobar.com"]}, {"remote_dns_server_ip_addresses": ["10.0.0.2"], "domain_proxy_list": ["foobar.com"]}], "cidr_blocks": ["10.0.0.0/8", "100.64.0.0/10", "172.16.0.0/12"], "transit_gateway_attachment_config": {"kind": "aws-vpc-peering-attachment", "peer_account_id": "<id>", "peer_vpc_id": "<id>", "peer_vpc_region": "<value>"}}
      responses:
        "201":
          application/json: {"name": "us-east-2 transit gateway", "dns_config": [{"remote_dns_server_ip_addresses": ["10.0.0.2"], "domain_proxy_list": ["foobar.com"]}], "cidr_blocks": ["10.0.0.0/8", "100.64.0.0/10", "172.16.0.0/12"], "transit_gateway_attachment_config": {"kind": "aws-transit-gateway-attachment", "transit_gateway_id": "<id>", "ram_share_arn": "<value>"}, "id": "0850820b-d153-4a2a-b9be-7d2204779139", "state": "ready", "state_metadata": {"reported_status": "ERROR", "reason": "Transit Gateway Attachment configuration could not find a resource with the provided ram share arn.\n"}, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 568379, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "min_symbols", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>"], "source": "body"}, {"field": "name", "rule": "max_length", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  get-transit-gateway:
    speakeasy-default-get-transit-gateway:
      parameters:
        path:
          networkId: "36ae63d3-efd1-4bec-b246-62aa5d3f5695"
          transitGatewayId: "0850820b-d153-4a2a-b9be-7d2204779139"
      responses:
        "200":
          application/json: {"name": "us-east-2 transit gateway", "dns_config": [{"remote_dns_server_ip_addresses": ["10.0.0.2"], "domain_proxy_list": ["foobar.com"]}], "cidr_blocks": ["10.0.0.0/8", "100.64.0.0/10", "172.16.0.0/12"], "transit_gateway_attachment_config": {"kind": "aws-transit-gateway-attachment", "transit_gateway_id": "<id>", "ram_share_arn": "<value>"}, "id": "0850820b-d153-4a2a-b9be-7d2204779139", "state": "terminated", "state_metadata": {"reported_status": "ERROR", "reason": "Transit Gateway Attachment configuration could not find a resource with the provided ram share arn.\n"}, "entity_version": 1, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  delete-transit-gateway:
    speakeasy-default-delete-transit-gateway:
      parameters:
        path:
          networkId: "36ae63d3-efd1-4bec-b246-62aa5d3f5695"
          transitGatewayId: "0850820b-d153-4a2a-b9be-7d2204779139"
      responses:
        "400":
          application/problem+json: {"status": 224039, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": [], "source": "body"}, {"field": "name", "rule": "enum", "reason": "is a required field", "choices": [], "source": "body"}, {"field": "name", "rule": "min", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-provider-accounts:
    speakeasy-default-list-provider-accounts:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "929b2449-c69f-44c4-b6ad-9ecec6f811ae", "provider": "aws", "provider_account_id": "<id>", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "929b2449-c69f-44c4-b6ad-9ecec6f811ae", "provider": "aws", "provider_account_id": "<id>", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "929b2449-c69f-44c4-b6ad-9ecec6f811ae", "provider": "aws", "provider_account_id": "<id>", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}]}
        "400":
          application/problem+json: {"status": 962297, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": [], "source": "body"}, {"field": "name", "rule": "max_length", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  get-provider-account:
    speakeasy-default-get-provider-account:
      parameters:
        path:
          providerAccountId: "929b2449-c69f-44c4-b6ad-9ecec6f811ae"
      responses:
        "200":
          application/json: {"id": "929b2449-c69f-44c4-b6ad-9ecec6f811ae", "provider": "aws", "provider_account_id": "<id>", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-resource-configurations:
    speakeasy-default-list-resource-configurations:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "9678f205-49a1-47bb-82d9-d01cafa42a0d", "qualifier": "data-plane-group-idle-timeout-minutes", "value": 45}]}
        "400":
          application/problem+json: {"status": 729245, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "min_lowercase", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  get-resource-configuration:
    speakeasy-default-get-resource-configuration:
      parameters:
        path:
          resourceConfigurationId: "9678f205-49a1-47bb-82d9-d01cafa42a0d"
      responses:
        "200":
          application/json: {"id": "9678f205-49a1-47bb-82d9-d01cafa42a0d", "qualifier": "data-plane-group-idle-timeout-minutes", "value": 45}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-resource-quotas:
    speakeasy-default-list-resource-quotas:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "9678f205-49a1-47bb-82d9-d01cafa42a0d", "resource": "count/provider-accounts.per-provider", "name": "Active Networks", "description": "Across the organization, the aggregate number of active networks cannot exceed this value.", "value": 2, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "9678f205-49a1-47bb-82d9-d01cafa42a0d", "resource": "count/provider-accounts.per-provider", "name": "Active Networks", "description": "Across the organization, the aggregate number of active networks cannot exceed this value.", "value": 2, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "9678f205-49a1-47bb-82d9-d01cafa42a0d", "resource": "count/provider-accounts.per-provider", "name": "Active Networks", "description": "Across the organization, the aggregate number of active networks cannot exceed this value.", "value": 2, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}]}
        "400":
          application/problem+json: {"status": 435151, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max_items", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "min_symbols", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  get-resource-quota:
    speakeasy-default-get-resource-quota:
      parameters:
        path:
          resourceQuotaId: "9678f205-49a1-47bb-82d9-d01cafa42a0d"
      responses:
        "200":
          application/json: {"id": "9678f205-49a1-47bb-82d9-d01cafa42a0d", "resource": "count/networks.not-offline", "name": "Active Networks", "description": "Across the organization, the aggregate number of active networks cannot exceed this value.", "value": 2, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-control-planes:
    speakeasy-default-list-control-planes:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
          filter: {"cloud_gateway": true}
          labels: "key:value,existCheck"
          sort: "created_at desc"
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "Test Control Plane", "description": "A test control plane for exploration.", "labels": {"env": "test"}, "config": {"control_plane_endpoint": "https://acfe5f253f.cp0.konghq.com", "telemetry_endpoint": "https://acfe5f253f.tp0.konghq.com", "cluster_type": "CLUSTER_TYPE_CONTROL_PLANE", "auth_type": "pinned_client_certs", "cloud_gateway": false, "proxy_urls": [{"host": "example.com", "port": 443, "protocol": "https"}]}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "Test Control Plane", "description": "A test control plane for exploration.", "labels": {"env": "test"}, "config": {"control_plane_endpoint": "https://acfe5f253f.cp0.konghq.com", "telemetry_endpoint": "https://acfe5f253f.tp0.konghq.com", "cluster_type": "CLUSTER_TYPE_CONTROL_PLANE", "auth_type": "pinned_client_certs", "cloud_gateway": false, "proxy_urls": [{"host": "example.com", "port": 443, "protocol": "https"}]}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}, {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "Test Control Plane", "description": "A test control plane for exploration.", "labels": {"env": "test"}, "config": {"control_plane_endpoint": "https://acfe5f253f.cp0.konghq.com", "telemetry_endpoint": "https://acfe5f253f.tp0.konghq.com", "cluster_type": "CLUSTER_TYPE_CONTROL_PLANE", "auth_type": "pinned_client_certs", "cloud_gateway": false, "proxy_urls": [{"host": "example.com", "port": 443, "protocol": "https"}]}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}]}
        "400":
          application/problem+json: {"status": 484470, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "min_lowercase", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "500":
          application/problem+json: {"status": 920074, "title": "<value>", "instance": "<value>", "detail": "<value>"}
        "503":
          application/problem+json: {"status": 503, "title": "Service Unavailable", "instance": "konnect:trace:2287285207635123011", "detail": "Could not retrieve permissions to check resource accessibility."}
  create-control-plane:
    speakeasy-default-create-control-plane:
      requestBody:
        application/json: {"name": "Test Control Plane", "description": "A test control plane for exploration.", "cluster_type": "CLUSTER_TYPE_CONTROL_PLANE", "auth_type": "pinned_client_certs", "cloud_gateway": false, "proxy_urls": [{"host": "example.com", "port": 443, "protocol": "https"}], "labels": {"env": "test"}}
      responses:
        "201":
          application/json: {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "Test Control Plane", "description": "A test control plane for exploration.", "labels": {"env": "test"}, "config": {"control_plane_endpoint": "https://acfe5f253f.cp0.konghq.com", "telemetry_endpoint": "https://acfe5f253f.tp0.konghq.com", "cluster_type": "CLUSTER_TYPE_CONTROL_PLANE", "auth_type": "pinned_client_certs", "cloud_gateway": true, "proxy_urls": [{"host": "example.com", "port": 443, "protocol": "https"}]}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 704087, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
        "500":
          application/problem+json: {"status": 500, "title": "Internal Server Error", "instance": "konnect:trace:2287285207635123011", "detail": "Could not propagate control plane changes to control plane cluster service."}
        "503":
          application/problem+json: {"status": 503, "title": "Service Unavailable", "instance": "konnect:trace:2287285207635123011", "detail": "Could not retrieve permissions to check resource accessibility."}
  get-control-plane:
    speakeasy-default-get-control-plane:
      parameters:
        path:
          id: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      responses:
        "200":
          application/json: {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "Test Control Plane", "description": "A test control plane for exploration.", "labels": {"env": "test"}, "config": {"control_plane_endpoint": "https://acfe5f253f.cp0.konghq.com", "telemetry_endpoint": "https://acfe5f253f.tp0.konghq.com", "cluster_type": "CLUSTER_TYPE_CONTROL_PLANE", "auth_type": "pinned_client_certs", "cloud_gateway": false, "proxy_urls": [{"host": "example.com", "port": 443, "protocol": "https"}]}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 210677, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "500":
          application/problem+json: {"status": 37913, "title": "<value>", "instance": "<value>", "detail": "<value>"}
        "503":
          application/problem+json: {"status": 503, "title": "Service Unavailable", "instance": "konnect:trace:2287285207635123011", "detail": "Could not retrieve permissions to check resource accessibility."}
  update-control-plane:
    speakeasy-default-update-control-plane:
      parameters:
        path:
          id: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      requestBody:
        application/json: {"name": "Test Control Plane", "description": "A test control plane for exploration.", "auth_type": "pinned_client_certs", "proxy_urls": [{"host": "example.com", "port": 443, "protocol": "https"}], "labels": {"env": "test"}}
      responses:
        "200":
          application/json: {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "Test Control Plane", "description": "A test control plane for exploration.", "labels": {"env": "test"}, "config": {"control_plane_endpoint": "https://acfe5f253f.cp0.konghq.com", "telemetry_endpoint": "https://acfe5f253f.tp0.konghq.com", "cluster_type": "CLUSTER_TYPE_CONTROL_PLANE", "auth_type": "pinned_client_certs", "cloud_gateway": true, "proxy_urls": [{"host": "example.com", "port": 443, "protocol": "https"}]}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 817049, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "500":
          application/problem+json: {"status": 500, "title": "Internal Server Error", "instance": "konnect:trace:2287285207635123011", "detail": "Could not propagate control plane changes to control plane cluster service."}
        "503":
          application/problem+json: {"status": 503, "title": "Service Unavailable", "instance": "konnect:trace:2287285207635123011", "detail": "Could not retrieve permissions to check resource accessibility."}
  delete-control-plane:
    speakeasy-default-delete-control-plane:
      parameters:
        path:
          id: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      responses:
        "400":
          application/problem+json: {"status": 822215, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "500":
          application/problem+json: {"status": 500, "title": "Internal Server Error", "instance": "konnect:trace:2287285207635123011", "detail": "Could not propagate control plane changes to control plane cluster service."}
        "503":
          application/problem+json: {"status": 503, "title": "Service Unavailable", "instance": "konnect:trace:2287285207635123011", "detail": "Could not retrieve permissions to check resource accessibility."}
  list-config-stores:
    speakeasy-default-list-config-stores:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          page[size]: 10
          page[after]: "ewogICJpZCI6ICJoZWxsbyB3b3JsZCIKfQ"
      responses:
        "200":
          application/json: {"meta": {"page": {"next": "/boot", "previous": "/var", "size": 10}}, "data": [{"id": "b9e81174-b5bb-4638-a3c3-8afe61a0abf8", "name": "My Name", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}]}
        "400":
          application/problem+json: {"status": 506031, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max_items", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  create-config-store:
    speakeasy-default-create-config-store:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"name": "Config Store"}
      responses:
        "201":
          application/json: {"id": "b9e81174-b5bb-4638-a3c3-8afe61a0abf8", "name": "My Name", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 264937, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max_items", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>"], "source": "body"}, {"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "415":
          application/problem+json: {"status": 415, "title": "UnsupportedMediaType", "type": "https://httpstatuses.com/415", "instance": "kong:trace:1234567890", "detail": "UnsupportedMediaType"}
  get-config-store:
    speakeasy-default-get-config-store:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          configStoreId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      responses:
        "200":
          application/json: {"id": "b9e81174-b5bb-4638-a3c3-8afe61a0abf8", "name": "My Name", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  update-config-store:
    speakeasy-default-update-config-store:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          configStoreId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      requestBody:
        application/json: {"name": "Config Store"}
      responses:
        "200":
          application/json: {"id": "b9e81174-b5bb-4638-a3c3-8afe61a0abf8", "name": "My Name", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 346867, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "415":
          application/problem+json: {"status": 415, "title": "UnsupportedMediaType", "type": "https://httpstatuses.com/415", "instance": "kong:trace:1234567890", "detail": "UnsupportedMediaType"}
  delete-config-store:
    speakeasy-default-delete-config-store:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          configStoreId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
        query:
          force: "false"
      responses:
        "400":
          application/problem+json: {"status": 375383, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  create-config-store-secret:
    speakeasy-default-create-config-store-secret:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          configStoreId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      requestBody:
        application/json: {"key": "<key>", "value": "<value>"}
      responses:
        "201":
          application/json: {"created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 189970, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "415":
          application/problem+json: {"status": 415, "title": "UnsupportedMediaType", "type": "https://httpstatuses.com/415", "instance": "kong:trace:1234567890", "detail": "UnsupportedMediaType"}
  list-config-store-secrets:
    speakeasy-default-list-config-store-secrets:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          configStoreId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
        query:
          page[size]: 10
          page[after]: "ewogICJpZCI6ICJoZWxsbyB3b3JsZCIKfQ"
      responses:
        "200":
          application/json: {"meta": {"page": {"next": "/var/tmp", "previous": null, "size": 10}}, "data": [{"created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}]}
        "400":
          application/problem+json: {"status": 710250, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  get-config-store-secret:
    speakeasy-default-get-config-store-secret:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          configStoreId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
          key: "ConfigStoreSecretKey"
      responses:
        "200":
          application/json: {"created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  update-config-store-secret:
    speakeasy-default-update-config-store-secret:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          configStoreId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
          key: "ConfigStoreSecretKey"
      requestBody:
        application/json: {"value": "<value>"}
      responses:
        "200":
          application/json: {"created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 681242, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}, {"field": "name", "rule": "min", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "415":
          application/problem+json: {"status": 415, "title": "UnsupportedMediaType", "type": "https://httpstatuses.com/415", "instance": "kong:trace:1234567890", "detail": "UnsupportedMediaType"}
  delete-config-store-secret:
    speakeasy-default-delete-config-store-secret:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          configStoreId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
          key: "ConfigStoreSecretKey"
      responses:
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-acl:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}]}
        "401":
          application/json: {"message": "<value>", "status": 500789}
  get-acl:
    "":
      parameters:
        path:
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
        "401":
          application/json: {"message": "<value>", "status": 468894}
  list-acl-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}]}
  create-acl-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "201":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
  delete-acl-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
  get-acl-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
  upsert-acl-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          ACLId: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "group": "foo", "id": "b1f34145-0343-41a4-9602-4c69dec2f269"}
  list-basic-auth:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}]}
        "401":
          application/json: {"message": "<value>", "status": 101752}
  get-basic-auth:
    "":
      parameters:
        path:
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
        "401":
          application/json: {"message": "<value>", "status": 944690}
  list-basic-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}]}
  create-basic-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "201":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
  delete-basic-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
  get-basic-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
  upsert-basic-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          BasicAuthId: "80db1b58-ca7c-4d21-b92a-64eb07725872"
      requestBody:
        application/json: {"id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "password": "hashedsoopersecretvalue", "username": "darius"}
  list-ca_certificate:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}]}
        "401":
          application/json: {"message": "<value>", "status": 281078}
  create-ca_certificate:
    speakeasy-default-create-ca-certificate:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "201":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
        "401":
          application/json: {"message": "<value>", "status": 400673}
  delete-ca_certificate:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 534948}
  get-ca_certificate:
    "":
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
        "401":
          application/json: {"message": "<value>", "status": 897051}
  upsert-ca_certificate:
    "":
      parameters:
        path:
          CACertificateId: "3c31f18a-f27a-4f9b-8cd4-bf841554612f"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
      responses:
        "200":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f260"}
        "401":
          application/json: {"message": "<value>", "status": 838404}
  list-certificate:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}]}
        "401":
          application/json: {"message": "<value>", "status": 578370}
  create-certificate:
    speakeasy-default-create-certificate:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "201":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
        "401":
          application/json: {"message": "<value>", "status": 443586}
  delete-certificate:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 841627}
  get-certificate:
    "":
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
        "401":
          application/json: {"message": "<value>", "status": 769994}
  upsert-certificate:
    "":
      parameters:
        path:
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
      responses:
        "200":
          application/json: {"cert": "-----BEGIN CERTIFICATE-----\ncertificate-content\n-----END CERTIFICATE-----", "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "-----BEGIN PRIVATE KEY-----\nprivate-key-content\n-----END PRIVATE KEY-----"}
        "401":
          application/json: {"message": "<value>", "status": 501690}
  list-sni-with-certificate:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}]}
  create-sni-with-certificate:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
      requestBody:
        application/json: {"id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "201":
          application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
  delete-sni-with-certificate:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
          SNIId: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
  get-sni-with-certificate:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
          SNIId: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      responses:
        "200":
          application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
  upsert-sni-with-certificate:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          CertificateId: "ddf3cdaa-3329-4961-822a-ce6dbd38eff7"
          SNIId: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      requestBody:
        application/json: {"id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "200":
          application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
  list-sni:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}]}
        "401":
          application/json: {"message": "<value>", "status": 842632}
  create-sni:
    speakeasy-default-create-sni:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "201":
          application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
        "401":
          application/json: {"message": "<value>", "status": 538722}
  delete-sni:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          SNIId: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 880922}
  get-sni:
    "":
      parameters:
        path:
          SNIId: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
        "401":
          application/json: {"message": "<value>", "status": 464092}
  upsert-sni:
    "":
      parameters:
        path:
          SNIId: "64c17a1a-b7d7-4a65-a5a4-42e4a7016e7f"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
      responses:
        "200":
          application/json: {"certificate": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "id": "36c4566c-14cc-4132-9011-4139fcbbe50a", "name": "some.example.org"}
        "401":
          application/json: {"message": "<value>", "status": 361528}
  list-consumer_group:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {}
        "401":
          application/json: {"message": "<value>", "status": 256390}
  create-consumer_group:
    speakeasy-default-create-consumer-group:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "201":
          application/json: {"name": "<value>"}
        "401":
          application/json: {"message": "<value>", "status": 984341}
  delete-consumer_group:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerGroupId: ""
      responses:
        "401":
          application/json: {"message": "<value>", "status": 915587}
  get-consumer_group:
    "":
      parameters:
        path:
          ConsumerGroupId: ""
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {}
        "401":
          application/json: {"message": "<value>", "status": 522065}
  upsert-consumer_group:
    "":
      parameters:
        path:
          ConsumerGroupId: ""
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"name": "<value>"}
      responses:
        "200":
          application/json: {"name": "<value>"}
        "401":
          application/json: {"message": "<value>", "status": 310688}
  remove-all-consumers-from-consumer-group:
    speakeasy-default-remove-all-consumers-from-consumer-group:
      parameters:
        path:
          ConsumerGroupId: "<id>"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
  list-consumers-for-consumer-group:
    "":
      parameters:
        path:
          ConsumerGroupId: "<id>"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}]}
  add-consumer-to-group:
    speakeasy-default-add-consumer-to-group:
      parameters:
        path:
          ConsumerGroupId: "<id>"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"consumer": "cf4c7e60-11db-49dd-b300-7c7e5f0f7e6b"}
      responses:
        "201":
          application/json: {"consumers": [{"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}]}
  remove-consumer-from-group:
    speakeasy-default-remove-consumer-from-group:
      parameters:
        path:
          ConsumerGroupId: "<id>"
          ConsumerId: "<id>"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
  remove-consumer-from-all-consumer-groups:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerId: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
  list-consumer-groups-for-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerId: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {}
  add-consumer-to-specific-consumer-group:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerId: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      requestBody:
        application/json: {"group": "fedee695-2ae2-4e45-877a-776d9b2fc793"}
      responses:
        "201":
          application/json: {"consumer": {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}}
  remove-consumer-from-consumer-group:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerId: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
          ConsumerGroupId: ""
  list-plugin-with-consumer_group:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerGroupId: ""
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}]}
  create-plugin-with-consumer_group:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerGroupId: ""
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "201":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  delete-plugin-with-consumer_group:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerGroupId: ""
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
  get-plugin-with-consumer_group:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerGroupId: ""
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  upsert-plugin-with-consumer_group:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerGroupId: ""
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  list-plugin-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}]}
  create-plugin-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "201":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  delete-plugin-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
  get-plugin-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  upsert-plugin-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  list-plugin:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}]}
        "401":
          application/json: {"message": "<value>", "status": 240713}
  create-plugin:
    speakeasy-default-create-plugin:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "201":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
        "401":
          application/json: {"message": "<value>", "status": 411057}
  delete-plugin:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 228522}
  get-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
        "401":
          application/json: {"message": "<value>", "status": 939243}
  upsert-plugin:
    "":
      parameters:
        path:
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
        "401":
          application/json: {"message": "<value>", "status": 294960}
  list-plugin-with-route:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          RouteId: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}]}
  create-plugin-with-route:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          RouteId: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "201":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  delete-plugin-with-route:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          RouteId: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
  get-plugin-with-route:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          RouteId: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  upsert-plugin-with-route:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          RouteId: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  fetch-plugin-schema:
    speakeasy-default-fetch-plugin-schema:
      parameters:
        path:
          pluginName: "<value>"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {}
  list-plugin-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}]}
  create-plugin-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "201":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  delete-plugin-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
  get-plugin-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      responses:
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  upsert-plugin-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
          PluginId: "3473c251-5b6c-4f45-b1ff-7ede735a366d"
      requestBody:
        application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
      responses:
        "200":
          application/json: {"config": {"anonymous": "<value>", "hide_credentials": false, "key_in_body": false, "key_in_header": true, "key_in_query": true, "key_names": ["apikey"], "run_on_preflight": true}, "enabled": true, "id": "3fd1eea1-885a-4011-b986-289943ff8177", "name": "key-auth", "partials": [{"id": "cff1230a-00f7-4ae8-b376-c370f0eb4dae", "name": "foo-partial", "path": "config.redis"}, {"id": "129ee345-cba8-4e55-9d6d-93c223ff91ae", "name": "bar-partial", "path": "config.redis"}], "protocols": ["grpc", "grpcs", "http", "https"]}
  list-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}]}
        "401":
          application/json: {"message": "<value>", "status": 929834}
  create-consumer:
    speakeasy-default-create-consumer:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "201":
          application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
        "401":
          application/json: {"message": "<value>", "status": 728014}
  delete-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerId: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 128133}
  get-consumer:
    "":
      parameters:
        path:
          ConsumerId: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
        "401":
          application/json: {"message": "<value>", "status": 441110}
  upsert-consumer:
    "":
      parameters:
        path:
          ConsumerId: "c1059869-6fa7-4329-a5f5-5946d14ca2c5"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
      responses:
        "200":
          application/json: {"custom_id": "4200", "id": "8a388226-80e8-4027-a486-25e4f7db5d21", "tags": ["silver-tier"], "username": "bob-the-builder"}
        "401":
          application/json: {"message": "<value>", "status": 653018}
  list-hmac-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}]}
  create-hmac-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "201":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
  delete-hmac-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
  get-hmac-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
  upsert-hmac-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
      requestBody:
        application/json: {"id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
  list-hmac-auth:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}]}
        "401":
          application/json: {"message": "<value>", "status": 449721}
  get-hmac-auth:
    "":
      parameters:
        path:
          HMACAuthId: "70e7b00b-72f2-471b-a5ce-9c4171775360"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "secret": "wQazJ304DW5huJklHgUfjfiSyCyTAEDZ", "username": "xerxes"}
        "401":
          application/json: {"message": "<value>", "status": 97799}
  list-jwt-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}]}
  create-jwt-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"algorithm": "HS256", "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "201":
          application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
  delete-jwt-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
  get-jwt-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      responses:
        "200":
          application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
  upsert-jwt-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
      requestBody:
        application/json: {"algorithm": "HS256", "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
      responses:
        "200":
          application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
  list-jwt:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}]}
        "401":
          application/json: {"message": "<value>", "status": 85274}
  get-jwt:
    "":
      parameters:
        path:
          JWTId: "4a7f5faa-8c96-46d6-8214-c87573ef2ac4"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"algorithm": "HS256", "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "75695322-e8a0-4109-aed4-5416b0308d85", "key": "YJdmaDvVTJxtcWRCvkMikc8oELgAVNcz", "secret": "C50k0bcahDhLNhLKSUBSR1OMiFGzNZ7X"}
        "401":
          application/json: {"message": "<value>", "status": 328558}
  list-key-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}]}
  create-key-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "201":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
  delete-key-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          KeyAuthId: ""
  get-key-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          KeyAuthId: ""
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
  upsert-key-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          KeyAuthId: ""
      requestBody:
        application/json: {"id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
  list-key-auth:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}]}
        "401":
          application/json: {"message": "<value>", "status": 456570}
  get-key-auth:
    "":
      parameters:
        path:
          KeyAuthId: ""
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "key": "IL1deIyHyQA40WpeLeA1bIUXuvTwlGjo"}
        "401":
          application/json: {"message": "<value>", "status": 857754}
  list-mtls-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}]}
  create-mtls-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "201":
          application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
  delete-mtls-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          MTLSAuthId: ""
  get-mtls-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          MTLSAuthId: ""
      responses:
        "200":
          application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
  upsert-mtls-auth-with-consumer:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ConsumerIdForNestedEntities: "f28acbfa-c866-4587-b688-0208ac24df21"
          MTLSAuthId: ""
      requestBody:
        application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
      responses:
        "200":
          application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
  list-mtls-auth:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}]}
        "401":
          application/json: {"message": "<value>", "status": 833347}
  get-mtls-auth:
    "":
      parameters:
        path:
          MTLSAuthId: ""
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"ca_certificate": {"id": "b2f34145-0343-41a4-9602-4c69dec2f260"}, "consumer": {"id": "84a73fb8-50fc-44a7-a4d5-aa17728ee83f"}, "id": "b2f34145-0343-41a4-9602-4c69dec2f269", "subject_name": "CA_Subject_Name"}
        "401":
          application/json: {"message": "<value>", "status": 965636}
  list-custom-plugin:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"handler": "return { VERSION = '1.0,0', PRIORITY = 500, access = function(self, config) kong.service.request.set_header(config.name, config.value) end }", "id": "868346aa-1105-4b77-8346-aa1105fb77c4", "name": "set-header", "schema": "return { name = 'set-header', fields = { { protocols = require('kong.db.schema.typedefs').protocols_http }, { config = { type = 'record', fields = { { name = { description = 'The name of the header to set.', type = 'string', required = true } }, { value = { description = 'The value for the header.', type = 'string', required = true } } } } } } }"}]}
        "401":
          application/json: {"message": "<value>", "status": 593347}
  create-custom-plugin:
    speakeasy-default-create-custom-plugin:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"handler": "return { VERSION = '1.0,0', PRIORITY = 500, access = function(self, config) kong.service.request.set_header(config.name, config.value) end }", "id": "868346aa-1105-4b77-8346-aa1105fb77c4", "name": "set-header", "schema": "return { name = 'set-header', fields = { { protocols = require('kong.db.schema.typedefs').protocols_http }, { config = { type = 'record', fields = { { name = { description = 'The name of the header to set.', type = 'string', required = true } }, { value = { description = 'The value for the header.', type = 'string', required = true } } } } } } }"}
      responses:
        "201":
          application/json: {"handler": "return { VERSION = '1.0,0', PRIORITY = 500, access = function(self, config) kong.service.request.set_header(config.name, config.value) end }", "id": "868346aa-1105-4b77-8346-aa1105fb77c4", "name": "set-header", "schema": "return { name = 'set-header', fields = { { protocols = require('kong.db.schema.typedefs').protocols_http }, { config = { type = 'record', fields = { { name = { description = 'The name of the header to set.', type = 'string', required = true } }, { value = { description = 'The value for the header.', type = 'string', required = true } } } } } } }"}
        "401":
          application/json: {"message": "<value>", "status": 643329}
  delete-custom-plugin:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          CustomPluginId: ""
      responses:
        "401":
          application/json: {"message": "<value>", "status": 907684}
  get-custom-plugin:
    "":
      parameters:
        path:
          CustomPluginId: ""
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"handler": "return { VERSION = '1.0,0', PRIORITY = 500, access = function(self, config) kong.service.request.set_header(config.name, config.value) end }", "id": "868346aa-1105-4b77-8346-aa1105fb77c4", "name": "set-header", "schema": "return { name = 'set-header', fields = { { protocols = require('kong.db.schema.typedefs').protocols_http }, { config = { type = 'record', fields = { { name = { description = 'The name of the header to set.', type = 'string', required = true } }, { value = { description = 'The value for the header.', type = 'string', required = true } } } } } } }"}
        "401":
          application/json: {"message": "<value>", "status": 233734}
  upsert-custom-plugin:
    "":
      parameters:
        path:
          CustomPluginId: ""
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"handler": "return { VERSION = '1.0,0', PRIORITY = 500, access = function(self, config) kong.service.request.set_header(config.name, config.value) end }", "id": "868346aa-1105-4b77-8346-aa1105fb77c4", "name": "set-header", "schema": "return { name = 'set-header', fields = { { protocols = require('kong.db.schema.typedefs').protocols_http }, { config = { type = 'record', fields = { { name = { description = 'The name of the header to set.', type = 'string', required = true } }, { value = { description = 'The value for the header.', type = 'string', required = true } } } } } } }"}
      responses:
        "200":
          application/json: {"handler": "return { VERSION = '1.0,0', PRIORITY = 500, access = function(self, config) kong.service.request.set_header(config.name, config.value) end }", "id": "868346aa-1105-4b77-8346-aa1105fb77c4", "name": "set-header", "schema": "return { name = 'set-header', fields = { { protocols = require('kong.db.schema.typedefs').protocols_http }, { config = { type = 'record', fields = { { name = { description = 'The name of the header to set.', type = 'string', required = true } }, { value = { description = 'The value for the header.', type = 'string', required = true } } } } } } }"}
        "401":
          application/json: {"message": "<value>", "status": 408156}
  list-degraphql_route:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "query": "query{ user { email } }", "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "uri": "/users"}]}
        "401":
          application/json: {"message": "<value>", "status": 278214}
  get-degraphql_route:
    "":
      parameters:
        path:
          Degraphql_routeId: ""
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "query": "query{ user { email } }", "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "uri": "/users"}
        "401":
          application/json: {"message": "<value>", "status": 588326}
  list-degraphql_route-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "query": "query{ user { email } }", "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "uri": "/users"}]}
  create-degraphql_route-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      requestBody:
        application/json: {"id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "query": "query{ user { email } }", "uri": "/users"}
      responses:
        "201":
          application/json: {"id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "query": "query{ user { email } }", "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "uri": "/users"}
  delete-degraphql_route-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
          Degraphql_routeId: ""
  get-degraphql_route-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
          Degraphql_routeId: ""
      responses:
        "200":
          application/json: {"id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "query": "query{ user { email } }", "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "uri": "/users"}
  upsert-degraphql_route-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
          Degraphql_routeId: ""
      requestBody:
        application/json: {"id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "query": "query{ user { email } }", "uri": "/users"}
      responses:
        "200":
          application/json: {"id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "query": "query{ user { email } }", "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}, "uri": "/users"}
  list-key-set:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}]}
        "401":
          application/json: {"message": "<value>", "status": 364189}
  create-key-set:
    speakeasy-default-create-key-set:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "201":
          application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
        "401":
          application/json: {"message": "<value>", "status": 179106}
  delete-key-set:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          KeySetId: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 925820}
  get-key-set:
    "":
      parameters:
        path:
          KeySetId: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
        "401":
          application/json: {"message": "<value>", "status": 260853}
  upsert-key-set:
    "":
      parameters:
        path:
          KeySetId: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
      responses:
        "200":
          application/json: {"id": "b58c7d9d-e54f-444c-b24d-cdfc4159f61e", "name": "example-key-set", "tags": ["idp-keys"]}
        "401":
          application/json: {"message": "<value>", "status": 792318}
  list-key-with-key-set:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          KeySetId: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}]}
  create-key-with-key-set:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          KeySetId: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "201":
          application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
  delete-key-with-key-set:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          KeySetId: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
          KeyId: "bba22c06-a632-42be-a018-1b9ff357b5b9"
  get-key-with-key-set:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          KeySetId: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
          KeyId: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      responses:
        "200":
          application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
  upsert-key-with-key-set:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          KeySetId: "6cc34248-50b4-4a81-9201-3bdf7a83f712"
          KeyId: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "200":
          application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
  list-key:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}]}
        "401":
          application/json: {"message": "<value>", "status": 316138}
  create-key:
    speakeasy-default-create-key:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "201":
          application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
        "401":
          application/json: {"message": "<value>", "status": 303922}
  delete-key:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          KeyId: "bba22c06-a632-42be-a018-1b9ff357b5b9"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 803172}
  get-key:
    "":
      parameters:
        path:
          KeyId: "bba22c06-a632-42be-a018-1b9ff357b5b9"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
        "401":
          application/json: {"message": "<value>", "status": 647780}
  upsert-key:
    "":
      parameters:
        path:
          KeyId: "bba22c06-a632-42be-a018-1b9ff357b5b9"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
      responses:
        "200":
          application/json: {"id": "d958f66b-8e99-44d2-b0b4-edd5bbf24658", "jwk": "{\"alg\":\"RSA\",  \"kid\": \"42\",  ...}", "kid": "42", "name": "a-key", "pem": {"private_key": "-----BEGIN", "public_key": "-----BEGIN"}, "set": {"id": "b86b331c-dcd0-4b3e-97ce-47c5a9543031"}}
        "401":
          application/json: {"message": "<value>", "status": 849792}
  list-partial:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {}
        "401":
          application/json: {"message": "<value>", "status": 707684}
  create-partial:
    speakeasy-default-create-partial:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"config": {"key": "<value>"}, "type": "<value>"}
      responses:
        "201":
          application/json: {"config": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "type": "<value>"}
        "401":
          application/json: {"message": "<value>", "status": 415811}
  delete-partial:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          PartialId: ""
      responses:
        "401":
          application/json: {"message": "<value>", "status": 63304}
  get-partial:
    "":
      parameters:
        path:
          PartialId: ""
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"config": {"key": "<value>", "key1": "<value>"}, "type": "<value>"}
        "401":
          application/json: {"message": "<value>", "status": 629733}
  upsert-partial:
    "":
      parameters:
        path:
          PartialId: ""
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"config": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "type": "<value>"}
      responses:
        "200":
          application/json: {"config": {}, "type": "<value>"}
        "401":
          application/json: {"message": "<value>", "status": 445128}
  list-partial-link:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          PartialId: ""
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"count": 10}
  list-plugin-schemas:
    speakeasy-default-list-plugin-schemas:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          page[size]: 10
          page[after]: "ewogICJpZCI6ICJoZWxsbyB3b3JsZCIKfQ"
      responses:
        "200":
          application/json: {"items": [{"lua_schema": "return { name = \\\"myplugin\\\", fields = { { config = { type = \\\"record\\\", fields = { } } } } }", "name": "myplugin", "created_at": 1422386534, "updated_at": 1422412345}]}
        "400":
          application/problem+json: {"status": 565971, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max_length", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>"], "source": "body"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  create-plugin-schemas:
    speakeasy-default-create-plugin-schemas:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"lua_schema": "return { name = \\\"myplugin\\\", fields = { { config = { type = \\\"record\\\", fields = { } } } } }"}
      responses:
        "201":
          application/json: {"item": {"lua_schema": "return { name = \\\"myplugin\\\", fields = { { config = { type = \\\"record\\\", fields = { } } } } }", "name": "myplugin", "created_at": 1422386534, "updated_at": 1422412345}}
        "400":
          application/problem+json: {"status": 625309, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  get-plugin-schema:
    speakeasy-default-get-plugin-schema:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          name: "myplugin"
      responses:
        "200":
          application/json: {"item": {"lua_schema": "return { name = \\\"myplugin\\\", fields = { { config = { type = \\\"record\\\", fields = { } } } } }", "name": "myplugin", "created_at": 1422386534, "updated_at": 1422412345}}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  delete-plugin-schemas:
    speakeasy-default-delete-plugin-schemas:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          name: "myplugin"
      responses:
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  update-plugin-schemas:
    speakeasy-default-update-plugin-schemas:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          name: "myplugin"
      requestBody:
        application/json: {"lua_schema": "return { name = \\\"myplugin\\\", fields = { { config = { type = \\\"record\\\", fields = { } } } } }"}
      responses:
        "200":
          application/json: {"item": {"lua_schema": "return { name = \\\"myplugin\\\", fields = { { config = { type = \\\"record\\\", fields = { } } } } }", "name": "myplugin", "created_at": 1422386534, "updated_at": 1422412345}}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-route:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}, {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}, {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}]}
        "401":
          application/json: {"message": "<value>", "status": 9867}
  create-route:
    speakeasy-default-create-route:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "201":
          application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
        "401":
          application/json: {"message": "<value>", "status": 624141}
  delete-route:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          RouteId: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 665842}
  get-route:
    "":
      parameters:
        path:
          RouteId: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
        "401":
          application/json: {"message": "<value>", "status": 591882}
  upsert-route:
    "":
      parameters:
        path:
          RouteId: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "200":
          application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
        "401":
          application/json: {"message": "<value>", "status": 535322}
  list-route-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}, {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}]}
  create-route-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "201":
          application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
  delete-route-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
          RouteId: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
  get-route-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
          RouteId: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      responses:
        "200":
          application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
  upsert-route-with-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
          RouteId: "a4326a41-aa12-44e3-93e4-6b6e58bfb9d7"
      requestBody:
        application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
      responses:
        "200":
          application/json: {"hosts": ["foo.example.com", "foo.example.us"], "id": "56c4566c-14cc-4132-9011-4139fcbbe50a", "name": "example-route", "paths": ["/v1", "/v2"], "service": {"id": "bd380f99-659d-415e-b0e7-72ea05df3218"}}
  list-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}]}
        "401":
          application/json: {"message": "<value>", "status": 460889}
  create-service:
    speakeasy-default-create-service:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "201":
          application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
        "401":
          application/json: {"message": "<value>", "status": 242951}
  delete-service:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 748444}
  get-service:
    "":
      parameters:
        path:
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
        "401":
          application/json: {"message": "<value>", "status": 416010}
  upsert-service:
    "":
      parameters:
        path:
          ServiceId: "7fca84d6-7d37-4a74-a7b0-93e576089a41"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
      responses:
        "200":
          application/json: {"host": "example.internal", "id": "49fd316e-c457-481c-9fc7-8079153e4f3c", "name": "example-service", "path": "/", "port": 80, "protocol": "http"}
        "401":
          application/json: {"message": "<value>", "status": 715531}
  list-upstream:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}]}
        "401":
          application/json: {"message": "<value>", "status": 235016}
  create-upstream:
    speakeasy-default-create-upstream:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "201":
          application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
        "401":
          application/json: {"message": "<value>", "status": 876380}
  delete-upstream:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          UpstreamId: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 561527}
  get-upstream:
    "":
      parameters:
        path:
          UpstreamId: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
        "401":
          application/json: {"message": "<value>", "status": 768603}
  upsert-upstream:
    "":
      parameters:
        path:
          UpstreamId: "426d620c-7058-4ae6-aacc-f85a3204a2c5"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
      responses:
        "200":
          application/json: {"algorithm": "round-robin", "hash_fallback": "none", "hash_on": "none", "hash_on_cookie_path": "/", "healthchecks": {"active": {"concurrency": 10, "healthy": {"http_statuses": [200, 302], "interval": 0, "successes": 0}, "http_path": "/", "https_verify_certificate": true, "timeout": 1, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 404, 500, 501, 502, 503, 504, 505], "interval": 0, "tcp_failures": 0, "timeouts": 0}}, "passive": {"healthy": {"http_statuses": [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308], "successes": 0}, "type": "http", "unhealthy": {"http_failures": 0, "http_statuses": [429, 500, 503], "tcp_failures": 0, "timeouts": 0}}, "threshold": 0}, "id": "6eed5e9c-5398-4026-9a4c-d48f18a2431e", "name": "api.example.internal", "slots": 10000}
        "401":
          application/json: {"message": "<value>", "status": 414556}
  list-target-with-upstream:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          UpstreamIdForTarget: "5a078780-5d4c-4aae-984a-bdc6f52113d8"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"id": "089292a7-ba3d-4d88-acf0-97b4b2e2621a", "target": "203.0.113.42", "upstream": {"id": "5f1d7e76-2fed-4806-a6af-869984f025cb"}, "weight": 100}]}
  create-target-with-upstream:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          UpstreamIdForTarget: "5a078780-5d4c-4aae-984a-bdc6f52113d8"
      requestBody:
        application/json: {"id": "089292a7-ba3d-4d88-acf0-97b4b2e2621a", "target": "203.0.113.42", "weight": 100}
      responses:
        "201":
          application/json: {"id": "089292a7-ba3d-4d88-acf0-97b4b2e2621a", "target": "203.0.113.42", "upstream": {"id": "5f1d7e76-2fed-4806-a6af-869984f025cb"}, "weight": 100}
  delete-target-with-upstream:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          UpstreamIdForTarget: "5a078780-5d4c-4aae-984a-bdc6f52113d8"
          TargetId: "5a078780-5d4c-4aae-984a-bdc6f52113d8"
  get-target-with-upstream:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          UpstreamIdForTarget: "5a078780-5d4c-4aae-984a-bdc6f52113d8"
          TargetId: "5a078780-5d4c-4aae-984a-bdc6f52113d8"
      responses:
        "200":
          application/json: {"id": "089292a7-ba3d-4d88-acf0-97b4b2e2621a", "target": "203.0.113.42", "upstream": {"id": "5f1d7e76-2fed-4806-a6af-869984f025cb"}, "weight": 100}
  upsert-target-with-upstream:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          UpstreamIdForTarget: "5a078780-5d4c-4aae-984a-bdc6f52113d8"
          TargetId: "5a078780-5d4c-4aae-984a-bdc6f52113d8"
      requestBody:
        application/json: {"id": "089292a7-ba3d-4d88-acf0-97b4b2e2621a", "target": "203.0.113.42", "weight": 100}
      responses:
        "200":
          application/json: {"id": "089292a7-ba3d-4d88-acf0-97b4b2e2621a", "target": "203.0.113.42", "upstream": {"id": "5f1d7e76-2fed-4806-a6af-869984f025cb"}, "weight": 100}
  list-vault:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {"data": [{"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}]}
        "401":
          application/json: {"message": "<value>", "status": 957540}
  create-vault:
    speakeasy-default-create-vault:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "201":
          application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
        "401":
          application/json: {"message": "<value>", "status": 74897}
  delete-vault:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          VaultId: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
      responses:
        "401":
          application/json: {"message": "<value>", "status": 74301}
  get-vault:
    "":
      parameters:
        path:
          VaultId: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
        "401":
          application/json: {"message": "<value>", "status": 357221}
  upsert-vault:
    "":
      parameters:
        path:
          VaultId: "9d4d6d19-77c6-428e-a965-9bc9647633e9"
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      requestBody:
        application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
      responses:
        "200":
          application/json: {"config": {"prefix": "ENV_PREFIX"}, "description": "environment variable based vault", "id": "2747d1e5-8246-4f65-a939-b392f1ee17f8", "name": "env", "prefix": "env", "tags": ["foo", "bar"]}
        "401":
          application/json: {"message": "<value>", "status": 808712}
  list-dp-client-certificates:
    speakeasy-default-list-dp-client-certificates:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {}
  create-dataplane-certificate:
    speakeasy-default-create-dataplane-certificate:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "201":
          application/json: {}
  get-dataplane-certificate:
    speakeasy-default-get-dataplane-certificate:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          certificateId: "<id>"
      responses:
        "200":
          application/json: {}
  delete-dataplane-certificate:
    speakeasy-default-delete-dataplane-certificate:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          certificateId: "<id>"
  get-expected-config-hash:
    speakeasy-default-get-expected-config-hash:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
      responses:
        "200":
          application/json: {"expected_hash": "<value>", "created_at": 551591, "updated_at": 32511}
  list-dataplane-nodes:
    speakeasy-default-list-dataplane-nodes:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          page[size]: 10
          page[after]: "ewogICJpZCI6ICJoZWxsbyB3b3JsZCIKfQ"
      responses:
        "200":
          application/json: {}
  get-nodes-node_id:
    "":
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          nodeId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
        query:
          size: 100
          tags: "tag1,tag2"
      responses:
        "200":
          application/json: {}
  delete-nodes-node_id:
    speakeasy-default-delete-nodes-node-id:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
          nodeId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
  get-nodes-eol:
    speakeasy-default-get-nodes-eol:
      parameters:
        path:
          controlPlaneId: "9524ec7d-36d9-465d-a8c5-83a3c9390458"
        query:
          page[size]: 10
          page[after]: "ewogICJpZCI6ICJoZWxsbyB3b3JsZCIKfQ"
      responses:
        "200":
          application/json: {}
  get-control-planes-id-group-member-status:
    speakeasy-default-get-control-planes-id-group-member-status:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"is_member": true}
        "400":
          application/problem+json: {"status": 60817, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max_items", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "min_symbols", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "500":
          application/problem+json: {"status": 942081, "title": "<value>", "instance": "<value>", "detail": "<value>"}
        "503":
          application/problem+json: {"status": 503, "title": "Service Unavailable", "instance": "konnect:trace:2287285207635123011", "detail": "Could not retrieve permissions to check resource accessibility."}
  get-control-planes-id-group-memberships:
    speakeasy-default-get-control-planes-id-group-memberships:
      parameters:
        path:
          id: "<id>"
        query:
          page[size]: 10
          page[after]: "ewogICJpZCI6ICJoZWxsbyB3b3JsZCIKfQ"
      responses:
        "200":
          application/json: {"meta": {"page": {"next": "/usr/bin", "size": 10, "total": 974}}, "data": [{"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "Test Control Plane", "description": "A test control plane for exploration.", "labels": {"env": "test"}, "config": {"control_plane_endpoint": "https://acfe5f253f.cp0.konghq.com", "telemetry_endpoint": "https://acfe5f253f.tp0.konghq.com", "cluster_type": "CLUSTER_TYPE_CONTROL_PLANE", "auth_type": "pinned_client_certs", "cloud_gateway": false, "proxy_urls": [{"host": "example.com", "port": 443, "protocol": "https"}]}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}]}
        "400":
          application/problem+json: {"status": 497473, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "500":
          application/problem+json: {"status": 709384, "title": "<value>", "instance": "<value>", "detail": "<value>"}
        "503":
          application/problem+json: {"status": 503, "title": "Service Unavailable", "instance": "konnect:trace:2287285207635123011", "detail": "Could not retrieve permissions to check resource accessibility."}
  put-control-planes-id-group-memberships:
    speakeasy-default-put-control-planes-id-group-memberships:
      parameters:
        path:
          id: "<id>"
      responses:
        "400":
          application/problem+json: {"status": 553029, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "min_symbols", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "500":
          application/problem+json: {"status": 7657, "title": "<value>", "instance": "<value>", "detail": "<value>"}
        "503":
          application/problem+json: {"status": 503, "title": "Service Unavailable", "instance": "konnect:trace:2287285207635123011", "detail": "Could not retrieve permissions to check resource accessibility."}
  post-control-planes-id-group-memberships-add:
    speakeasy-default-post-control-planes-id-group-memberships-add:
      parameters:
        path:
          id: "<id>"
      responses:
        "400":
          application/problem+json: {"status": 247595, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": null, "reason": "is a required field", "dependents": [], "source": "body"}, {"field": "name", "rule": null, "reason": "is a required field", "dependents": [], "source": "body"}, {"field": "name", "rule": "min_lowercase", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "500":
          application/problem+json: {"status": 337967, "title": "<value>", "instance": "<value>", "detail": "<value>"}
        "503":
          application/problem+json: {"status": 503, "title": "Service Unavailable", "instance": "konnect:trace:2287285207635123011", "detail": "Could not retrieve permissions to check resource accessibility."}
  post-control-planes-id-group-memberships-remove:
    speakeasy-default-post-control-planes-id-group-memberships-remove:
      parameters:
        path:
          id: "<id>"
      responses:
        "400":
          application/problem+json: {"status": 10031, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "max", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "max", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "500":
          application/problem+json: {"status": 729645, "title": "<value>", "instance": "<value>", "detail": "<value>"}
        "503":
          application/problem+json: {"status": 503, "title": "Service Unavailable", "instance": "konnect:trace:2287285207635123011", "detail": "Could not retrieve permissions to check resource accessibility."}
  get-control-planes-id-group-status:
    speakeasy-default-get-control-planes-id-group-status:
      parameters:
        path:
          id: "<id>"
      responses:
        "200":
          application/json: {"item": {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z", "conflicts": [{"cluster_id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "description": "conflicting entity found: ID=38d790ad-8b08-4ff5-a074-2e1e9e64d8bd, Name=foo", "resource": {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "type": "service"}}, {"cluster_id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "description": "conflicting entity found: ID=38d790ad-8b08-4ff5-a074-2e1e9e64d8bd, Name=foo", "resource": {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "type": "service"}}, {"cluster_id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "description": "conflicting entity found: ID=38d790ad-8b08-4ff5-a074-2e1e9e64d8bd, Name=foo", "resource": {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "type": "service"}}], "state": "CONFLICT"}}
        "400":
          application/problem+json: {"status": 780121, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "500":
          application/problem+json: {"status": 683610, "title": "<value>", "instance": "<value>", "detail": "<value>"}
        "503":
          application/problem+json: {"status": 503, "title": "Service Unavailable", "instance": "konnect:trace:2287285207635123011", "detail": "Could not retrieve permissions to check resource accessibility."}
  authenticate-sso:
    speakeasy-default-authenticate-sso:
      parameters:
        path:
          organizationLoginPath: "<value>"
      responses:
        "400":
          application/problem+json: {"status": 324778, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
  get-authentication-settings:
    speakeasy-default-get-authentication-settings:
      responses:
        "200":
          application/json: {"basic_auth_enabled": true, "oidc_auth_enabled": false, "saml_auth_enabled": false, "idp_mapping_enabled": true, "konnect_mapping_enabled": false}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
  update-authentication-settings:
    speakeasy-default-update-authentication-settings:
      requestBody:
        application/json: {"basic_auth_enabled": true, "oidc_auth_enabled": false, "saml_auth_enabled": false, "idp_mapping_enabled": true, "konnect_mapping_enabled": false}
      responses:
        "200":
          application/json: {"basic_auth_enabled": true, "oidc_auth_enabled": false, "saml_auth_enabled": false, "idp_mapping_enabled": true, "konnect_mapping_enabled": false}
        "400":
          application/problem+json: {"status": 39407, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}, {"field": "name", "source": "body", "reason": "is a required field"}, {"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>", "<value 2>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
  get-idp-configuration:
    speakeasy-default-get-idp-configuration:
      responses:
        "200":
          application/json: {"issuer": "https://myidp.com/oauth2", "login_path": "myapp", "client_id": "YOUR_CLIENT_ID", "claim_mappings": {"name": "name", "email": "email", "groups": "custom-groups-claim"}}
        "400":
          application/problem+json: {"status": 955803, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  update-idp-configuration:
    speakeasy-default-update-idp-configuration:
      requestBody:
        application/json: {"issuer": "https://myidp.com/oauth2", "login_path": "myapp", "client_id": "YOUR_CLIENT_ID", "client_secret": "YOUR_CLIENT_SECRET", "claim_mappings": {"name": "name", "email": "email", "groups": "custom-group-claim"}}
      responses:
        "200":
          application/json: {"issuer": "https://myidp.com/oauth2", "login_path": "myapp", "client_id": "YOUR_CLIENT_ID", "claim_mappings": {"name": "name", "email": "email", "groups": "custom-groups-claim"}}
        "400":
          application/problem+json: {"status": 180810, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
  get-team-group-mappings:
    speakeasy-default-get-team-group-mappings:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"team_id": "6801e673-cc10-498a-94cd-4271de07a0d3", "groups": ["Tech Leads", "API Engineers"]}]}
        "400":
          application/problem+json: {"status": 984447, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": [], "source": "body"}, {"field": "name", "rule": "min_symbols", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  patch-team-group-mappings:
    speakeasy-default-patch-team-group-mappings:
      requestBody:
        application/json: {"data": [{}]}
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"team_id": "6801e673-cc10-498a-94cd-4271de07a0d3", "groups": ["Tech Leads", "API Engineers"]}]}
        "400":
          application/problem+json: {"status": 948523, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "min_uppercase", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  update-idp-team-mappings:
    speakeasy-default-update-idp-team-mappings:
      requestBody:
        application/json: {"mappings": [{"group": "Service Developers", "team_ids": ["af91db4c-6e51-403e-a2bf-33d27ae50c0a"]}]}
      responses:
        "200":
          application/json: {"data": [{"group": "Service Developers", "team_ids": ["6801e673-cc10-498a-94cd-4271de07a0d3"]}]}
        "400":
          application/problem+json: {"status": 197244, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "412":
          application/problem+json: {"status": 412, "title": "Precondition Failed", "instance": "konnect:trace:1896611024257578096", "detail": "IdP configuration not found"}
  get-idp-team-mappings:
    speakeasy-default-get-idp-team-mappings:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 9, "total": 5}}, "data": [{"group": "111(@&*$)(@*#_@(gfds re gdsf dfg", "team_ids": ["3df49db8-39ff-490d-9fe1-251a3361fb13"]}, {"group": "111(@&*$)(@*#_@(gfds re gdsf dfg", "team_ids": ["3df49db8-39ff-490d-9fe1-251a3361fb13"]}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "412":
          application/problem+json: {"status": 412, "title": "Precondition Failed", "instance": "konnect:trace:1896611024257578096", "detail": "IdP configuration not found"}
  get-identity-providers:
    speakeasy-default-get-identity-providers:
      responses:
        "200":
          application/json: [{"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "type": "oidc", "enabled": true, "login_path": "myapp", "config": {"idp_metadata_url": "https://mocksaml.com/api/saml/metadata", "idp_metadata_xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<EntityDescriptor xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\">\n  <!-- SAML metadata content here -->\n</EntityDescriptor>\n", "sp_metadata_url": "https://cloud.konghq.com/v2/authenticate/the-saml-konnect-org/saml/metadata", "sp_entity_id": "https://cloud.konghq.com/sp/00000000-0000-0000-0000-000000000000", "login_url": "https://cloud.konghq.com/login/the-saml-konnect-org", "callback_url": "https://cloud.konghq.com/v2/authenticate/the-saml-konnect-org/saml/acs"}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}]
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  create-identity-provider:
    speakeasy-default-create-identity-provider:
      requestBody:
        application/json: {"type": "oidc", "login_path": "myapp", "config": {"idp_metadata_url": "https://mocksaml.com/api/saml/metadata", "idp_metadata_xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<EntityDescriptor xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\">\n  <!-- SAML metadata content here -->\n</EntityDescriptor>\n"}}
      responses:
        "201":
          application/json: {"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "type": "oidc", "enabled": true, "login_path": "myapp", "config": {"issuer_url": "https://konghq.okta.com/oauth2/default", "client_id": "YOUR_CLIENT_ID", "claim_mappings": {"name": "name", "email": "email", "groups": "groups"}}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 824534, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>"], "source": "body"}, {"field": "name", "rule": "min_lowercase", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  get-identity-provider:
    speakeasy-default-get-identity-provider:
      parameters:
        path:
          id: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      responses:
        "200":
          application/json: {"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "type": "oidc", "enabled": true, "login_path": "myapp", "config": {"idp_metadata_url": "https://mocksaml.com/api/saml/metadata", "idp_metadata_xml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<EntityDescriptor xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\">\n  <!-- SAML metadata content here -->\n</EntityDescriptor>\n", "sp_metadata_url": "https://cloud.konghq.com/v2/authenticate/the-saml-konnect-org/saml/metadata", "sp_entity_id": "https://cloud.konghq.com/sp/00000000-0000-0000-0000-000000000000", "login_url": "https://cloud.konghq.com/login/the-saml-konnect-org", "callback_url": "https://cloud.konghq.com/v2/authenticate/the-saml-konnect-org/saml/acs"}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 381490, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  update-identity-provider:
    speakeasy-default-update-identity-provider:
      parameters:
        path:
          id: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      requestBody:
        application/json: {"enabled": true, "login_path": "myapp", "config": {"issuer_url": "https://konghq.okta.com/oauth2/default", "client_id": "YOUR_CLIENT_ID", "client_secret": "YOUR_CLIENT_SECRET", "claim_mappings": {"name": "name", "email": "email", "groups": "groups"}}}
      responses:
        "200":
          application/json: {"id": "5f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "type": "oidc", "enabled": true, "login_path": "myapp", "config": {"issuer_url": "https://konghq.okta.com/oauth2/default", "client_id": "YOUR_CLIENT_ID", "claim_mappings": {"name": "name", "email": "email", "groups": "groups"}}, "created_at": "2022-11-04T20:10:06.927Z", "updated_at": "2022-11-04T20:10:06.927Z"}
        "400":
          application/problem+json: {"status": 67521, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": [], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  delete-identity-provider:
    speakeasy-default-delete-identity-provider:
      parameters:
        path:
          id: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      responses:
        "400":
          application/problem+json: {"status": 187769, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": [], "source": "body"}, {"field": "name", "rule": "max_length", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "max_length", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  invite-user:
    speakeasy-default-invite-user:
      requestBody:
        application/json: {"email": "james.c.woods@example.com"}
      responses:
        "400":
          application/problem+json: {"status": 789933, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max_items", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
        "429":
          application/problem+json: {"status": 429, "title": "Rate Limited", "instance": "konnect:trace:3674017986744198214", "detail": "Too many requests"}
  get-impersonation-settings:
    speakeasy-default-get-impersonation-settings:
      responses:
        "200":
          application/json: {"enabled": true}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  update-impersonation-settings:
    speakeasy-default-update-impersonation-settings:
      requestBody:
        application/json: {"enabled": true}
      responses:
        "200":
          application/json: {"enabled": true}
        "400":
          application/problem+json: {"status": 59097, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>"], "source": "body"}, {"field": "name", "rule": "min_uppercase", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  get-organizations-me:
    speakeasy-default-get-organizations-me:
      responses:
        "200":
          application/json: {"id": "d99c041a-c7cf-46a2-bf3a-44bb5f75400e", "name": "string", "owner_id": "1c9c3848-5897-4f2c-beed-df6f3e3adb37", "created_at": "2023-01-23T17:22:52.150Z", "updated_at": "2023-01-23T17:22:52.150Z", "state": "active", "retention_period_days": 90}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
  get-users-me:
    speakeasy-default-get-users-me:
      responses:
        "200":
          application/json: {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "email": "user@email.com", "full_name": "Test User", "preferred_name": "test", "active": true, "inferred_region": "us", "created_at": "2022-02-07T17:46:57.52Z", "updated_at": "2022-10-08T17:00:00.52Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
  get-predefined-roles:
    speakeasy-default-get-predefined-roles:
      responses:
        "200":
          application/json: {"control_planes": {"name": "Control Planes", "roles": {"admin": {"name": "Admin", "description": "This role grants full write access to all entities within a control plane."}, "certificate_admin": {"name": "Certificate Admin", "description": "This role grants full write access to administer certificates."}, "consumer_admin": {"name": "Consumer Admin", "description": "This role grants full write access to administer consumers."}, "creator": {"name": "Creator", "description": "Creates a new Control Plane in an organization. The creator becomes the owner of the Control Plane they create."}, "deployer": {"name": "Deployer", "description": "This role grants full write access to administer services, routes and plugins necessary to deploy services in Service Hub."}, "gateway_service_admin": {"name": "Gateway Service Admin", "description": "This role grants full write access to administer gateway services."}, "plugin_admin": {"name": "Plugin Admin", "description": "This role grants full write access to administer plugins."}, "route_admin": {"name": "Route Admin", "description": "This role grants full write access to administer routes."}, "sni_admin": {"name": "SNI Admin", "description": "This role grants full write access to administer SNIs."}, "upstream_admin": {"name": "Upstream Admin", "description": "This role grants full write access to administer upstreams."}, "viewer": {"name": "Viewer", "description": "This role grants read only access to all entities within a control plane."}}}, "api_products": {"name": "API Products", "roles": {"admin": {"name": "Admin", "description": "This role grants full write access to an API product and its versions."}, "application_registration": {"name": "Application Registration", "description": "This role grants permission to enable and disable application registration on an API product."}, "creator": {"name": "Creator", "description": "This access is required to create API products. This access is not for creating sub-entities such as versions, API specs, etc."}, "deployer": {"name": "Deployer", "description": "This role grants permission to deploy and remove an API product from a control plane."}, "maintainer": {"name": "Maintainer", "description": "This role grants all write permission to manage an API product and to administer plugins."}, "plugins_admin": {"name": "Plugins Admin", "description": "This role grants full write permission to administer plugins."}, "publisher": {"name": "Publisher", "description": "This role grants permission to publish an API product to one or more portals."}, "viewer": {"name": "Viewer", "description": "Viewer has read-only access to an API product and its sub-entities."}}}, "audit_logs": {"name": "Audit Logs", "roles": {"admin": {"name": "Admin", "description": "This role grants full write access to the Audit log configuration."}}}, "identity": {"name": "Identity", "roles": {"admin": {"name": "Admin", "description": "This role grants full write access to the Identity configuration."}}}, "mesh_control_planes": {"name": "Mesh Control Plane", "roles": {"admin": {"name": "Admin", "description": "This role grants full write access to the related to Mesh control planes."}, "connector": {"name": "Connector", "description": "This role grants a mesh zone to connect to the mesh control plane in Konnect."}, "creator": {"name": "Creator", "description": "This role grants access to create new Mesh control planes."}, "viewer": {"name": "Viewer", "description": "This role grants access to read-only permissions to Mesh control planes."}}}}
        "400":
          application/problem+json: {"status": 232000, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "min_uppercase", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
  list-team-roles:
    speakeasy-default-list-team-roles:
      parameters:
        path:
          teamId: "e81bc3e5-e9db-4764-b7dd-e81e39072cbe"
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "54cc6168-ebb1-4300-8168-d62a0dd08fc8", "role_name": "Viewer", "entity_id": "18ee2573-dec0-4b83-be99-fa7700bcdc61", "entity_type_name": "Control Planes", "entity_region": "us"}]}
        "400":
          application/problem+json: {"status": 594420, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  teams-assign-role:
    speakeasy-default-teams-assign-role:
      parameters:
        path:
          teamId: "e81bc3e5-e9db-4764-b7dd-e81e39072cbe"
      requestBody:
        application/json: {"role_name": "Viewer", "entity_id": "e67490ce-44dc-4cbd-b65e-b52c746fc26a", "entity_type_name": "Control Planes", "entity_region": "eu"}
      responses:
        "201":
          application/json: {"id": "54cc6168-ebb1-4300-8168-d62a0dd08fc8", "role_name": "Viewer", "entity_id": "18ee2573-dec0-4b83-be99-fa7700bcdc61", "entity_type_name": "Control Planes", "entity_region": "us"}
        "400":
          application/problem+json: {"status": 477856, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  teams-remove-role:
    speakeasy-default-teams-remove-role:
      parameters:
        path:
          teamId: "e81bc3e5-e9db-4764-b7dd-e81e39072cbe"
          roleId: "8350205f-a305-4e39-abe9-bc082a80091a"
      responses:
        "400":
          application/problem+json: {"status": 229293, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-user-roles:
    speakeasy-default-list-user-roles:
      parameters:
        path:
          userId: "e81bc3e5-e9db-4764-b7dd-e81e39072cbe"
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "54cc6168-ebb1-4300-8168-d62a0dd08fc8", "role_name": "Viewer", "entity_id": "18ee2573-dec0-4b83-be99-fa7700bcdc61", "entity_type_name": "Control Planes", "entity_region": "us"}]}
        "400":
          application/problem+json: {"status": 202753, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  users-assign-role:
    speakeasy-default-users-assign-role:
      parameters:
        path:
          userId: "e81bc3e5-e9db-4764-b7dd-e81e39072cbe"
      requestBody:
        application/json: {"role_name": "Viewer", "entity_id": "e67490ce-44dc-4cbd-b65e-b52c746fc26a", "entity_type_name": "Control Planes", "entity_region": "eu"}
      responses:
        "201":
          application/json: {"id": "54cc6168-ebb1-4300-8168-d62a0dd08fc8", "role_name": "Viewer", "entity_id": "18ee2573-dec0-4b83-be99-fa7700bcdc61", "entity_type_name": "Control Planes", "entity_region": "us"}
        "400":
          application/problem+json: {"status": 89532, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  users-remove-role:
    speakeasy-default-users-remove-role:
      parameters:
        path:
          userId: "e81bc3e5-e9db-4764-b7dd-e81e39072cbe"
          roleId: "8350205f-a305-4e39-abe9-bc082a80091a"
      responses:
        "400":
          application/problem+json: {"status": 939239, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  get-system-accounts:
    speakeasy-default-get-system-accounts:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
          filter: {"konnect_managed": true}
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "497f6eca-6276-4993-bfeb-53cbbbba6f08", "name": "Example System Account", "description": "This is a sample system account description.", "created_at": "2022-08-24T14:15:22Z", "updated_at": "2022-10-05T10:33:49Z", "konnect_managed": false}]}
        "400":
          application/problem+json: {"status": 764828, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "min_lowercase", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
  post-system-accounts:
    speakeasy-default-post-system-accounts:
      responses:
        "201":
          application/json: {"id": "497f6eca-6276-4993-bfeb-53cbbbba6f08", "name": "Example System Account", "description": "This is a sample system account description.", "created_at": "2022-08-24T14:15:22Z", "updated_at": "2022-10-05T10:33:49Z", "konnect_managed": false}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  get-system-accounts-id:
    speakeasy-default-get-system-accounts-id:
      parameters:
        path:
          accountId: "<id>"
      responses:
        "200":
          application/json: {"id": "497f6eca-6276-4993-bfeb-53cbbbba6f08", "name": "Example System Account", "description": "This is a sample system account description.", "created_at": "2022-08-24T14:15:22Z", "updated_at": "2022-10-05T10:33:49Z", "konnect_managed": false}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  patch-system-accounts-id:
    speakeasy-default-patch-system-accounts-id:
      parameters:
        path:
          accountId: "<id>"
      responses:
        "200":
          application/json: {"id": "497f6eca-6276-4993-bfeb-53cbbbba6f08", "name": "Example System Account", "description": "This is a sample system account description.", "created_at": "2022-08-24T14:15:22Z", "updated_at": "2022-10-05T10:33:49Z", "konnect_managed": false}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  delete-system-accounts-id:
    speakeasy-default-delete-system-accounts-id:
      parameters:
        path:
          accountId: "<id>"
      responses:
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  get-system-account-id-access-tokens:
    speakeasy-default-get-system-account-id-access-tokens:
      parameters:
        path:
          accountId: "<id>"
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "497f6eca-6276-4993-bfeb-53cbbbba6f08", "name": "Sample Access Token", "created_at": "2022-08-01T14:16:09Z", "updated_at": "2022-08-02T08:35:49Z", "expires_at": "2022-12-31T12:52:23Z", "last_used_at": "2022-10-24T13:05:42Z"}]}
        "400":
          application/problem+json: {"status": 916300, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  post-system-accounts-id-access-tokens:
    speakeasy-default-post-system-accounts-id-access-tokens:
      parameters:
        path:
          accountId: "<id>"
      responses:
        "201":
          application/json: {"id": "497f6eca-6276-4993-bfeb-53cbbbba6f08", "name": "Sample Access Token", "created_at": "2022-08-01T14:16:09Z", "updated_at": "2022-08-02T08:35:49Z", "expires_at": "2022-12-31T12:52:23Z", "last_used_at": "2022-10-24T13:05:42Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  get-system-accounts-id-access-tokens-id:
    speakeasy-default-get-system-accounts-id-access-tokens-id:
      parameters:
        path:
          accountId: "<id>"
          tokenId: "<id>"
      responses:
        "200":
          application/json: {"id": "497f6eca-6276-4993-bfeb-53cbbbba6f08", "name": "Sample Access Token", "created_at": "2022-08-01T14:16:09Z", "updated_at": "2022-08-02T08:35:49Z", "expires_at": "2022-12-31T12:52:23Z", "last_used_at": "2022-10-24T13:05:42Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  patch-system-accounts-id-access-tokens-id:
    speakeasy-default-patch-system-accounts-id-access-tokens-id:
      parameters:
        path:
          accountId: "<id>"
          tokenId: "<id>"
      responses:
        "200":
          application/json: {"id": "497f6eca-6276-4993-bfeb-53cbbbba6f08", "name": "Sample Access Token", "created_at": "2022-08-01T14:16:09Z", "updated_at": "2022-08-02T08:35:49Z", "expires_at": "2022-12-31T12:52:23Z", "last_used_at": "2022-10-24T13:05:42Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  delete-system-accounts-id-access-tokens-id:
    speakeasy-default-delete-system-accounts-id-access-tokens-id:
      parameters:
        path:
          accountId: "<id>"
          tokenId: "<id>"
      responses:
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  get-system-accounts-accountId-assigned-roles:
    speakeasy-default-get-system-accounts-account-id-assigned-roles:
      parameters:
        path:
          accountId: "<id>"
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "54cc6168-ebb1-4300-8168-d62a0dd08fc8", "role_name": "Viewer", "entity_id": "18ee2573-dec0-4b83-be99-fa7700bcdc61", "entity_type_name": "Control Planes", "entity_region": "us"}]}
        "400":
          application/problem+json: {"status": 686238, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max_length", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  post-system-accounts-accountId-assigned-roles:
    speakeasy-default-post-system-accounts-account-id-assigned-roles:
      parameters:
        path:
          accountId: "<id>"
      requestBody:
        application/json: {"role_name": "Viewer", "entity_id": "e67490ce-44dc-4cbd-b65e-b52c746fc26a", "entity_type_name": "Control Planes", "entity_region": "eu"}
      responses:
        "201":
          application/json: {"id": "54cc6168-ebb1-4300-8168-d62a0dd08fc8", "role_name": "Viewer", "entity_id": "18ee2573-dec0-4b83-be99-fa7700bcdc61", "entity_type_name": "Control Planes", "entity_region": "us"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  delete-system-accounts-accountId-assigned-roles-roleId:
    speakeasy-default-delete-system-accounts-account-id-assigned-roles-role-id:
      parameters:
        path:
          accountId: "<id>"
          roleId: "<id>"
      responses:
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  get-system-accounts-accountId-teams:
    speakeasy-default-get-system-accounts-account-id-teams:
      parameters:
        path:
          accountId: "<id>"
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "IDM - Developers", "description": "The developers for the IDM API.", "system_team": false, "labels": {"env": "test"}, "created_at": "1992-02-07T17:46:57.52Z", "updated_at": "2022-08-31T17:00:00.52Z"}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  get-teams-teamId-system-accounts:
    speakeasy-default-get-teams-team-id-system-accounts:
      parameters:
        path:
          teamId: "<id>"
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "497f6eca-6276-4993-bfeb-53cbbbba6f08", "name": "Example System Account", "description": "This is a sample system account description.", "created_at": "2022-08-24T14:15:22Z", "updated_at": "2022-10-05T10:33:49Z", "konnect_managed": false}]}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  post-teams-teamId-system-accounts:
    speakeasy-default-post-teams-team-id-system-accounts:
      parameters:
        path:
          teamId: "<id>"
      responses:
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  delete-teams-teamId-system-accounts-accountId:
    speakeasy-default-delete-teams-team-id-system-accounts-account-id:
      parameters:
        path:
          teamId: "<id>"
          accountId: "<id>"
      responses:
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-teams:
    speakeasy-default-list-teams:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "IDM - Developers", "description": "The developers for the IDM API.", "system_team": false, "labels": {"env": "test"}, "created_at": "1992-02-07T17:46:57.52Z", "updated_at": "2022-08-31T17:00:00.52Z"}]}
        "400":
          application/problem+json: {"status": 947905, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  create-team:
    speakeasy-default-create-team:
      requestBody:
        application/json: {"name": "IDM - Developers", "description": "The Identity Management (IDM) team.", "labels": {"env": "test"}}
      responses:
        "201":
          application/json: {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "IDM - Developers", "description": "The developers for the IDM API.", "system_team": false, "labels": {"env": "test"}, "created_at": "1992-02-07T17:46:57.52Z", "updated_at": "2022-08-31T17:00:00.52Z"}
        "400":
          application/problem+json: {"status": 207897, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}, {"field": "name", "source": "body", "reason": "is a required field"}]}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
  get-team:
    speakeasy-default-get-team:
      parameters:
        path:
          teamId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      responses:
        "200":
          application/json: {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "IDM - Developers", "description": "The developers for the IDM API.", "system_team": false, "labels": {"env": "test"}, "created_at": "1992-02-07T17:46:57.52Z", "updated_at": "2022-08-31T17:00:00.52Z"}
        "400":
          application/problem+json: {"status": 751351, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  update-team:
    speakeasy-default-update-team:
      parameters:
        path:
          teamId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      requestBody:
        application/json: {"name": "IDM - Developers", "description": "The Identity Management (IDM) API team.", "labels": {"env": "test"}}
      responses:
        "200":
          application/json: {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "IDM - Developers", "description": "The developers for the IDM API.", "system_team": false, "labels": {"env": "test"}, "created_at": "1992-02-07T17:46:57.52Z", "updated_at": "2022-08-31T17:00:00.52Z"}
        "400":
          application/problem+json: {"status": 403022, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}, {"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>"], "source": "body"}, {"field": "name", "source": "body", "reason": "is a required field"}]}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  delete-team:
    speakeasy-default-delete-team:
      parameters:
        path:
          teamId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      responses:
        "400":
          application/problem+json: {"status": 51371, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "max_items", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}, {"field": "name", "rule": "max_items", "maximum": 8, "source": "body", "reason": "must not have more than 8 characters"}]}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-team-users:
    speakeasy-default-list-team-users:
      parameters:
        path:
          teamId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
        query:
          page[size]: 10
          page[number]: 1
          filter: {"active": true}
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "email": "user@email.com", "full_name": "Test User", "preferred_name": "test", "active": true, "inferred_region": "us", "created_at": "2022-02-07T17:46:57.52Z", "updated_at": "2022-10-08T17:00:00.52Z"}]}
        "400":
          application/problem+json: {"status": 798427, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": [], "source": "body"}, {"field": "name", "rule": "min_items", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}, {"field": "name", "rule": "min_items", "minimum": 8, "source": "body", "reason": "must have at least 8 characters"}]}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  add-user-to-team:
    speakeasy-default-add-user-to-team:
      parameters:
        path:
          teamId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      requestBody:
        application/json: {"id": "df120cb4-f60b-47bc-a2f8-6a28e6a3c63b"}
      responses:
        "400":
          application/problem+json: {"status": 856389, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "dependent_fields", "reason": "is a required field", "dependents": ["<value 1>", "<value 2>", "<value 3>"], "source": "body"}]}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
        "409":
          application/problem+json: {"status": 409, "title": "Conflict", "type": "https://httpstatuses.com/409", "instance": "kong:trace:1234567890", "detail": "Conflict"}
  remove-user-from-team:
    speakeasy-default-remove-user-from-team:
      parameters:
        path:
          userId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
          teamId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      responses:
        "400":
          application/problem+json: {"status": 154714, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>", "<value 2>"], "source": "body"}, {"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>", "<value 2>"], "source": "body"}, {"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>", "<value 2>"], "source": "body"}]}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-user-teams:
    speakeasy-default-list-user-teams:
      parameters:
        path:
          userId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
        query:
          page[size]: 10
          page[number]: 1
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "name": "IDM - Developers", "description": "The developers for the IDM API.", "system_team": false, "labels": {"env": "test"}, "created_at": "1992-02-07T17:46:57.52Z", "updated_at": "2022-08-31T17:00:00.52Z"}]}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  list-users:
    speakeasy-default-list-users:
      parameters:
        query:
          page[size]: 10
          page[number]: 1
          filter: {"active": true}
      responses:
        "200":
          application/json: {"meta": {"page": {"number": 1, "size": 10, "total": 100}}, "data": [{"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "email": "user@email.com", "full_name": "Test User", "preferred_name": "test", "active": true, "inferred_region": "us", "created_at": "2022-02-07T17:46:57.52Z", "updated_at": "2022-10-08T17:00:00.52Z"}]}
        "400":
          application/problem+json: {"status": 907015, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": [{"field": "name", "source": "body", "reason": "is a required field"}, {"field": "name", "rule": "enum", "reason": "is a required field", "choices": ["<value 1>"], "source": "body"}]}
  get-user:
    speakeasy-default-get-user:
      parameters:
        path:
          userId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      responses:
        "200":
          application/json: {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "email": "user@email.com", "full_name": "Test User", "preferred_name": "test", "active": true, "inferred_region": "us", "created_at": "2022-02-07T17:46:57.52Z", "updated_at": "2022-10-08T17:00:00.52Z"}
        "400":
          application/problem+json: {"status": 401553, "title": "<value>", "instance": "<value>", "detail": "<value>", "invalid_parameters": []}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  update-user:
    speakeasy-default-update-user:
      parameters:
        path:
          userId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      requestBody:
        application/json: {"full_name": "James C. Woods", "preferred_name": "Jimmy"}
      responses:
        "200":
          application/json: {"id": "7f9fd312-a987-4628-b4c5-bb4f4fddd5f7", "email": "user@email.com", "full_name": "Test User", "preferred_name": "test", "active": true, "inferred_region": "us", "created_at": "2022-02-07T17:46:57.52Z", "updated_at": "2022-10-08T17:00:00.52Z"}
        "401":
          application/problem+json: {"status": 401, "title": "Unauthorized", "type": "https://httpstatuses.com/401", "instance": "kong:trace:1234567890", "detail": "Invalid credentials"}
        "403":
          application/problem+json: {"status": 403, "title": "Forbidden", "type": "https://httpstatuses.com/403", "instance": "kong:trace:1234567890", "detail": "Forbidden"}
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
  delete-user:
    speakeasy-default-delete-user:
      parameters:
        path:
          userId: "d32d905a-ed33-46a3-a093-d8f536af9a8a"
      responses:
        "404":
          application/problem+json: {"status": 404, "title": "Not Found", "type": "https://httpstatuses.com/404", "instance": "kong:trace:1234567890", "detail": "Not found"}
examplesVersion: 1.0.2
generatedTests: {}
